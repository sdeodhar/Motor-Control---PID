

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Tue Feb 03 15:19:26 2015

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F886
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 7 "main.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 7 "main.c"
    45  2007  E384               	dw 0xEFFF & 0xFFFF & 0xFFFC & 0xFFF7 & 0xFFEF & 0xFFDF & 0xFFBF & 0xFFFF & 0xFFFF & 0xF
                                 BFF & 0xF7FF ;#
    46                           # 8 "main.c"
    47                           	psect config,class=CONFIG,delta=2 ;#
    48                           # 8 "main.c"
    49  2008  FEFF               	dw 0xFFFF & 0xFEFF ;#
    50                           	FNCALL	_main,_initports
    51                           	FNCALL	_main,_USARTinit
    52                           	FNCALL	_main,_getData
    53                           	FNCALL	_main,_initall
    54                           	FNCALL	_main,_Make_Table
    55                           	FNCALL	_main,_get_Actrpm
    56                           	FNCALL	_main,_Calc_SetPoint
    57                           	FNCALL	_main,_USARTWriteChar
    58                           	FNCALL	_main,_USARTWriteString
    59                           	FNCALL	_main,_Calc_Err
    60                           	FNCALL	_main,_Calc_PID_op
    61                           	FNCALL	_getData,_USARTGetString
    62                           	FNCALL	_getData,_str_to_num
    63                           	FNCALL	_getData,_getrangeval
    64                           	FNCALL	_getData,_USARTWriteChar
    65                           	FNCALL	_getData,_USARTWriteString
    66                           	FNCALL	_getData,_DispallCur
    67                           	FNCALL	_getData,_ChkRange
    68                           	FNCALL	_getData,_StoreCurVal
    69                           	FNCALL	_initall,_initadc
    70                           	FNCALL	_initall,_Readeeprom
    71                           	FNCALL	_initall,_inittimer0
    72                           	FNCALL	_initall,_inittimer1
    73                           	FNCALL	_initall,_inittimer2
    74                           	FNCALL	_initall,_Calc_PID_const
    75                           	FNCALL	_initall,___lmul
    76                           	FNCALL	_initall,___lltoft
    77                           	FNCALL	_Calc_Err,_Calc_SetPoint
    78                           	FNCALL	_Calc_Err,_get_Actrpm
    79                           	FNCALL	_Calc_Err,___awtoft
    80                           	FNCALL	_StoreCurVal,_Writeeeprom
    81                           	FNCALL	_DispallCur,_Readeeprom
    82                           	FNCALL	_DispallCur,_USARTWriteChar
    83                           	FNCALL	_DispallCur,_USARTWriteInt
    84                           	FNCALL	_DispallCur,_USARTWriteString
    85                           	FNCALL	_Calc_PID_op,___ftmul
    86                           	FNCALL	_Calc_PID_op,___ftadd
    87                           	FNCALL	_Calc_PID_op,___ftge
    88                           	FNCALL	_Calc_PID_op,___ftneg
    89                           	FNCALL	_Calc_PID_op,___fttol
    90                           	FNCALL	_Calc_PID_op,___ftdiv
    91                           	FNCALL	_Calc_PID_op,_USARTWriteChar
    92                           	FNCALL	_Calc_PID_op,_USARTWriteInt
    93                           	FNCALL	_Calc_PID_op,_USARTWriteString
    94                           	FNCALL	_Calc_PID_op,_Make_Table
    95                           	FNCALL	_get_Actrpm,___lmul
    96                           	FNCALL	_get_Actrpm,___lldiv
    97                           	FNCALL	_get_Actrpm,_USARTWriteChar
    98                           	FNCALL	_get_Actrpm,_USARTWriteInt
    99                           	FNCALL	_get_Actrpm,_USARTWriteString
   100                           	FNCALL	_Calc_SetPoint,_Get_ADC_Count
   101                           	FNCALL	_Calc_SetPoint,___lmul
   102                           	FNCALL	_Calc_SetPoint,___lldiv
   103                           	FNCALL	_Calc_SetPoint,_USARTWriteChar
   104                           	FNCALL	_Calc_SetPoint,_USARTWriteInt
   105                           	FNCALL	_Calc_SetPoint,_USARTWriteString
   106                           	FNCALL	_Calc_PID_const,___ftdiv
   107                           	FNCALL	_Calc_PID_const,___lltoft
   108                           	FNCALL	_Calc_PID_const,___ftmul
   109                           	FNCALL	_Calc_PID_const,___ftadd
   110                           	FNCALL	_Calc_PID_const,___ftneg
   111                           	FNCALL	_Writeeeprom,_WriteEEP
   112                           	FNCALL	_Writeeeprom,_USARTWriteChar
   113                           	FNCALL	_Writeeeprom,_USARTWriteString
   114                           	FNCALL	_Readeeprom,_ReadEEP
   115                           	FNCALL	_Readeeprom,___lltoft
   116                           	FNCALL	___lltoft,___ftpack
   117                           	FNCALL	___awtoft,___ftpack
   118                           	FNCALL	___ftmul,___ftpack
   119                           	FNCALL	___ftdiv,___ftpack
   120                           	FNCALL	___ftadd,___ftpack
   121                           	FNCALL	_Make_Table,_SetMode
   122                           	FNCALL	_Make_Table,_SetDir
   123                           	FNCALL	_Make_Table,_SetTime
   124                           	FNCALL	_WriteEEP,_WrByte
   125                           	FNCALL	_ReadEEP,_RdByte
   126                           	FNCALL	_str_to_num,___lmul
   127                           	FNCALL	_USARTGetString,_UARTGetChar
   128                           	FNCALL	_USARTWriteInt,_USARTWriteChar
   129                           	FNCALL	_USARTWriteInt,___almod
   130                           	FNCALL	_USARTWriteInt,___aldiv
   131                           	FNCALL	_USARTWriteString,_USARTWriteChar
   132                           	FNROOT	_main
   133                           	FNCALL	_isrroutine,_MoveMotor
   134                           	FNCALL	intlevel1,_isrroutine
   135                           	global	intlevel1
   136                           	FNROOT	intlevel1
   137                           	global	USARTWriteInt@F1821
   138                           psect	idataBANK3,class=CODE,space=0,delta=2
   139                           global __pidataBANK3
   140  1AA9                     __pidataBANK3:
   141                           	file	"Serial.c"
   142                           	line	39
   143                           
   144                           ;initializer for USARTWriteInt@F1821
   145  1AA9  3430               	retlw	030h
   146  1AAA  3430               	retlw	030h
   147  1AAB  3430               	retlw	030h
   148  1AAC  3430               	retlw	030h
   149  1AAD  3430               	retlw	030h
   150  1AAE  3430               	retlw	030h
   151  1AAF  3430               	retlw	030h
   152  1AB0  3430               	retlw	030h
   153                           	global	_strtb
   154                           psect	strings,class=STRING,delta=2
   155                           global __pstrings
   156  07F7                     __pstrings:
   157                           ;	global	stringdir,stringtab,__stringbase
   158  07F7                     stringtab:
   159                           ;	String table - string pointers are 1 byte each
   160  07F7                     stringcode:stringdir:
      + 07F7                     stringdir:	
   161  07F7  3007               movlw high(stringdir)
   162  07F8  008A               movwf pclath
   163  07F9  0804               movf fsr,w
   164  07FA  0A84               incf fsr
   165  07FB  0782               	addwf pc
   166  07FC                     __stringbase:
   167  07FC  3400               	retlw	0
   168                           psect	strings
   169                           	file	"Motormain.h"
   170                           	line	106
   171  07FD                     _strtb:
   172  07FD  3409               	retlw	09h
   173                           	global	_strnw
   174                           psect	strings
   175                           	file	"Motormain.h"
   176                           	line	104
   177  07FE                     _strnw:
   178  07FE  340A               	retlw	0Ah
   179  07FF  3400               	retlw	0
   180                           	global	_strtb
   181                           	global	_strnw
   182                           	global	_Rpm
   183                           	global	_kc
   184                           	global	_SetPoint
   185                           	global	_ANTICLKVIZ
   186                           	global	_CLKVIZ
   187                           	global	_Command
   188                           	global	_MS100Flag
   189                           	global	_MotionComplete
   190                           	global	_PIDCycleNo
   191                           	global	_Cap_Diff
   192                           	global	_MaxVal
   193                           	global	_MinVal
   194                           	global	_Ti
   195                           	global	_Td
   196                           	global	_e2
   197                           	global	_k1
   198                           	global	_k2
   199                           	global	_k3
   200                           	global	_kd
   201                           	global	_ki
   202                           	global	_Capidx
   203                           	global	_Count4ms
   204                           	global	_ACurVal
   205                           	global	_BCurVal
   206                           	global	_BoardFreq
   207                           	global	_CurVal
   208                           	global	_DCurVal
   209                           	global	_ICurVal
   210                           	global	_NoTeeth
   211                           	global	_PCurVal
   212                           	global	_SCurVal
   213                           	global	_Tacho_Reading
   214                           	global	_ZCurVal
   215                           	global	_MaxStep
   216                           	global	_e0
   217                           	global	_e1
   218                           	global	_u
   219                           	global	_u1
   220                           	global	_ADC_Count
   221                           	global	_Cap_Diff1
   222                           	global	_CurNoStep
   223                           	global	_CurTotNoStep
   224                           	global	_DeadBand
   225                           	global	_New_Capture
   226                           	global	_Old_Capture
   227                           	global	_e
   228                           	global	_Crankflg
   229                           	global	_CurStepDir
   230                           	global	_CurStepMode
   231                           	global	_CurStepTime
   232                           	global	_flg
   233                           	global	_Commandstr
   234                           	global	_Pb
   235                           	global	_ADCON0
   236  001F                     _ADCON0	set	31
   237                           	global	_ADRESH
   238  001E                     _ADRESH	set	30
   239                           	global	_CCP2CON
   240  001D                     _CCP2CON	set	29
   241                           	global	_CCPR2H
   242  001C                     _CCPR2H	set	28
   243                           	global	_CCPR2L
   244  001B                     _CCPR2L	set	27
   245                           	global	_INTCON
   246  000B                     _INTCON	set	11
   247                           	global	_PORTAbits
   248  0005                     _PORTAbits	set	5
   249                           	global	_PORTBbits
   250  0006                     _PORTBbits	set	6
   251                           	global	_PORTCbits
   252  0007                     _PORTCbits	set	7
   253                           	global	_RCREG
   254  001A                     _RCREG	set	26
   255                           	global	_RCSTAbits
   256  0018                     _RCSTAbits	set	24
   257                           	global	_T1CON
   258  0010                     _T1CON	set	16
   259                           	global	_T2CON
   260  0012                     _T2CON	set	18
   261                           	global	_TMR0
   262  0001                     _TMR0	set	1
   263                           	global	_TMR1H
   264  000F                     _TMR1H	set	15
   265                           	global	_TMR1L
   266  000E                     _TMR1L	set	14
   267                           	global	_TMR2
   268  0011                     _TMR2	set	17
   269                           	global	_TXREG
   270  0019                     _TXREG	set	25
   271                           	global	_ADIF
   272  0066                     _ADIF	set	102
   273                           	global	_ADON
   274  00F8                     _ADON	set	248
   275                           	global	_CARRY
   276  0018                     _CARRY	set	24
   277                           	global	_CCP2IF
   278  0068                     _CCP2IF	set	104
   279                           	global	_EEIF
   280  006C                     _EEIF	set	108
   281                           	global	_GIE
   282  005F                     _GIE	set	95
   283                           	global	_GO
   284  00F9                     _GO	set	249
   285                           	global	_PEIE
   286  005E                     _PEIE	set	94
   287                           	global	_RCIF
   288  0065                     _RCIF	set	101
   289                           	global	_T0IE
   290  005D                     _T0IE	set	93
   291                           	global	_T0IF
   292  005A                     _T0IF	set	90
   293                           	global	_TMR1ON
   294  0080                     _TMR1ON	set	128
   295                           	global	_TMR2IF
   296  0061                     _TMR2IF	set	97
   297                           	global	_TMR2ON
   298  0092                     _TMR2ON	set	146
   299                           	global	_ADCON1
   300  009F                     _ADCON1	set	159
   301                           	global	_ADRESL
   302  009E                     _ADRESL	set	158
   303                           	global	_OPTION_REG
   304  0081                     _OPTION_REG	set	129
   305                           	global	_OSCCON
   306  008F                     _OSCCON	set	143
   307                           	global	_OSCTUNE
   308  0090                     _OSCTUNE	set	144
   309                           	global	_PIE1
   310  008C                     _PIE1	set	140
   311                           	global	_PR2
   312  0092                     _PR2	set	146
   313                           	global	_SPBRG
   314  0099                     _SPBRG	set	153
   315                           	global	_SPBRGH
   316  009A                     _SPBRGH	set	154
   317                           	global	_TRISA
   318  0085                     _TRISA	set	133
   319                           	global	_TRISB
   320  0086                     _TRISB	set	134
   321                           	global	_TRISC
   322  0087                     _TRISC	set	135
   323                           	global	_TRISCbits
   324  0087                     _TRISCbits	set	135
   325                           	global	_TXSTAbits
   326  0098                     _TXSTAbits	set	152
   327                           	global	_CCP2IE
   328  0468                     _CCP2IE	set	1128
   329                           	global	_PSA
   330  040B                     _PSA	set	1035
   331                           	global	_RCEN
   332  048B                     _RCEN	set	1163
   333                           	global	_RCIE
   334  0465                     _RCIE	set	1125
   335                           	global	_SYNC
   336  04C4                     _SYNC	set	1220
   337                           	global	_T0CS
   338  040D                     _T0CS	set	1037
   339                           	global	_T0SE
   340  040C                     _T0SE	set	1036
   341                           	global	_TMR2IE
   342  0461                     _TMR2IE	set	1121
   343                           	global	_EEADR
   344  010D                     _EEADR	set	269
   345                           	global	_EEDAT
   346  010C                     _EEDAT	set	268
   347                           	global	_EEDATA
   348  010C                     _EEDATA	set	268
   349                           	global	_ANSEL
   350  0188                     _ANSEL	set	392
   351                           	global	_ANSELH
   352  0189                     _ANSELH	set	393
   353                           	global	_EECON1
   354  018C                     _EECON1	set	396
   355                           	global	_EECON2
   356  018D                     _EECON2	set	397
   357                           	global	_BRG16
   358  0C3B                     _BRG16	set	3131
   359                           	global	_EEPGD
   360  0C67                     _EEPGD	set	3175
   361                           	global	_RD
   362  0C60                     _RD	set	3168
   363                           	global	_WR
   364  0C61                     _WR	set	3169
   365                           	global	_WREN
   366  0C62                     _WREN	set	3170
   367                           	file	"C:\Users\Admin\AppData\Local\Temp\s4eg."
   368                           	line	#
   369                           psect cinit,class=CODE,delta=2
   370                           global start_initialization
   371  1C0E                     start_initialization:
   372                           
   373                           psect	bssCOMMON,class=COMMON,space=1
   374                           global __pbssCOMMON
   375  007C                     __pbssCOMMON:
   376  007C                     _Capidx:
   377  007C                            ds      1
   378                           
   379  007D                     _Count4ms:
   380  007D                            ds      1
   381                           
   382                           psect	bssBANK0,class=BANK0,space=1
   383                           global __pbssBANK0
   384  0061                     __pbssBANK0:
   385  0061                     _Rpm:
   386  0061                            ds      4
   387                           
   388  0065                     _kc:
   389  0065                            ds      3
   390                           
   391  0068                     _SetPoint:
   392  0068                            ds      2
   393                           
   394  006A                     _ANTICLKVIZ:
   395  006A                            ds      1
   396                           
   397  006B                     _CLKVIZ:
   398  006B                            ds      1
   399                           
   400  006C                     _Command:
   401  006C                            ds      1
   402                           
   403  006D                     _MS100Flag:
   404  006D                            ds      1
   405                           
   406  006E                     _MotionComplete:
   407  006E                            ds      1
   408                           
   409  006F                     _PIDCycleNo:
   410  006F                            ds      1
   411                           
   412                           psect	bssBANK1,class=BANK1,space=1
   413                           global __pbssBANK1
   414  00A0                     __pbssBANK1:
   415  00A0                     _ACurVal:
   416  00A0                            ds      4
   417                           
   418  00A4                     _BCurVal:
   419  00A4                            ds      4
   420                           
   421  00A8                     _BoardFreq:
   422  00A8                            ds      4
   423                           
   424  00AC                     _CurVal:
   425  00AC                            ds      4
   426                           
   427  00B0                     _DCurVal:
   428  00B0                            ds      4
   429                           
   430  00B4                     _ICurVal:
   431  00B4                            ds      4
   432                           
   433  00B8                     _NoTeeth:
   434  00B8                            ds      4
   435                           
   436  00BC                     _PCurVal:
   437  00BC                            ds      4
   438                           
   439  00C0                     _SCurVal:
   440  00C0                            ds      4
   441                           
   442  00C4                     _Tacho_Reading:
   443  00C4                            ds      4
   444                           
   445  00C8                     _ZCurVal:
   446  00C8                            ds      4
   447                           
   448  00CC                     _MaxStep:
   449  00CC                            ds      3
   450                           
   451  00CF                     _e0:
   452  00CF                            ds      3
   453                           
   454  00D2                     _e1:
   455  00D2                            ds      3
   456                           
   457  00D5                     _u:
   458  00D5                            ds      3
   459                           
   460  00D8                     _u1:
   461  00D8                            ds      3
   462                           
   463  00DB                     _ADC_Count:
   464  00DB                            ds      2
   465                           
   466  00DD                     _Cap_Diff1:
   467  00DD                            ds      2
   468                           
   469  00DF                     _CurNoStep:
   470  00DF                            ds      2
   471                           
   472  00E1                     _CurTotNoStep:
   473  00E1                            ds      2
   474                           
   475  00E3                     _DeadBand:
   476  00E3                            ds      2
   477                           
   478  00E5                     _New_Capture:
   479  00E5                            ds      2
   480                           
   481  00E7                     _Old_Capture:
   482  00E7                            ds      2
   483                           
   484  00E9                     _e:
   485  00E9                            ds      2
   486                           
   487  00EB                     _Crankflg:
   488  00EB                            ds      1
   489                           
   490  00EC                     _CurStepDir:
   491  00EC                            ds      1
   492                           
   493  00ED                     _CurStepMode:
   494  00ED                            ds      1
   495                           
   496  00EE                     _CurStepTime:
   497  00EE                            ds      1
   498                           
   499  00EF                     _flg:
   500  00EF                            ds      1
   501                           
   502                           psect	bssBANK3,class=BANK3,space=1
   503                           global __pbssBANK3
   504  0190                     __pbssBANK3:
   505  0190                     _Cap_Diff:
   506  0190                            ds      16
   507                           
   508  01A0                     _MaxVal:
   509  01A0                            ds      4
   510                           
   511  01A4                     _MinVal:
   512  01A4                            ds      4
   513                           
   514  01A8                     _Ti:
   515  01A8                            ds      4
   516                           
   517  01AC                     _Td:
   518  01AC                            ds      3
   519                           
   520  01AF                     _e2:
   521  01AF                            ds      3
   522                           
   523  01B2                     _k1:
   524  01B2                            ds      3
   525                           
   526  01B5                     _k2:
   527  01B5                            ds      3
   528                           
   529  01B8                     _k3:
   530  01B8                            ds      3
   531                           
   532  01BB                     _kd:
   533  01BB                            ds      3
   534                           
   535  01BE                     _ki:
   536  01BE                            ds      3
   537                           
   538  01C1                     _Commandstr:
   539  01C1                            ds      10
   540                           
   541  01CB                     _Pb:
   542  01CB                            ds      4
   543                           
   544                           psect	dataBANK3,class=BANK3,space=1
   545                           global __pdataBANK3
   546  01CF                     __pdataBANK3:
   547                           	file	"Serial.c"
   548                           	line	39
   549  01CF                     USARTWriteInt@F1821:
   550  01CF                            ds      8
   551                           
   552                           psect clrtext,class=CODE,delta=2
   553                           global clear_ram
   554                           ;	Called with FSR containing the base address, and
   555                           ;	W with the last address+1
   556  1AA1                     clear_ram:
   557  1AA1  0064               	clrwdt			;clear the watchdog before getting into this loop
   558  1AA2                     clrloop:
   559  1AA2  0180               	clrf	indf		;clear RAM location pointed to by FSR
   560  1AA3  0A84               	incf	fsr,f		;increment pointer
   561  1AA4  0604               	xorwf	fsr,w		;XOR with final address
   562  1AA5  1903               	btfsc	status,2	;have we reached the end yet?
   563  1AA6  3400               	retlw	0		;all done for this memory range, return
   564  1AA7  0604               	xorwf	fsr,w		;XOR again to restore value
   565  1AA8  2AA2               	goto	clrloop		;do the next byte
   566                           
   567                           ; Clear objects allocated to COMMON
   568                           psect cinit,class=CODE,delta=2
   569  1C0E  01FC               	clrf	((__pbssCOMMON)+0)&07Fh
   570  1C0F  01FD               	clrf	((__pbssCOMMON)+1)&07Fh
   571                           ; Clear objects allocated to BANK0
   572                           psect cinit,class=CODE,delta=2
   573  1C10  1383               	bcf	status, 7	;select IRP bank0
   574  1C11  3061               	movlw	low(__pbssBANK0)
   575  1C12  0084               	movwf	fsr
   576  1C13  3070               	movlw	low((__pbssBANK0)+0Fh)
   577  1C14  160A  158A  22A1   	fcall	clear_ram
              160A  158A         
   578                           ; Clear objects allocated to BANK1
   579                           psect cinit,class=CODE,delta=2
   580  1C19  30A0               	movlw	low(__pbssBANK1)
   581  1C1A  0084               	movwf	fsr
   582  1C1B  30F0               	movlw	low((__pbssBANK1)+050h)
   583  1C1C  160A  158A  22A1   	fcall	clear_ram
              160A  158A         
   584                           ; Clear objects allocated to BANK3
   585                           psect cinit,class=CODE,delta=2
   586  1C21  1783               	bsf	status, 7	;select IRP bank2
   587  1C22  3090               	movlw	low(__pbssBANK3)
   588  1C23  0084               	movwf	fsr
   589  1C24  30CF               	movlw	low((__pbssBANK3)+03Fh)
   590  1C25  160A  158A  22A1   	fcall	clear_ram
              160A  158A         
   591                           global btemp
   592                           psect inittext,class=CODE,delta=2
   593                           global init_fetch,btemp
   594                           ;	Called with low address in FSR and high address in W
   595  1B2A                     init_fetch:
   596  1B2A  087E               	movf btemp,w
   597  1B2B  008A               	movwf pclath
   598  1B2C  087F               	movf btemp+1,w
   599  1B2D  0082               	movwf pc
   600                           global init_ram
   601                           ;Called with:
   602                           ;	high address of idata address in btemp 
   603                           ;	low address of idata address in btemp+1 
   604                           ;	low address of data in FSR
   605                           ;	high address + 1 of data in btemp-1
   606  1B2E                     init_ram:
   607  1B2E  160A  158A  232A   	fcall init_fetch
              160A  158A         
   608  1B33  0080               	movwf indf,f
   609  1B34  0A84               	incf fsr,f
   610  1B35  0804               	movf fsr,w
   611  1B36  067D               	xorwf btemp-1,w
   612  1B37  1903               	btfsc status,2
   613  1B38  3400               	retlw 0
   614  1B39  0AFF               	incf btemp+1,f
   615  1B3A  1903               	btfsc status,2
   616  1B3B  0AFE               	incf btemp,f
   617  1B3C  2B2E               	goto init_ram
   618                           ; Initialize objects allocated to BANK3
   619                           psect cinit,class=CODE,delta=2
   620                           global init_ram, __pidataBANK3
   621  1C2A  30D7               	movlw low(__pdataBANK3+8)
   622  1C2B  00FD               	movwf btemp-1,f
   623  1C2C  301A               	movlw high(__pidataBANK3)
   624  1C2D  00FE               	movwf btemp,f
   625  1C2E  30A9               	movlw low(__pidataBANK3)
   626  1C2F  00FF               	movwf btemp+1,f
   627  1C30  30CF               	movlw low(__pdataBANK3)
   628  1C31  0084               	movwf fsr,f
   629  1C32  160A  158A  232E   	fcall init_ram
              160A  158A         
   630                           psect cinit,class=CODE,delta=2
   631                           global end_of_initialization
   632                           
   633                           ;End of C runtime variable initialization code
   634                           
   635  1C37                     end_of_initialization:
   636  1C37  0183               clrf status
   637  1C38  120A  158A  2AFA   ljmp _main	;jump to C main() function
   638                           psect	cstackCOMMON,class=COMMON,space=1
   639                           global __pcstackCOMMON
   640  0070                     __pcstackCOMMON:
   641                           	global	?_Readeeprom
   642  0070                     ?_Readeeprom:	; 0 bytes @ 0x0
   643                           	global	?_Writeeeprom
   644  0070                     ?_Writeeeprom:	; 0 bytes @ 0x0
   645                           	global	?_Get_ADC_Count
   646  0070                     ?_Get_ADC_Count:	; 0 bytes @ 0x0
   647                           	global	?_USARTinit
   648  0070                     ?_USARTinit:	; 0 bytes @ 0x0
   649                           	global	?_USARTWriteChar
   650  0070                     ?_USARTWriteChar:	; 0 bytes @ 0x0
   651                           	global	?_USARTWriteString
   652  0070                     ?_USARTWriteString:	; 0 bytes @ 0x0
   653                           	global	?_DispallCur
   654  0070                     ?_DispallCur:	; 0 bytes @ 0x0
   655                           	global	?_getrangeval
   656  0070                     ?_getrangeval:	; 0 bytes @ 0x0
   657                           	global	?_Calc_PID_const
   658  0070                     ?_Calc_PID_const:	; 0 bytes @ 0x0
   659                           	global	?_Calc_SetPoint
   660  0070                     ?_Calc_SetPoint:	; 0 bytes @ 0x0
   661                           	global	?_get_Actrpm
   662  0070                     ?_get_Actrpm:	; 0 bytes @ 0x0
   663                           	global	?_Calc_Err
   664  0070                     ?_Calc_Err:	; 0 bytes @ 0x0
   665                           	global	?_initports
   666  0070                     ?_initports:	; 0 bytes @ 0x0
   667                           	global	?_initadc
   668  0070                     ?_initadc:	; 0 bytes @ 0x0
   669                           	global	?_inittimer1
   670  0070                     ?_inittimer1:	; 0 bytes @ 0x0
   671                           	global	?_inittimer2
   672  0070                     ?_inittimer2:	; 0 bytes @ 0x0
   673                           	global	?_inittimer0
   674  0070                     ?_inittimer0:	; 0 bytes @ 0x0
   675                           	global	?_initall
   676  0070                     ?_initall:	; 0 bytes @ 0x0
   677                           	global	?_SetMode
   678  0070                     ?_SetMode:	; 0 bytes @ 0x0
   679                           	global	?_SetDir
   680  0070                     ?_SetDir:	; 0 bytes @ 0x0
   681                           	global	?_SetTime
   682  0070                     ?_SetTime:	; 0 bytes @ 0x0
   683                           	global	??_MoveMotor
   684  0070                     ??_MoveMotor:	; 0 bytes @ 0x0
   685                           	global	?_main
   686  0070                     ?_main:	; 0 bytes @ 0x0
   687                           	global	?_isrroutine
   688  0070                     ?_isrroutine:	; 0 bytes @ 0x0
   689                           	global	??_isrroutine
   690  0070                     ??_isrroutine:	; 0 bytes @ 0x0
   691                           	global	?_UARTGetChar
   692  0070                     ?_UARTGetChar:	; 1 bytes @ 0x0
   693                           	global	?_USARTGetString
   694  0070                     ?_USARTGetString:	; 1 bytes @ 0x0
   695                           	global	?_getData
   696  0070                     ?_getData:	; 1 bytes @ 0x0
   697                           	global	?_RdByte
   698  0070                     ?_RdByte:	; 1 bytes @ 0x0
   699                           	global	?_Calc_PID_op
   700  0070                     ?_Calc_PID_op:	; 1 bytes @ 0x0
   701                           	global	?_MoveMotor
   702  0070                     ?_MoveMotor:	; 1 bytes @ 0x0
   703  0070                     	ds	11
   704                           	global	isrroutine@idx
   705  007B                     isrroutine@idx:	; 1 bytes @ 0xB
   706  007B                     	ds	1
   707                           psect	cstackBANK0,class=BANK0,space=1
   708                           global __pcstackBANK0
   709  0020                     __pcstackBANK0:
   710                           	global	??_Get_ADC_Count
   711  0020                     ??_Get_ADC_Count:	; 0 bytes @ 0x0
   712                           	global	?_Make_Table
   713  0020                     ?_Make_Table:	; 0 bytes @ 0x0
   714                           	global	??_USARTinit
   715  0020                     ??_USARTinit:	; 0 bytes @ 0x0
   716                           	global	??_USARTWriteChar
   717  0020                     ??_USARTWriteChar:	; 0 bytes @ 0x0
   718                           	global	??_UARTGetChar
   719  0020                     ??_UARTGetChar:	; 0 bytes @ 0x0
   720                           	global	??_getrangeval
   721  0020                     ??_getrangeval:	; 0 bytes @ 0x0
   722                           	global	??_RdByte
   723  0020                     ??_RdByte:	; 0 bytes @ 0x0
   724                           	global	??_initports
   725  0020                     ??_initports:	; 0 bytes @ 0x0
   726                           	global	??_initadc
   727  0020                     ??_initadc:	; 0 bytes @ 0x0
   728                           	global	??_inittimer1
   729  0020                     ??_inittimer1:	; 0 bytes @ 0x0
   730                           	global	??_inittimer2
   731  0020                     ??_inittimer2:	; 0 bytes @ 0x0
   732                           	global	??_inittimer0
   733  0020                     ??_inittimer0:	; 0 bytes @ 0x0
   734                           	global	??_SetMode
   735  0020                     ??_SetMode:	; 0 bytes @ 0x0
   736                           	global	??_SetDir
   737  0020                     ??_SetDir:	; 0 bytes @ 0x0
   738                           	global	??_SetTime
   739  0020                     ??_SetTime:	; 0 bytes @ 0x0
   740                           	global	?_ChkRange
   741  0020                     ?_ChkRange:	; 1 bytes @ 0x0
   742                           	global	?_WrByte
   743  0020                     ?_WrByte:	; 1 bytes @ 0x0
   744                           	global	?___ftpack
   745  0020                     ?___ftpack:	; 3 bytes @ 0x0
   746                           	global	?___lmul
   747  0020                     ?___lmul:	; 4 bytes @ 0x0
   748                           	global	?___almod
   749  0020                     ?___almod:	; 4 bytes @ 0x0
   750                           	global	?___aldiv
   751  0020                     ?___aldiv:	; 4 bytes @ 0x0
   752                           	global	USARTWriteChar@ch
   753  0020                     USARTWriteChar@ch:	; 1 bytes @ 0x0
   754                           	global	WrByte@data
   755  0020                     WrByte@data:	; 1 bytes @ 0x0
   756                           	global	Make_Table@TotNoStep
   757  0020                     Make_Table@TotNoStep:	; 2 bytes @ 0x0
   758                           	global	___ftpack@arg
   759  0020                     ___ftpack@arg:	; 3 bytes @ 0x0
   760                           	global	ChkRange@val
   761  0020                     ChkRange@val:	; 4 bytes @ 0x0
   762                           	global	___lmul@multiplier
   763  0020                     ___lmul@multiplier:	; 4 bytes @ 0x0
   764                           	global	___almod@divisor
   765  0020                     ___almod@divisor:	; 4 bytes @ 0x0
   766                           	global	___aldiv@divisor
   767  0020                     ___aldiv@divisor:	; 4 bytes @ 0x0
   768  0020                     	ds	1
   769                           	global	??_USARTWriteString
   770  0021                     ??_USARTWriteString:	; 0 bytes @ 0x1
   771                           	global	??_WrByte
   772  0021                     ??_WrByte:	; 0 bytes @ 0x1
   773                           	global	UARTGetChar@temp
   774  0021                     UARTGetChar@temp:	; 1 bytes @ 0x1
   775                           	global	RdByte@addr
   776  0021                     RdByte@addr:	; 1 bytes @ 0x1
   777                           	global	WrByte@addr
   778  0021                     WrByte@addr:	; 1 bytes @ 0x1
   779  0021                     	ds	1
   780                           	global	??_Make_Table
   781  0022                     ??_Make_Table:	; 0 bytes @ 0x2
   782                           	global	??_USARTGetString
   783  0022                     ??_USARTGetString:	; 0 bytes @ 0x2
   784                           	global	?_WriteEEP
   785  0022                     ?_WriteEEP:	; 1 bytes @ 0x2
   786                           	global	USARTWriteString@str
   787  0022                     USARTWriteString@str:	; 1 bytes @ 0x2
   788                           	global	RdByte@Data
   789  0022                     RdByte@Data:	; 1 bytes @ 0x2
   790                           	global	WriteEEP@Data
   791  0022                     WriteEEP@Data:	; 4 bytes @ 0x2
   792  0022                     	ds	1
   793                           	global	?_ReadEEP
   794  0023                     ?_ReadEEP:	; 4 bytes @ 0x3
   795                           	global	USARTGetString@i
   796  0023                     USARTGetString@i:	; 1 bytes @ 0x3
   797                           	global	___ftpack@exp
   798  0023                     ___ftpack@exp:	; 1 bytes @ 0x3
   799  0023                     	ds	1
   800                           	global	??_ChkRange
   801  0024                     ??_ChkRange:	; 0 bytes @ 0x4
   802                           	global	USARTGetString@charcur
   803  0024                     USARTGetString@charcur:	; 1 bytes @ 0x4
   804                           	global	___ftpack@sign
   805  0024                     ___ftpack@sign:	; 1 bytes @ 0x4
   806                           	global	___lmul@multiplicand
   807  0024                     ___lmul@multiplicand:	; 4 bytes @ 0x4
   808                           	global	___almod@dividend
   809  0024                     ___almod@dividend:	; 4 bytes @ 0x4
   810                           	global	___aldiv@dividend
   811  0024                     ___aldiv@dividend:	; 4 bytes @ 0x4
   812  0024                     	ds	1
   813                           	global	??___ftpack
   814  0025                     ??___ftpack:	; 0 bytes @ 0x5
   815  0025                     	ds	1
   816                           	global	WriteEEP@addr
   817  0026                     WriteEEP@addr:	; 1 bytes @ 0x6
   818  0026                     	ds	1
   819                           	global	??_ReadEEP
   820  0027                     ??_ReadEEP:	; 0 bytes @ 0x7
   821                           	global	??_WriteEEP
   822  0027                     ??_WriteEEP:	; 0 bytes @ 0x7
   823  0027                     	ds	1
   824                           	global	??___lmul
   825  0028                     ??___lmul:	; 0 bytes @ 0x8
   826                           	global	?___ftge
   827  0028                     ?___ftge:	; 1 bit 
   828                           	global	??___almod
   829  0028                     ??___almod:	; 0 bytes @ 0x8
   830                           	global	??___aldiv
   831  0028                     ??___aldiv:	; 0 bytes @ 0x8
   832                           	global	?___awtoft
   833  0028                     ?___awtoft:	; 3 bytes @ 0x8
   834                           	global	?___ftneg
   835  0028                     ?___ftneg:	; 3 bytes @ 0x8
   836                           	global	?___fttol
   837  0028                     ?___fttol:	; 4 bytes @ 0x8
   838                           	global	___awtoft@c
   839  0028                     ___awtoft@c:	; 2 bytes @ 0x8
   840                           	global	___fttol@f1
   841  0028                     ___fttol@f1:	; 3 bytes @ 0x8
   842                           	global	___ftneg@f1
   843  0028                     ___ftneg@f1:	; 3 bytes @ 0x8
   844                           	global	___ftge@ff1
   845  0028                     ___ftge@ff1:	; 3 bytes @ 0x8
   846  0028                     	ds	1
   847                           	global	WriteEEP@i
   848  0029                     WriteEEP@i:	; 1 bytes @ 0x9
   849                           	global	___almod@counter
   850  0029                     ___almod@counter:	; 1 bytes @ 0x9
   851                           	global	___aldiv@counter
   852  0029                     ___aldiv@counter:	; 1 bytes @ 0x9
   853                           	global	___lmul@product
   854  0029                     ___lmul@product:	; 4 bytes @ 0x9
   855  0029                     	ds	1
   856                           	global	WriteEEP@status
   857  002A                     WriteEEP@status:	; 1 bytes @ 0xA
   858                           	global	___almod@sign
   859  002A                     ___almod@sign:	; 1 bytes @ 0xA
   860                           	global	___aldiv@sign
   861  002A                     ___aldiv@sign:	; 1 bytes @ 0xA
   862  002A                     	ds	1
   863                           	global	??_Writeeeprom
   864  002B                     ??_Writeeeprom:	; 0 bytes @ 0xB
   865                           	global	??___awtoft
   866  002B                     ??___awtoft:	; 0 bytes @ 0xB
   867                           	global	??___ftneg
   868  002B                     ??___ftneg:	; 0 bytes @ 0xB
   869                           	global	?___ftmul
   870  002B                     ?___ftmul:	; 3 bytes @ 0xB
   871                           	global	ReadEEP@addr
   872  002B                     ReadEEP@addr:	; 1 bytes @ 0xB
   873                           	global	___ftmul@f1
   874  002B                     ___ftmul@f1:	; 3 bytes @ 0xB
   875                           	global	___ftge@ff2
   876  002B                     ___ftge@ff2:	; 3 bytes @ 0xB
   877                           	global	___aldiv@quotient
   878  002B                     ___aldiv@quotient:	; 4 bytes @ 0xB
   879  002B                     	ds	1
   880                           	global	??___fttol
   881  002C                     ??___fttol:	; 0 bytes @ 0xC
   882                           	global	ReadEEP@DataH
   883  002C                     ReadEEP@DataH:	; 4 bytes @ 0xC
   884  002C                     	ds	1
   885                           	global	?___lltoft
   886  002D                     ?___lltoft:	; 3 bytes @ 0xD
   887                           	global	?_str_to_num
   888  002D                     ?_str_to_num:	; 4 bytes @ 0xD
   889                           	global	?___lldiv
   890  002D                     ?___lldiv:	; 4 bytes @ 0xD
   891                           	global	___awtoft@sign
   892  002D                     ___awtoft@sign:	; 1 bytes @ 0xD
   893                           	global	___lldiv@divisor
   894  002D                     ___lldiv@divisor:	; 4 bytes @ 0xD
   895                           	global	___lltoft@c
   896  002D                     ___lltoft@c:	; 4 bytes @ 0xD
   897  002D                     	ds	1
   898                           	global	??___ftge
   899  002E                     ??___ftge:	; 0 bytes @ 0xE
   900                           	global	___ftmul@f2
   901  002E                     ___ftmul@f2:	; 3 bytes @ 0xE
   902  002E                     	ds	1
   903                           	global	?_USARTWriteInt
   904  002F                     ?_USARTWriteInt:	; 0 bytes @ 0xF
   905                           	global	USARTWriteInt@val
   906  002F                     USARTWriteInt@val:	; 4 bytes @ 0xF
   907  002F                     	ds	1
   908                           	global	ReadEEP@i
   909  0030                     ReadEEP@i:	; 1 bytes @ 0x10
   910                           	global	___fttol@sign1
   911  0030                     ___fttol@sign1:	; 1 bytes @ 0x10
   912  0030                     	ds	1
   913                           	global	??_str_to_num
   914  0031                     ??_str_to_num:	; 0 bytes @ 0x11
   915                           	global	??___ftmul
   916  0031                     ??___ftmul:	; 0 bytes @ 0x11
   917                           	global	??___lltoft
   918  0031                     ??___lltoft:	; 0 bytes @ 0x11
   919                           	global	Writeeeprom@retval
   920  0031                     Writeeeprom@retval:	; 1 bytes @ 0x11
   921                           	global	___fttol@lval
   922  0031                     ___fttol@lval:	; 4 bytes @ 0x11
   923                           	global	___lldiv@dividend
   924  0031                     ___lldiv@dividend:	; 4 bytes @ 0x11
   925  0031                     	ds	1
   926                           	global	?_StoreCurVal
   927  0032                     ?_StoreCurVal:	; 0 bytes @ 0x12
   928                           	global	___lltoft@exp
   929  0032                     ___lltoft@exp:	; 1 bytes @ 0x12
   930                           	global	StoreCurVal@val
   931  0032                     StoreCurVal@val:	; 4 bytes @ 0x12
   932  0032                     	ds	1
   933                           	global	??_Readeeprom
   934  0033                     ??_Readeeprom:	; 0 bytes @ 0x13
   935                           	global	??_USARTWriteInt
   936  0033                     ??_USARTWriteInt:	; 0 bytes @ 0x13
   937  0033                     	ds	2
   938                           	global	??___lldiv
   939  0035                     ??___lldiv:	; 0 bytes @ 0x15
   940                           	global	___ftmul@exp
   941  0035                     ___ftmul@exp:	; 1 bytes @ 0x15
   942                           	global	___fttol@exp1
   943  0035                     ___fttol@exp1:	; 1 bytes @ 0x15
   944  0035                     	ds	1
   945                           	global	??_StoreCurVal
   946  0036                     ??_StoreCurVal:	; 0 bytes @ 0x16
   947                           	global	?___ftdiv
   948  0036                     ?___ftdiv:	; 3 bytes @ 0x16
   949                           	global	___ftdiv@f2
   950  0036                     ___ftdiv@f2:	; 3 bytes @ 0x16
   951                           	global	___ftmul@f3_as_product
   952  0036                     ___ftmul@f3_as_product:	; 3 bytes @ 0x16
   953                           	global	___lldiv@quotient
   954  0036                     ___lldiv@quotient:	; 4 bytes @ 0x16
   955  0036                     	ds	1
   956                           	global	USARTWriteInt@str
   957  0037                     USARTWriteInt@str:	; 8 bytes @ 0x17
   958  0037                     	ds	1
   959                           	global	str_to_num@Num
   960  0038                     str_to_num@Num:	; 4 bytes @ 0x18
   961  0038                     	ds	1
   962                           	global	___ftmul@cntr
   963  0039                     ___ftmul@cntr:	; 1 bytes @ 0x19
   964                           	global	___ftdiv@f1
   965  0039                     ___ftdiv@f1:	; 3 bytes @ 0x19
   966  0039                     	ds	1
   967                           	global	___ftmul@sign
   968  003A                     ___ftmul@sign:	; 1 bytes @ 0x1A
   969                           	global	___lldiv@counter
   970  003A                     ___lldiv@counter:	; 1 bytes @ 0x1A
   971  003A                     	ds	2
   972                           	global	??___ftdiv
   973  003C                     ??___ftdiv:	; 0 bytes @ 0x1C
   974                           	global	str_to_num@i
   975  003C                     str_to_num@i:	; 1 bytes @ 0x1C
   976  003C                     	ds	1
   977                           	global	str_to_num@String
   978  003D                     str_to_num@String:	; 1 bytes @ 0x1D
   979  003D                     	ds	2
   980                           	global	USARTWriteInt@i
   981  003F                     USARTWriteInt@i:	; 2 bytes @ 0x1F
   982  003F                     	ds	1
   983                           	global	___ftdiv@cntr
   984  0040                     ___ftdiv@cntr:	; 1 bytes @ 0x20
   985  0040                     	ds	1
   986                           	global	??_DispallCur
   987  0041                     ??_DispallCur:	; 0 bytes @ 0x21
   988                           	global	??_Calc_SetPoint
   989  0041                     ??_Calc_SetPoint:	; 0 bytes @ 0x21
   990                           	global	??_get_Actrpm
   991  0041                     ??_get_Actrpm:	; 0 bytes @ 0x21
   992                           	global	___ftdiv@f3
   993  0041                     ___ftdiv@f3:	; 3 bytes @ 0x21
   994  0041                     	ds	3
   995                           	global	___ftdiv@exp
   996  0044                     ___ftdiv@exp:	; 1 bytes @ 0x24
   997  0044                     	ds	1
   998                           	global	??_getData
   999  0045                     ??_getData:	; 0 bytes @ 0x25
  1000                           	global	___ftdiv@sign
  1001  0045                     ___ftdiv@sign:	; 1 bytes @ 0x25
  1002  0045                     	ds	1
  1003                           	global	?___ftadd
  1004  0046                     ?___ftadd:	; 3 bytes @ 0x26
  1005                           	global	getData@i
  1006  0046                     getData@i:	; 1 bytes @ 0x26
  1007                           	global	___ftadd@f1
  1008  0046                     ___ftadd@f1:	; 3 bytes @ 0x26
  1009  0046                     	ds	3
  1010                           	global	___ftadd@f2
  1011  0049                     ___ftadd@f2:	; 3 bytes @ 0x29
  1012                           	global	Calc_SetPoint@temp
  1013  0049                     Calc_SetPoint@temp:	; 4 bytes @ 0x29
  1014  0049                     	ds	3
  1015                           	global	??___ftadd
  1016  004C                     ??___ftadd:	; 0 bytes @ 0x2C
  1017  004C                     	ds	1
  1018                           	global	??_Calc_Err
  1019  004D                     ??_Calc_Err:	; 0 bytes @ 0x2D
  1020  004D                     	ds	2
  1021                           	global	Calc_Err@errno
  1022  004F                     Calc_Err@errno:	; 1 bytes @ 0x2F
  1023  004F                     	ds	1
  1024                           	global	___ftadd@sign
  1025  0050                     ___ftadd@sign:	; 1 bytes @ 0x30
  1026  0050                     	ds	1
  1027                           	global	___ftadd@exp2
  1028  0051                     ___ftadd@exp2:	; 1 bytes @ 0x31
  1029  0051                     	ds	1
  1030                           	global	___ftadd@exp1
  1031  0052                     ___ftadd@exp1:	; 1 bytes @ 0x32
  1032  0052                     	ds	1
  1033                           	global	??_Calc_PID_const
  1034  0053                     ??_Calc_PID_const:	; 0 bytes @ 0x33
  1035                           	global	??_Calc_PID_op
  1036  0053                     ??_Calc_PID_op:	; 0 bytes @ 0x33
  1037                           	global	Calc_PID_const@Ti1
  1038  0053                     Calc_PID_const@Ti1:	; 3 bytes @ 0x33
  1039  0053                     	ds	1
  1040                           	global	_Calc_PID_op$8870
  1041  0054                     _Calc_PID_op$8870:	; 3 bytes @ 0x34
  1042  0054                     	ds	2
  1043                           	global	_Calc_PID_const$8869
  1044  0056                     _Calc_PID_const$8869:	; 3 bytes @ 0x36
  1045  0056                     	ds	1
  1046                           	global	Calc_PID_op@angle
  1047  0057                     Calc_PID_op@angle:	; 2 bytes @ 0x37
  1048  0057                     	ds	2
  1049                           	global	Calc_PID_op@NoStepOut
  1050  0059                     Calc_PID_op@NoStepOut:	; 2 bytes @ 0x39
  1051                           	global	Calc_PID_const@Td1
  1052  0059                     Calc_PID_const@Td1:	; 3 bytes @ 0x39
  1053  0059                     	ds	2
  1054                           	global	Calc_PID_op@diff
  1055  005B                     Calc_PID_op@diff:	; 3 bytes @ 0x3B
  1056  005B                     	ds	1
  1057                           	global	??_initall
  1058  005C                     ??_initall:	; 0 bytes @ 0x3C
  1059  005C                     	ds	2
  1060                           	global	??_main
  1061  005E                     ??_main:	; 0 bytes @ 0x3E
  1062  005E                     	ds	1
  1063                           	global	main@i
  1064  005F                     main@i:	; 2 bytes @ 0x3F
  1065  005F                     	ds	2
  1066 ;;Data sizes: Strings 0, constant 3, data 8, bss 160, persistent 0 stack 0
  1067 ;;Auto spaces:   Size  Autos    Used
  1068 ;; COMMON          14     12      14
  1069 ;; BANK0           80     65      80
  1070 ;; BANK1           80      0      80
  1071 ;; BANK3           96      0      71
  1072 ;; BANK2           96      0       0
  1073                           
  1074 ;;
  1075 ;; Pointer list with targets:
  1076                           
  1077 ;; ?___ftpack	float  size(1) Largest target is 4
  1078 ;;		 -> Pb(BANK3[4]), 
  1079 ;;
  1080 ;; ?___fttol	long  size(1) Largest target is 4
  1081 ;;		 -> Pb(BANK3[4]), 
  1082 ;;
  1083 ;; ?___awtoft	float  size(1) Largest target is 0
  1084 ;;
  1085 ;; ?___lldiv	unsigned long  size(1) Largest target is 0
  1086 ;;
  1087 ;; ?___ftneg	float  size(1) Largest target is 0
  1088 ;;
  1089 ;; ?___ftmul	float  size(1) Largest target is 0
  1090 ;;
  1091 ;; ?___ftadd	float  size(1) Largest target is 4
  1092 ;;		 -> Pb(BANK3[4]), 
  1093 ;;
  1094 ;; ?___ftdiv	float  size(1) Largest target is 0
  1095 ;;
  1096 ;; ?___lltoft	float  size(1) Largest target is 0
  1097 ;;
  1098 ;; ?_ReadEEP	unsigned long  size(1) Largest target is 0
  1099 ;;
  1100 ;; ?_str_to_num	long  size(1) Largest target is 0
  1101 ;;
  1102 ;; ?___lmul	unsigned long  size(1) Largest target is 0
  1103 ;;
  1104 ;; ?___aldiv	long  size(1) Largest target is 0
  1105 ;;
  1106 ;; ?___almod	long  size(1) Largest target is 4
  1107 ;;		 -> USARTWriteInt@val(BANK0[4]), 
  1108 ;;
  1109 ;; str_to_num@String	PTR unsigned char  size(1) Largest target is 10
  1110 ;;		 -> Commandstr(BANK3[10]), 
  1111 ;;
  1112 ;; USARTWriteString@str	PTR const unsigned char  size(1) Largest target is 2
  1113 ;;		 -> strnw(CODE[2]), 
  1114 ;;
  1115                           
  1116                           
  1117 ;;
  1118 ;; Critical Paths under _main in COMMON
  1119 ;;
  1120 ;;   None.
  1121 ;;
  1122 ;; Critical Paths under _isrroutine in COMMON
  1123 ;;
  1124 ;;   None.
  1125 ;;
  1126 ;; Critical Paths under _main in BANK0
  1127 ;;
  1128 ;;   _main->_Calc_PID_op
  1129 ;;   _getData->_DispallCur
  1130 ;;   _initall->_Calc_PID_const
  1131 ;;   _Calc_Err->_Calc_SetPoint
  1132 ;;   _StoreCurVal->_Writeeeprom
  1133 ;;   _DispallCur->_USARTWriteInt
  1134 ;;   _Calc_PID_op->___ftadd
  1135 ;;   _get_Actrpm->_USARTWriteInt
  1136 ;;   _Calc_SetPoint->_USARTWriteInt
  1137 ;;   _Calc_PID_const->___ftadd
  1138 ;;   _Writeeeprom->_WriteEEP
  1139 ;;   _Readeeprom->___lltoft
  1140 ;;   ___lltoft->___lmul
  1141 ;;   ___awtoft->___ftpack
  1142 ;;   ___ftmul->___ftneg
  1143 ;;   ___ftdiv->___fttol
  1144 ;;   ___ftadd->___ftdiv
  1145 ;;   _WriteEEP->_WrByte
  1146 ;;   _ReadEEP->_RdByte
  1147 ;;   _str_to_num->___lmul
  1148 ;;   _USARTGetString->_UARTGetChar
  1149 ;;   _USARTWriteInt->___aldiv
  1150 ;;   _USARTWriteString->_USARTWriteChar
  1151 ;;   ___lldiv->___lmul
  1152 ;;   ___ftge->___ftpack
  1153 ;;   ___ftneg->___ftpack
  1154 ;;   ___fttol->___ftpack
  1155 ;;
  1156 ;; Critical Paths under _isrroutine in BANK0
  1157 ;;
  1158 ;;   None.
  1159 ;;
  1160 ;; Critical Paths under _main in BANK1
  1161 ;;
  1162 ;;   None.
  1163 ;;
  1164 ;; Critical Paths under _isrroutine in BANK1
  1165 ;;
  1166 ;;   None.
  1167 ;;
  1168 ;; Critical Paths under _main in BANK3
  1169 ;;
  1170 ;;   None.
  1171 ;;
  1172 ;; Critical Paths under _isrroutine in BANK3
  1173 ;;
  1174 ;;   None.
  1175 ;;
  1176 ;; Critical Paths under _main in BANK2
  1177 ;;
  1178 ;;   None.
  1179 ;;
  1180 ;; Critical Paths under _isrroutine in BANK2
  1181 ;;
  1182 ;;   None.
  1183                           
  1184 ;;
  1185 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1186 ;;
  1187                           
  1188 ;;
  1189 ;;Call Graph Tables:
  1190 ;;
  1191 ;; ---------------------------------------------------------------------------------
  1192 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1193 ;; ---------------------------------------------------------------------------------
  1194 ;; (0) _main                                                 3     3      0   15399
  1195 ;;                                             62 BANK0      3     3      0
  1196 ;;                          _initports
  1197 ;;                          _USARTinit
  1198 ;;                            _getData
  1199 ;;                            _initall
  1200 ;;                         _Make_Table
  1201 ;;                         _get_Actrpm
  1202 ;;                      _Calc_SetPoint
  1203 ;;                     _USARTWriteChar
  1204 ;;                   _USARTWriteString
  1205 ;;                           _Calc_Err
  1206 ;;                        _Calc_PID_op
  1207 ;; ---------------------------------------------------------------------------------
  1208 ;; (1) _getData                                              2     2      0    2645
  1209 ;;                                             37 BANK0      2     2      0
  1210 ;;                     _USARTGetString
  1211 ;;                         _str_to_num
  1212 ;;                        _getrangeval
  1213 ;;                     _USARTWriteChar
  1214 ;;                   _USARTWriteString
  1215 ;;                         _DispallCur
  1216 ;;                           _ChkRange
  1217 ;;                        _StoreCurVal
  1218 ;; ---------------------------------------------------------------------------------
  1219 ;; (1) _initall                                              1     1      0    3296
  1220 ;;                                             60 BANK0      1     1      0
  1221 ;;                            _initadc
  1222 ;;                         _Readeeprom
  1223 ;;                         _inittimer0
  1224 ;;                         _inittimer1
  1225 ;;                         _inittimer2
  1226 ;;                     _Calc_PID_const
  1227 ;;                             ___lmul
  1228 ;;                           ___lltoft
  1229 ;; ---------------------------------------------------------------------------------
  1230 ;; (1) _Calc_Err                                             3     3      0    2862
  1231 ;;                                             45 BANK0      3     3      0
  1232 ;;                      _Calc_SetPoint
  1233 ;;                         _get_Actrpm
  1234 ;;                           ___awtoft
  1235 ;; ---------------------------------------------------------------------------------
  1236 ;; (2) _StoreCurVal                                          5     1      4     502
  1237 ;;                                             18 BANK0      5     1      4
  1238 ;;                        _Writeeeprom
  1239 ;; ---------------------------------------------------------------------------------
  1240 ;; (2) _DispallCur                                           4     4      0    1398
  1241 ;;                                             33 BANK0      4     4      0
  1242 ;;                         _Readeeprom
  1243 ;;                     _USARTWriteChar
  1244 ;;                      _USARTWriteInt
  1245 ;;                   _USARTWriteString
  1246 ;; ---------------------------------------------------------------------------------
  1247 ;; (1) _Calc_PID_op                                         14    14      0    3853
  1248 ;;                                             51 BANK0     11    11      0
  1249 ;;                            ___ftmul
  1250 ;;                            ___ftadd
  1251 ;;                             ___ftge
  1252 ;;                            ___ftneg
  1253 ;;                            ___fttol
  1254 ;;                            ___ftdiv
  1255 ;;                     _USARTWriteChar
  1256 ;;                      _USARTWriteInt
  1257 ;;                   _USARTWriteString
  1258 ;;                         _Make_Table
  1259 ;; ---------------------------------------------------------------------------------
  1260 ;; (2) _get_Actrpm                                           8     8      0    1235
  1261 ;;                                             33 BANK0      8     8      0
  1262 ;;                             ___lmul
  1263 ;;                            ___lldiv
  1264 ;;                     _USARTWriteChar
  1265 ;;                      _USARTWriteInt
  1266 ;;                   _USARTWriteString
  1267 ;; ---------------------------------------------------------------------------------
  1268 ;; (2) _Calc_SetPoint                                       12    12      0    1305
  1269 ;;                                             33 BANK0     12    12      0
  1270 ;;                      _Get_ADC_Count
  1271 ;;                             ___lmul
  1272 ;;                            ___lldiv
  1273 ;;                     _USARTWriteChar
  1274 ;;                      _USARTWriteInt
  1275 ;;                   _USARTWriteString
  1276 ;; ---------------------------------------------------------------------------------
  1277 ;; (2) _Calc_PID_const                                       9     9      0    2509
  1278 ;;                                             51 BANK0      9     9      0
  1279 ;;                            ___ftdiv
  1280 ;;                           ___lltoft
  1281 ;;                            ___ftmul
  1282 ;;                            ___ftadd
  1283 ;;                            ___ftneg
  1284 ;; ---------------------------------------------------------------------------------
  1285 ;; (3) _Writeeeprom                                          7     7      0     282
  1286 ;;                                             11 BANK0      7     7      0
  1287 ;;                           _WriteEEP
  1288 ;;                     _USARTWriteChar
  1289 ;;                   _USARTWriteString
  1290 ;; ---------------------------------------------------------------------------------
  1291 ;; (2) _Readeeprom                                           1     1      0     417
  1292 ;;                                             19 BANK0      1     1      0
  1293 ;;                            _ReadEEP
  1294 ;;                           ___lltoft
  1295 ;; ---------------------------------------------------------------------------------
  1296 ;; (2) ___lltoft                                             6     2      4     278
  1297 ;;                                             13 BANK0      6     2      4
  1298 ;;                           ___ftpack
  1299 ;;                             ___lmul (ARG)
  1300 ;; ---------------------------------------------------------------------------------
  1301 ;; (2) ___awtoft                                             6     3      3     300
  1302 ;;                                              8 BANK0      6     3      3
  1303 ;;                           ___ftpack
  1304 ;; ---------------------------------------------------------------------------------
  1305 ;; (2) ___ftmul                                             16    10      6     535
  1306 ;;                                             11 BANK0     16    10      6
  1307 ;;                           ___ftpack
  1308 ;;                            ___ftneg (ARG)
  1309 ;; ---------------------------------------------------------------------------------
  1310 ;; (2) ___ftdiv                                             16    10      6     489
  1311 ;;                                             22 BANK0     16    10      6
  1312 ;;                           ___ftpack
  1313 ;;                            ___fttol (ARG)
  1314 ;;                           ___lltoft (ARG)
  1315 ;; ---------------------------------------------------------------------------------
  1316 ;; (2) ___ftadd                                             13     7      6    1049
  1317 ;;                                             38 BANK0     13     7      6
  1318 ;;                           ___ftpack
  1319 ;;                            ___ftmul (ARG)
  1320 ;;                             ___ftge (ARG)
  1321 ;;                            ___ftneg (ARG)
  1322 ;;                            ___ftdiv (ARG)
  1323 ;; ---------------------------------------------------------------------------------
  1324 ;; (2) _Make_Table                                           4     2      2      22
  1325 ;;                                              0 BANK0      4     2      2
  1326 ;;                            _SetMode
  1327 ;;                             _SetDir
  1328 ;;                            _SetTime
  1329 ;; ---------------------------------------------------------------------------------
  1330 ;; (4) _WriteEEP                                             9     4      5     161
  1331 ;;                                              2 BANK0      9     4      5
  1332 ;;                             _WrByte
  1333 ;; ---------------------------------------------------------------------------------
  1334 ;; (3) _ReadEEP                                             14    10      4     139
  1335 ;;                                              3 BANK0     14    10      4
  1336 ;;                             _RdByte
  1337 ;; ---------------------------------------------------------------------------------
  1338 ;; (2) _str_to_num                                          17    13      4     362
  1339 ;;                                             13 BANK0     17    13      4
  1340 ;;                             ___lmul
  1341 ;; ---------------------------------------------------------------------------------
  1342 ;; (2) _USARTGetString                                       3     3      0     160
  1343 ;;                                              2 BANK0      3     3      0
  1344 ;;                        _UARTGetChar
  1345 ;; ---------------------------------------------------------------------------------
  1346 ;; (2) _USARTWriteInt                                       18    14      4     892
  1347 ;;                                             15 BANK0     18    14      4
  1348 ;;                     _USARTWriteChar
  1349 ;;                            ___almod
  1350 ;;                            ___aldiv
  1351 ;; ---------------------------------------------------------------------------------
  1352 ;; (2) _USARTWriteString                                     2     2      0      67
  1353 ;;                                              1 BANK0      2     2      0
  1354 ;;                     _USARTWriteChar
  1355 ;; ---------------------------------------------------------------------------------
  1356 ;; (3) ___aldiv                                             15     7      8     300
  1357 ;;                                              0 BANK0     15     7      8
  1358 ;; ---------------------------------------------------------------------------------
  1359 ;; (3) ___almod                                             11     3      8     296
  1360 ;;                                              0 BANK0     11     3      8
  1361 ;; ---------------------------------------------------------------------------------
  1362 ;; (3) ___lldiv                                             14     6      8     162
  1363 ;;                                             13 BANK0     14     6      8
  1364 ;;                             ___lmul (ARG)
  1365 ;; ---------------------------------------------------------------------------------
  1366 ;; (2) ___ftge                                              12     6      6     136
  1367 ;;                                              8 BANK0     12     6      6
  1368 ;;                           ___ftpack (ARG)
  1369 ;; ---------------------------------------------------------------------------------
  1370 ;; (2) ___ftneg                                              3     0      3      45
  1371 ;;                                              8 BANK0      3     0      3
  1372 ;;                           ___ftpack (ARG)
  1373 ;; ---------------------------------------------------------------------------------
  1374 ;; (2) ___fttol                                             14    10      4     252
  1375 ;;                                              8 BANK0     14    10      4
  1376 ;;                           ___ftpack (ARG)
  1377 ;; ---------------------------------------------------------------------------------
  1378 ;; (3) ___lmul                                              13     5      8      92
  1379 ;;                                              0 BANK0     13     5      8
  1380 ;; ---------------------------------------------------------------------------------
  1381 ;; (3) ___ftpack                                             8     3      5     209
  1382 ;;                                              0 BANK0      8     3      5
  1383 ;; ---------------------------------------------------------------------------------
  1384 ;; (3) _SetTime                                              0     0      0       0
  1385 ;; ---------------------------------------------------------------------------------
  1386 ;; (3) _SetDir                                               0     0      0       0
  1387 ;; ---------------------------------------------------------------------------------
  1388 ;; (3) _SetMode                                              0     0      0       0
  1389 ;; ---------------------------------------------------------------------------------
  1390 ;; (2) _inittimer0                                           0     0      0       0
  1391 ;; ---------------------------------------------------------------------------------
  1392 ;; (2) _inittimer2                                           0     0      0       0
  1393 ;; ---------------------------------------------------------------------------------
  1394 ;; (2) _inittimer1                                           0     0      0       0
  1395 ;; ---------------------------------------------------------------------------------
  1396 ;; (2) _initadc                                              0     0      0       0
  1397 ;; ---------------------------------------------------------------------------------
  1398 ;; (1) _initports                                            0     0      0       0
  1399 ;; ---------------------------------------------------------------------------------
  1400 ;; (3) _Get_ADC_Count                                        2     2      0       0
  1401 ;;                                              0 BANK0      2     2      0
  1402 ;; ---------------------------------------------------------------------------------
  1403 ;; (5) _WrByte                                               2     1      1      44
  1404 ;;                                              0 BANK0      2     1      1
  1405 ;; ---------------------------------------------------------------------------------
  1406 ;; (4) _RdByte                                               3     3      0      45
  1407 ;;                                              0 BANK0      3     3      0
  1408 ;; ---------------------------------------------------------------------------------
  1409 ;; (2) _ChkRange                                             4     0      4      44
  1410 ;;                                              0 BANK0      4     0      4
  1411 ;; ---------------------------------------------------------------------------------
  1412 ;; (2) _getrangeval                                          1     1      0       0
  1413 ;;                                              0 BANK0      1     1      0
  1414 ;; ---------------------------------------------------------------------------------
  1415 ;; (3) _UARTGetChar                                          2     2      0      23
  1416 ;;                                              0 BANK0      2     2      0
  1417 ;; ---------------------------------------------------------------------------------
  1418 ;; (3) _USARTWriteChar                                       1     1      0      22
  1419 ;;                                              0 BANK0      1     1      0
  1420 ;; ---------------------------------------------------------------------------------
  1421 ;; (1) _USARTinit                                            0     0      0       0
  1422 ;; ---------------------------------------------------------------------------------
  1423 ;; Estimated maximum stack depth 5
  1424 ;; ---------------------------------------------------------------------------------
  1425 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1426 ;; ---------------------------------------------------------------------------------
  1427 ;; (6) _isrroutine                                          12    12      0      68
  1428 ;;                                              0 COMMON    12    12      0
  1429 ;;                          _MoveMotor
  1430 ;; ---------------------------------------------------------------------------------
  1431 ;; (7) _MoveMotor                                            0     0      0       0
  1432 ;; ---------------------------------------------------------------------------------
  1433 ;; Estimated maximum stack depth 7
  1434 ;; ---------------------------------------------------------------------------------
  1435                           
  1436 ;; Call Graph Graphs:
  1437                           
  1438 ;; _main (ROOT)
  1439 ;;   _initports
  1440 ;;   _USARTinit
  1441 ;;   _getData
  1442 ;;     _USARTGetString
  1443 ;;       _UARTGetChar
  1444 ;;     _str_to_num
  1445 ;;       ___lmul
  1446 ;;     _getrangeval
  1447 ;;     _USARTWriteChar
  1448 ;;     _USARTWriteString
  1449 ;;       _USARTWriteChar
  1450 ;;     _DispallCur
  1451 ;;       _Readeeprom
  1452 ;;         _ReadEEP
  1453 ;;           _RdByte
  1454 ;;         ___lltoft
  1455 ;;           ___ftpack
  1456 ;;           ___lmul (ARG)
  1457 ;;       _USARTWriteChar
  1458 ;;       _USARTWriteInt
  1459 ;;         _USARTWriteChar
  1460 ;;         ___almod
  1461 ;;         ___aldiv
  1462 ;;       _USARTWriteString
  1463 ;;         _USARTWriteChar
  1464 ;;     _ChkRange
  1465 ;;     _StoreCurVal
  1466 ;;       _Writeeeprom
  1467 ;;         _WriteEEP
  1468 ;;           _WrByte
  1469 ;;         _USARTWriteChar
  1470 ;;         _USARTWriteString
  1471 ;;           _USARTWriteChar
  1472 ;;   _initall
  1473 ;;     _initadc
  1474 ;;     _Readeeprom
  1475 ;;       _ReadEEP
  1476 ;;         _RdByte
  1477 ;;       ___lltoft
  1478 ;;         ___ftpack
  1479 ;;         ___lmul (ARG)
  1480 ;;     _inittimer0
  1481 ;;     _inittimer1
  1482 ;;     _inittimer2
  1483 ;;     _Calc_PID_const
  1484 ;;       ___ftdiv
  1485 ;;         ___ftpack
  1486 ;;         ___fttol (ARG)
  1487 ;;           ___ftpack (ARG)
  1488 ;;         ___lltoft (ARG)
  1489 ;;           ___ftpack
  1490 ;;           ___lmul (ARG)
  1491 ;;       ___lltoft
  1492 ;;         ___ftpack
  1493 ;;         ___lmul (ARG)
  1494 ;;       ___ftmul
  1495 ;;         ___ftpack
  1496 ;;         ___ftneg (ARG)
  1497 ;;           ___ftpack (ARG)
  1498 ;;       ___ftadd
  1499 ;;         ___ftpack
  1500 ;;         ___ftmul (ARG)
  1501 ;;           ___ftpack
  1502 ;;           ___ftneg (ARG)
  1503 ;;             ___ftpack (ARG)
  1504 ;;         ___ftge (ARG)
  1505 ;;           ___ftpack (ARG)
  1506 ;;         ___ftneg (ARG)
  1507 ;;           ___ftpack (ARG)
  1508 ;;         ___ftdiv (ARG)
  1509 ;;           ___ftpack
  1510 ;;           ___fttol (ARG)
  1511 ;;             ___ftpack (ARG)
  1512 ;;           ___lltoft (ARG)
  1513 ;;             ___ftpack
  1514 ;;             ___lmul (ARG)
  1515 ;;       ___ftneg
  1516 ;;         ___ftpack (ARG)
  1517 ;;     ___lmul
  1518 ;;     ___lltoft
  1519 ;;       ___ftpack
  1520 ;;       ___lmul (ARG)
  1521 ;;   _Make_Table
  1522 ;;     _SetMode
  1523 ;;     _SetDir
  1524 ;;     _SetTime
  1525 ;;   _get_Actrpm
  1526 ;;     ___lmul
  1527 ;;     ___lldiv
  1528 ;;       ___lmul (ARG)
  1529 ;;     _USARTWriteChar
  1530 ;;     _USARTWriteInt
  1531 ;;       _USARTWriteChar
  1532 ;;       ___almod
  1533 ;;       ___aldiv
  1534 ;;     _USARTWriteString
  1535 ;;       _USARTWriteChar
  1536 ;;   _Calc_SetPoint
  1537 ;;     _Get_ADC_Count
  1538 ;;     ___lmul
  1539 ;;     ___lldiv
  1540 ;;       ___lmul (ARG)
  1541 ;;     _USARTWriteChar
  1542 ;;     _USARTWriteInt
  1543 ;;       _USARTWriteChar
  1544 ;;       ___almod
  1545 ;;       ___aldiv
  1546 ;;     _USARTWriteString
  1547 ;;       _USARTWriteChar
  1548 ;;   _USARTWriteChar
  1549 ;;   _USARTWriteString
  1550 ;;     _USARTWriteChar
  1551 ;;   _Calc_Err
  1552 ;;     _Calc_SetPoint
  1553 ;;       _Get_ADC_Count
  1554 ;;       ___lmul
  1555 ;;       ___lldiv
  1556 ;;         ___lmul (ARG)
  1557 ;;       _USARTWriteChar
  1558 ;;       _USARTWriteInt
  1559 ;;         _USARTWriteChar
  1560 ;;         ___almod
  1561 ;;         ___aldiv
  1562 ;;       _USARTWriteString
  1563 ;;         _USARTWriteChar
  1564 ;;     _get_Actrpm
  1565 ;;       ___lmul
  1566 ;;       ___lldiv
  1567 ;;         ___lmul (ARG)
  1568 ;;       _USARTWriteChar
  1569 ;;       _USARTWriteInt
  1570 ;;         _USARTWriteChar
  1571 ;;         ___almod
  1572 ;;         ___aldiv
  1573 ;;       _USARTWriteString
  1574 ;;         _USARTWriteChar
  1575 ;;     ___awtoft
  1576 ;;       ___ftpack
  1577 ;;   _Calc_PID_op
  1578 ;;     ___ftmul
  1579 ;;       ___ftpack
  1580 ;;       ___ftneg (ARG)
  1581 ;;         ___ftpack (ARG)
  1582 ;;     ___ftadd
  1583 ;;       ___ftpack
  1584 ;;       ___ftmul (ARG)
  1585 ;;         ___ftpack
  1586 ;;         ___ftneg (ARG)
  1587 ;;           ___ftpack (ARG)
  1588 ;;       ___ftge (ARG)
  1589 ;;         ___ftpack (ARG)
  1590 ;;       ___ftneg (ARG)
  1591 ;;         ___ftpack (ARG)
  1592 ;;       ___ftdiv (ARG)
  1593 ;;         ___ftpack
  1594 ;;         ___fttol (ARG)
  1595 ;;           ___ftpack (ARG)
  1596 ;;         ___lltoft (ARG)
  1597 ;;           ___ftpack
  1598 ;;           ___lmul (ARG)
  1599 ;;     ___ftge
  1600 ;;       ___ftpack (ARG)
  1601 ;;     ___ftneg
  1602 ;;       ___ftpack (ARG)
  1603 ;;     ___fttol
  1604 ;;       ___ftpack (ARG)
  1605 ;;     ___ftdiv
  1606 ;;       ___ftpack
  1607 ;;       ___fttol (ARG)
  1608 ;;         ___ftpack (ARG)
  1609 ;;       ___lltoft (ARG)
  1610 ;;         ___ftpack
  1611 ;;         ___lmul (ARG)
  1612 ;;     _USARTWriteChar
  1613 ;;     _USARTWriteInt
  1614 ;;       _USARTWriteChar
  1615 ;;       ___almod
  1616 ;;       ___aldiv
  1617 ;;     _USARTWriteString
  1618 ;;       _USARTWriteChar
  1619 ;;     _Make_Table
  1620 ;;       _SetMode
  1621 ;;       _SetDir
  1622 ;;       _SetTime
  1623 ;;
  1624 ;; _isrroutine (ROOT)
  1625 ;;   _MoveMotor
  1626 ;;
  1627                           
  1628 ;; Address spaces:
  1629                           
  1630 ;;Name               Size   Autos  Total    Cost      Usage
  1631 ;;BANK3               60      0      47       9       74.0%
  1632 ;;BITBANK3            60      0       0       8        0.0%
  1633 ;;SFR3                 0      0       0       4        0.0%
  1634 ;;BITSFR3              0      0       0       4        0.0%
  1635 ;;BANK2               60      0       0      11        0.0%
  1636 ;;BITBANK2            60      0       0      10        0.0%
  1637 ;;SFR2                 0      0       0       5        0.0%
  1638 ;;BITSFR2              0      0       0       5        0.0%
  1639 ;;SFR1                 0      0       0       2        0.0%
  1640 ;;BITSFR1              0      0       0       2        0.0%
  1641 ;;BANK1               50      0      50       7      100.0%
  1642 ;;BITBANK1            50      0       0       6        0.0%
  1643 ;;CODE                 0      0       0       0        0.0%
  1644 ;;DATA                 0      0      FE      12        0.0%
  1645 ;;ABS                  0      0      F5       3        0.0%
  1646 ;;NULL                 0      0       0       0        0.0%
  1647 ;;STACK                0      0       9       2        0.0%
  1648 ;;BANK0               50     41      50       5      100.0%
  1649 ;;BITBANK0            50      0       0       4        0.0%
  1650 ;;SFR0                 0      0       0       1        0.0%
  1651 ;;BITSFR0              0      0       0       1        0.0%
  1652 ;;COMMON               E      C       E       1      100.0%
  1653 ;;BITCOMMON            E      0       0       0        0.0%
  1654 ;;EEDATA             100      0       0       0        0.0%
  1655                           
  1656                           	global	_main
  1657                           psect	maintext,global,class=CODE,delta=2
  1658                           global __pmaintext
  1659  0AFA                     __pmaintext:
  1660                           
  1661 ;; *************** function _main *****************
  1662 ;; Defined at:
  1663 ;;		line 37 in file "main.c"
  1664 ;; Parameters:    Size  Location     Type
  1665 ;;		None
  1666 ;; Auto vars:     Size  Location     Type
  1667 ;;  i               2   63[BANK0 ] int 
  1668 ;; Return value:  Size  Location     Type
  1669 ;;		None               void
  1670 ;; Registers used:
  1671 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1672 ;; Tracked objects:
  1673 ;;		On entry : 17F/0
  1674 ;;		On exit  : 0/0
  1675 ;;		Unchanged: 0/0
  1676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1677 ;;      Params:         0       0       0       0       0
  1678 ;;      Locals:         0       2       0       0       0
  1679 ;;      Temps:          0       1       0       0       0
  1680 ;;      Totals:         0       3       0       0       0
  1681 ;;Total ram usage:        3 bytes
  1682 ;; Hardware stack levels required when called:    7
  1683 ;; This function calls:
  1684 ;;		_initports
  1685 ;;		_USARTinit
  1686 ;;		_getData
  1687 ;;		_initall
  1688 ;;		_Make_Table
  1689 ;;		_get_Actrpm
  1690 ;;		_Calc_SetPoint
  1691 ;;		_USARTWriteChar
  1692 ;;		_USARTWriteString
  1693 ;;		_Calc_Err
  1694 ;;		_Calc_PID_op
  1695 ;; This function is called by:
  1696 ;;		Startup code after reset
  1697 ;; This function uses a non-reentrant model
  1698 ;;
  1699                           psect	maintext
  1700                           	file	"main.c"
  1701                           	line	37
  1702                           	global	__size_of_main
  1703  010C                     	__size_of_main	equ	__end_of_main-_main
  1704                           	
  1705  0AFA                     _main:	
  1706                           	opt	stack 1
  1707                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1708                           	line	38
  1709                           	
  1710  0AFA                     l11811:	
  1711                           ;main.c: 38: OSCCON = 0b01100001;
  1712  0AFA  3061               	movlw	(061h)
  1713  0AFB  1683               	bsf	status, 5	;RP0=1, select bank1
  1714  0AFC  1303               	bcf	status, 6	;RP1=0, select bank1
  1715  0AFD  008F               	movwf	(143)^080h	;volatile
  1716                           	line	39
  1717                           	
  1718  0AFE                     l11813:	
  1719                           ;main.c: 39: OSCTUNE= 0;
  1720  0AFE  0190               	clrf	(144)^080h	;volatile
  1721                           	line	42
  1722                           	
  1723  0AFF                     l11815:	
  1724                           ;main.c: 42: Count4ms = 0;
  1725  0AFF  01FD               	clrf	(_Count4ms)
  1726                           	line	44
  1727                           	
  1728  0B00                     l11817:	
  1729                           ;main.c: 44: initports();
  1730  0B00  160A  158A  22CD   	fcall	_initports
              120A  158A         
  1731                           	line	45
  1732                           	
  1733  0B05                     l11819:	
  1734                           ;main.c: 45: USARTinit();
  1735  0B05  160A  158A  233D   	fcall	_USARTinit
              120A  158A         
  1736                           	line	47
  1737                           ;main.c: 47: while(PORTAbits.RA6 == 1)
  1738  0B0A  2B11               	goto	l11823
  1739                           	
  1740  0B0B                     l6725:	
  1741                           	line	51
  1742                           	
  1743  0B0B                     l11821:	
  1744                           ;main.c: 48: {
  1745                           ;main.c: 51: getData();
  1746  0B0B  160A  118A  23B5   	fcall	_getData
              120A  158A         
  1747  0B10  2B11               	goto	l11823
  1748                           	line	52
  1749                           	
  1750  0B11                     l6724:	
  1751                           	line	47
  1752                           	
  1753  0B11                     l11823:	
  1754  0B11  1283               	bcf	status, 5	;RP0=0, select bank0
  1755  0B12  1303               	bcf	status, 6	;RP1=0, select bank0
  1756  0B13  1B05               	btfsc	(5),6	;volatile
  1757  0B14  2B16               	goto	u4791
  1758  0B15  2B17               	goto	u4790
  1759  0B16                     u4791:
  1760  0B16  2B0B               	goto	l11821
  1761  0B17                     u4790:
  1762                           	
  1763  0B17                     l6726:	
  1764                           	line	53
  1765                           ;main.c: 52: }
  1766                           ;main.c: 53: PORTBbits.RB2 = 0;
  1767  0B17  1106               	bcf	(6),2	;volatile
  1768                           	line	54
  1769                           ;main.c: 54: PORTCbits.RC5 = 1;
  1770  0B18  1687               	bsf	(7),5	;volatile
  1771                           	line	55
  1772                           ;main.c: 55: PORTBbits.RB0 = 1;
  1773  0B19  1406               	bsf	(6),0	;volatile
  1774                           	line	56
  1775                           	
  1776  0B1A                     l11825:	
  1777                           ;main.c: 56: initall();
  1778  0B1A  160A  158A  270D   	fcall	_initall
              120A  158A         
  1779                           	line	58
  1780                           	
  1781  0B1F                     l11827:	
  1782                           ;main.c: 57: int i;
  1783                           ;main.c: 58: for( i = 0 ; i < 4 ; i++)
  1784  0B1F  1283               	bcf	status, 5	;RP0=0, select bank0
  1785  0B20  1303               	bcf	status, 6	;RP1=0, select bank0
  1786  0B21  01DF               	clrf	(main@i)
  1787  0B22  01E0               	clrf	(main@i+1)
  1788                           	
  1789  0B23                     l11829:	
  1790  0B23  0860               	movf	(main@i+1),w
  1791  0B24  3A80               	xorlw	80h
  1792  0B25  00FF               	movwf	btemp+1
  1793  0B26  3080               	movlw	(high(04h))^80h
  1794  0B27  027F               	subwf	btemp+1,w
  1795  0B28  1D03               	skipz
  1796  0B29  2B2C               	goto	u4805
  1797  0B2A  3004               	movlw	low(04h)
  1798  0B2B  025F               	subwf	(main@i),w
  1799  0B2C                     u4805:
  1800                           
  1801  0B2C  1C03               	skipc
  1802  0B2D  2B2F               	goto	u4801
  1803  0B2E  2B30               	goto	u4800
  1804  0B2F                     u4801:
  1805  0B2F  2B32               	goto	l11833
  1806  0B30                     u4800:
  1807  0B30  2B8E               	goto	l11849
  1808                           	
  1809  0B31                     l11831:	
  1810  0B31  2B8E               	goto	l11849
  1811                           	line	59
  1812                           	
  1813  0B32                     l6727:	
  1814                           	line	60
  1815                           	
  1816  0B32                     l11833:	
  1817                           ;main.c: 59: {
  1818                           ;main.c: 60: CurTotNoStep = 270; CurStepDir = ANTICLKVIZ; CurStepMode = 4 ;
  1819  0B32  300E               	movlw	low(010Eh)
  1820  0B33  1683               	bsf	status, 5	;RP0=1, select bank1
  1821  0B34  1303               	bcf	status, 6	;RP1=0, select bank1
  1822  0B35  00E1               	movwf	(_CurTotNoStep)^080h
  1823  0B36  3001               	movlw	high(010Eh)
  1824  0B37  00E2               	movwf	((_CurTotNoStep)^080h)+1
  1825  0B38  1283               	bcf	status, 5	;RP0=0, select bank0
  1826  0B39  1303               	bcf	status, 6	;RP1=0, select bank0
  1827  0B3A  086A               	movf	(_ANTICLKVIZ),w
  1828  0B3B  00DE               	movwf	(??_main+0)+0
  1829  0B3C  085E               	movf	(??_main+0)+0,w
  1830  0B3D  1683               	bsf	status, 5	;RP0=1, select bank1
  1831  0B3E  1303               	bcf	status, 6	;RP1=0, select bank1
  1832  0B3F  00EC               	movwf	(_CurStepDir)^080h
  1833  0B40  3004               	movlw	(04h)
  1834  0B41  1283               	bcf	status, 5	;RP0=0, select bank0
  1835  0B42  1303               	bcf	status, 6	;RP1=0, select bank0
  1836  0B43  00DE               	movwf	(??_main+0)+0
  1837  0B44  085E               	movf	(??_main+0)+0,w
  1838  0B45  1683               	bsf	status, 5	;RP0=1, select bank1
  1839  0B46  1303               	bcf	status, 6	;RP1=0, select bank1
  1840  0B47  00ED               	movwf	(_CurStepMode)^080h
  1841                           	line	62
  1842                           	
  1843  0B48                     l11835:	
  1844                           ;main.c: 62: Make_Table( CurTotNoStep );
  1845  0B48  0862               	movf	(_CurTotNoStep+1)^080h,w
  1846  0B49  1283               	bcf	status, 5	;RP0=0, select bank0
  1847  0B4A  1303               	bcf	status, 6	;RP1=0, select bank0
  1848  0B4B  01A1               	clrf	(?_Make_Table+1)
  1849  0B4C  07A1               	addwf	(?_Make_Table+1)
  1850  0B4D  1683               	bsf	status, 5	;RP0=1, select bank1
  1851  0B4E  1303               	bcf	status, 6	;RP1=0, select bank1
  1852  0B4F  0861               	movf	(_CurTotNoStep)^080h,w
  1853  0B50  1283               	bcf	status, 5	;RP0=0, select bank0
  1854  0B51  1303               	bcf	status, 6	;RP1=0, select bank0
  1855  0B52  01A0               	clrf	(?_Make_Table)
  1856  0B53  07A0               	addwf	(?_Make_Table)
  1857                           
  1858  0B54  160A  158A  246B   	fcall	_Make_Table
              120A  158A         
  1859                           	line	63
  1860                           ;main.c: 63: while(!MotionComplete);
  1861  0B59  2B5B               	goto	l11837
  1862                           	
  1863  0B5A                     l6730:	
  1864  0B5A  2B5B               	goto	l11837
  1865                           	
  1866  0B5B                     l6729:	
  1867                           	
  1868  0B5B                     l11837:	
  1869  0B5B  1283               	bcf	status, 5	;RP0=0, select bank0
  1870  0B5C  1303               	bcf	status, 6	;RP1=0, select bank0
  1871  0B5D  086E               	movf	(_MotionComplete),w
  1872  0B5E  1D03               	skipz
  1873  0B5F  2B61               	goto	u4810
  1874  0B60  2B5B               	goto	l11837
  1875  0B61                     u4810:
  1876  0B61  2B62               	goto	l11839
  1877                           	
  1878  0B62                     l6731:	
  1879                           	line	58
  1880                           	
  1881  0B62                     l11839:	
  1882  0B62  3001               	movlw	low(01h)
  1883  0B63  07DF               	addwf	(main@i),f
  1884  0B64  1803               	skipnc
  1885  0B65  0AE0               	incf	(main@i+1),f
  1886  0B66  3000               	movlw	high(01h)
  1887  0B67  07E0               	addwf	(main@i+1),f
  1888                           	
  1889  0B68                     l11841:	
  1890  0B68  0860               	movf	(main@i+1),w
  1891  0B69  3A80               	xorlw	80h
  1892  0B6A  00FF               	movwf	btemp+1
  1893  0B6B  3080               	movlw	(high(04h))^80h
  1894  0B6C  027F               	subwf	btemp+1,w
  1895  0B6D  1D03               	skipz
  1896  0B6E  2B71               	goto	u4825
  1897  0B6F  3004               	movlw	low(04h)
  1898  0B70  025F               	subwf	(main@i),w
  1899  0B71                     u4825:
  1900                           
  1901  0B71  1C03               	skipc
  1902  0B72  2B74               	goto	u4821
  1903  0B73  2B75               	goto	u4820
  1904  0B74                     u4821:
  1905  0B74  2B32               	goto	l11833
  1906  0B75                     u4820:
  1907  0B75  2B8E               	goto	l11849
  1908                           	
  1909  0B76                     l6728:	
  1910                           	line	66
  1911                           ;main.c: 64: }
  1912                           ;main.c: 66: while(Crankflg == 0)
  1913  0B76  2B8E               	goto	l11849
  1914                           	
  1915  0B77                     l6733:	
  1916                           	line	68
  1917                           	
  1918  0B77                     l11843:	
  1919                           ;main.c: 67: {
  1920                           ;main.c: 68: get_Actrpm();
  1921  0B77  120A  158A  20ED   	fcall	_get_Actrpm
              120A  158A         
  1922                           	line	69
  1923                           ;main.c: 69: Calc_SetPoint();
  1924  0B7C  120A  158A  2406   	fcall	_Calc_SetPoint
              120A  158A         
  1925                           	line	70
  1926                           	
  1927  0B81                     l11845:	
  1928                           ;main.c: 70: USARTWriteChar('N');USARTWriteString(strnw);
  1929  0B81  304E               	movlw	(04Eh)
  1930  0B82  160A  118A  2000   	fcall	_USARTWriteChar
              120A  158A         
  1931                           	
  1932  0B87                     l11847:	
  1933  0B87  3002               	movlw	((_strnw-__stringbase))&0ffh
  1934  0B88  160A  158A  2390   	fcall	_USARTWriteString
              120A  158A         
  1935  0B8D  2B8E               	goto	l11849
  1936                           	line	71
  1937                           	
  1938  0B8E                     l6732:	
  1939                           	line	66
  1940                           	
  1941  0B8E                     l11849:	
  1942  0B8E  1683               	bsf	status, 5	;RP0=1, select bank1
  1943  0B8F  1303               	bcf	status, 6	;RP1=0, select bank1
  1944  0B90  086B               	movf	(_Crankflg)^080h,w
  1945  0B91  1D03               	skipz
  1946  0B92  2B94               	goto	u4830
  1947  0B93  2B77               	goto	l11843
  1948  0B94                     u4830:
  1949  0B94  2B95               	goto	l11851
  1950                           	
  1951  0B95                     l6734:	
  1952                           	line	73
  1953                           	
  1954  0B95                     l11851:	
  1955                           ;main.c: 71: }
  1956                           ;main.c: 73: for( i = 0 ; i < 4 ; i++)
  1957  0B95  1283               	bcf	status, 5	;RP0=0, select bank0
  1958  0B96  1303               	bcf	status, 6	;RP1=0, select bank0
  1959  0B97  01DF               	clrf	(main@i)
  1960  0B98  01E0               	clrf	(main@i+1)
  1961                           	
  1962  0B99                     l11853:	
  1963  0B99  0860               	movf	(main@i+1),w
  1964  0B9A  3A80               	xorlw	80h
  1965  0B9B  00FF               	movwf	btemp+1
  1966  0B9C  3080               	movlw	(high(04h))^80h
  1967  0B9D  027F               	subwf	btemp+1,w
  1968  0B9E  1D03               	skipz
  1969  0B9F  2BA2               	goto	u4845
  1970  0BA0  3004               	movlw	low(04h)
  1971  0BA1  025F               	subwf	(main@i),w
  1972  0BA2                     u4845:
  1973                           
  1974  0BA2  1C03               	skipc
  1975  0BA3  2BA5               	goto	u4841
  1976  0BA4  2BA6               	goto	u4840
  1977  0BA5                     u4841:
  1978  0BA5  2BA8               	goto	l11857
  1979  0BA6                     u4840:
  1980  0BA6  2BE5               	goto	l11867
  1981                           	
  1982  0BA7                     l11855:	
  1983  0BA7  2BE5               	goto	l11867
  1984                           	line	74
  1985                           	
  1986  0BA8                     l6735:	
  1987                           	line	75
  1988                           	
  1989  0BA8                     l11857:	
  1990                           ;main.c: 74: {
  1991                           ;main.c: 75: CurTotNoStep = 225; CurStepDir = CLKVIZ;
  1992  0BA8  30E1               	movlw	low(0E1h)
  1993  0BA9  1683               	bsf	status, 5	;RP0=1, select bank1
  1994  0BAA  1303               	bcf	status, 6	;RP1=0, select bank1
  1995  0BAB  00E1               	movwf	(_CurTotNoStep)^080h
  1996  0BAC  3000               	movlw	high(0E1h)
  1997  0BAD  00E2               	movwf	((_CurTotNoStep)^080h)+1
  1998  0BAE  1283               	bcf	status, 5	;RP0=0, select bank0
  1999  0BAF  1303               	bcf	status, 6	;RP1=0, select bank0
  2000  0BB0  086B               	movf	(_CLKVIZ),w
  2001  0BB1  00DE               	movwf	(??_main+0)+0
  2002  0BB2  085E               	movf	(??_main+0)+0,w
  2003  0BB3  1683               	bsf	status, 5	;RP0=1, select bank1
  2004  0BB4  1303               	bcf	status, 6	;RP1=0, select bank1
  2005  0BB5  00EC               	movwf	(_CurStepDir)^080h
  2006                           	line	76
  2007                           	
  2008  0BB6                     l11859:	
  2009                           ;main.c: 76: Make_Table( CurTotNoStep );
  2010  0BB6  0862               	movf	(_CurTotNoStep+1)^080h,w
  2011  0BB7  1283               	bcf	status, 5	;RP0=0, select bank0
  2012  0BB8  1303               	bcf	status, 6	;RP1=0, select bank0
  2013  0BB9  01A1               	clrf	(?_Make_Table+1)
  2014  0BBA  07A1               	addwf	(?_Make_Table+1)
  2015  0BBB  1683               	bsf	status, 5	;RP0=1, select bank1
  2016  0BBC  1303               	bcf	status, 6	;RP1=0, select bank1
  2017  0BBD  0861               	movf	(_CurTotNoStep)^080h,w
  2018  0BBE  1283               	bcf	status, 5	;RP0=0, select bank0
  2019  0BBF  1303               	bcf	status, 6	;RP1=0, select bank0
  2020  0BC0  01A0               	clrf	(?_Make_Table)
  2021  0BC1  07A0               	addwf	(?_Make_Table)
  2022                           
  2023  0BC2  160A  158A  246B   	fcall	_Make_Table
              120A  158A         
  2024                           	line	77
  2025                           ;main.c: 77: while(!MotionComplete);
  2026  0BC7  2BC9               	goto	l11861
  2027                           	
  2028  0BC8                     l6738:	
  2029  0BC8  2BC9               	goto	l11861
  2030                           	
  2031  0BC9                     l6737:	
  2032                           	
  2033  0BC9                     l11861:	
  2034  0BC9  1283               	bcf	status, 5	;RP0=0, select bank0
  2035  0BCA  1303               	bcf	status, 6	;RP1=0, select bank0
  2036  0BCB  086E               	movf	(_MotionComplete),w
  2037  0BCC  1D03               	skipz
  2038  0BCD  2BCF               	goto	u4850
  2039  0BCE  2BC9               	goto	l11861
  2040  0BCF                     u4850:
  2041  0BCF  2BD0               	goto	l11863
  2042                           	
  2043  0BD0                     l6739:	
  2044                           	line	73
  2045                           	
  2046  0BD0                     l11863:	
  2047  0BD0  3001               	movlw	low(01h)
  2048  0BD1  07DF               	addwf	(main@i),f
  2049  0BD2  1803               	skipnc
  2050  0BD3  0AE0               	incf	(main@i+1),f
  2051  0BD4  3000               	movlw	high(01h)
  2052  0BD5  07E0               	addwf	(main@i+1),f
  2053                           	
  2054  0BD6                     l11865:	
  2055  0BD6  0860               	movf	(main@i+1),w
  2056  0BD7  3A80               	xorlw	80h
  2057  0BD8  00FF               	movwf	btemp+1
  2058  0BD9  3080               	movlw	(high(04h))^80h
  2059  0BDA  027F               	subwf	btemp+1,w
  2060  0BDB  1D03               	skipz
  2061  0BDC  2BDF               	goto	u4865
  2062  0BDD  3004               	movlw	low(04h)
  2063  0BDE  025F               	subwf	(main@i),w
  2064  0BDF                     u4865:
  2065                           
  2066  0BDF  1C03               	skipc
  2067  0BE0  2BE2               	goto	u4861
  2068  0BE1  2BE3               	goto	u4860
  2069  0BE2                     u4861:
  2070  0BE2  2BA8               	goto	l11857
  2071  0BE3                     u4860:
  2072  0BE3  2BE5               	goto	l11867
  2073                           	
  2074  0BE4                     l6736:	
  2075  0BE4  2BE5               	goto	l11867
  2076                           	line	80
  2077                           ;main.c: 78: }
  2078                           ;main.c: 80: while(1)
  2079                           	
  2080  0BE5                     l6740:	
  2081                           	line	82
  2082                           	
  2083  0BE5                     l11867:	
  2084                           ;main.c: 81: {
  2085                           ;main.c: 82: if(MS100Flag)
  2086  0BE5  1283               	bcf	status, 5	;RP0=0, select bank0
  2087  0BE6  1303               	bcf	status, 6	;RP1=0, select bank0
  2088  0BE7  086D               	movf	(_MS100Flag),w
  2089  0BE8  1D03               	skipz
  2090  0BE9  2BEB               	goto	u4870
  2091  0BEA  2BE5               	goto	l11867
  2092  0BEB                     u4870:
  2093                           	line	84
  2094                           	
  2095  0BEB                     l11869:	
  2096                           ;main.c: 83: {
  2097                           ;main.c: 84: MS100Flag = 0;
  2098  0BEB  01ED               	clrf	(_MS100Flag)
  2099                           	line	85
  2100                           	
  2101  0BEC                     l11871:	
  2102                           ;main.c: 85: Calc_Err(PIDCycleNo);
  2103  0BEC  086F               	movf	(_PIDCycleNo),w
  2104  0BED  160A  118A  2548   	fcall	_Calc_Err
              120A  158A         
  2105                           	line	87
  2106                           	
  2107  0BF2                     l11873:	
  2108                           ;main.c: 87: if((PIDCycleNo >= 2) )
  2109  0BF2  3002               	movlw	(02h)
  2110  0BF3  1283               	bcf	status, 5	;RP0=0, select bank0
  2111  0BF4  1303               	bcf	status, 6	;RP1=0, select bank0
  2112  0BF5  026F               	subwf	(_PIDCycleNo),w
  2113  0BF6  1C03               	skipc
  2114  0BF7  2BF9               	goto	u4881
  2115  0BF8  2BFA               	goto	u4880
  2116  0BF9                     u4881:
  2117  0BF9  2BE5               	goto	l11867
  2118  0BFA                     u4880:
  2119                           	line	89
  2120                           	
  2121  0BFA                     l11875:	
  2122                           ;main.c: 88: {
  2123                           ;main.c: 89: Calc_PID_op();
  2124  0BFA  120A  118A  2015   	fcall	_Calc_PID_op
              120A  158A         
  2125  0BFF  2BE5               	goto	l11867
  2126                           	line	90
  2127                           	
  2128  0C00                     l6742:	
  2129  0C00  2BE5               	goto	l11867
  2130                           	line	96
  2131                           	
  2132  0C01                     l6741:	
  2133  0C01  2BE5               	goto	l11867
  2134                           	line	97
  2135                           	
  2136  0C02                     l6743:	
  2137                           	line	80
  2138  0C02  2BE5               	goto	l11867
  2139                           	
  2140  0C03                     l6744:	
  2141                           	line	98
  2142                           	
  2143  0C03                     l6745:	
  2144                           	global	start
  2145  0C03  120A  118A  2812   	ljmp	start
  2146                           	opt stack 0
  2147                           GLOBAL	__end_of_main
  2148  0C06                     	__end_of_main:
  2149 ;; =============== function _main ends ============
  2150                           
  2151                           	signat	_main,88
  2152                           	global	_getData
  2153                           psect	text1145,local,class=CODE,delta=2
  2154                           global __ptext1145
  2155  13B5                     __ptext1145:
  2156                           
  2157 ;; *************** function _getData *****************
  2158 ;; Defined at:
  2159 ;;		line 200 in file "Serial.c"
  2160 ;; Parameters:    Size  Location     Type
  2161 ;;		None
  2162 ;; Auto vars:     Size  Location     Type
  2163 ;;  i               1   38[BANK0 ] unsigned char 
  2164 ;; Return value:  Size  Location     Type
  2165 ;;                  1    wreg      unsigned char 
  2166 ;; Registers used:
  2167 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2168 ;; Tracked objects:
  2169 ;;		On entry : 0/0
  2170 ;;		On exit  : 0/0
  2171 ;;		Unchanged: 0/0
  2172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2173 ;;      Params:         0       0       0       0       0
  2174 ;;      Locals:         0       1       0       0       0
  2175 ;;      Temps:          0       1       0       0       0
  2176 ;;      Totals:         0       2       0       0       0
  2177 ;;Total ram usage:        2 bytes
  2178 ;; Hardware stack levels used:    1
  2179 ;; Hardware stack levels required when called:    6
  2180 ;; This function calls:
  2181 ;;		_USARTGetString
  2182 ;;		_str_to_num
  2183 ;;		_getrangeval
  2184 ;;		_USARTWriteChar
  2185 ;;		_USARTWriteString
  2186 ;;		_DispallCur
  2187 ;;		_ChkRange
  2188 ;;		_StoreCurVal
  2189 ;; This function is called by:
  2190 ;;		_main
  2191 ;; This function uses a non-reentrant model
  2192 ;;
  2193                           psect	text1145
  2194                           	file	"Serial.c"
  2195                           	line	200
  2196                           	global	__size_of_getData
  2197  00C8                     	__size_of_getData	equ	__end_of_getData-_getData
  2198                           	
  2199  13B5                     _getData:	
  2200                           	opt	stack 1
  2201                           ; Regs used in _getData: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2202                           	line	202
  2203                           	
  2204  13B5                     l11765:	
  2205                           ;Serial.c: 201: unsigned char i;
  2206                           ;Serial.c: 202: USARTGetString();
  2207  13B5  160A  158A  2550   	fcall	_USARTGetString
              160A  118A         
  2208                           	line	203
  2209                           	
  2210  13BA                     l11767:	
  2211                           ;Serial.c: 203: Command = Commandstr[0];
  2212  13BA  1683               	bsf	status, 5	;RP0=1, select bank3
  2213  13BB  1703               	bsf	status, 6	;RP1=1, select bank3
  2214  13BC  0841               	movf	(_Commandstr)^0180h,w
  2215  13BD  1283               	bcf	status, 5	;RP0=0, select bank0
  2216  13BE  1303               	bcf	status, 6	;RP1=0, select bank0
  2217  13BF  00C5               	movwf	(??_getData+0)+0
  2218  13C0  0845               	movf	(??_getData+0)+0,w
  2219  13C1  00EC               	movwf	(_Command)
  2220                           	line	206
  2221                           	
  2222  13C2                     l11769:	
  2223                           ;Serial.c: 206: for( i = 0 ; i < 10-1 ; i++)
  2224  13C2  01C6               	clrf	(getData@i)
  2225                           	
  2226  13C3                     l11771:	
  2227  13C3  3009               	movlw	(09h)
  2228  13C4  0246               	subwf	(getData@i),w
  2229  13C5  1C03               	skipc
  2230  13C6  2BC8               	goto	u4741
  2231  13C7  2BC9               	goto	u4740
  2232  13C8                     u4741:
  2233  13C8  2BCB               	goto	l11775
  2234  13C9                     u4740:
  2235  13C9  2BE2               	goto	l11781
  2236                           	
  2237  13CA                     l11773:	
  2238  13CA  2BE2               	goto	l11781
  2239                           	line	207
  2240                           	
  2241  13CB                     l1175:	
  2242                           	line	208
  2243                           	
  2244  13CB                     l11775:	
  2245                           ;Serial.c: 207: {
  2246                           ;Serial.c: 208: Commandstr[i] = Commandstr[i+1];
  2247  13CB  0846               	movf	(getData@i),w
  2248  13CC  3E01               	addlw	01h
  2249  13CD  3EC1               	addlw	_Commandstr&0ffh
  2250  13CE  0084               	movwf	fsr0
  2251  13CF  1783               	bsf	status, 7	;select IRP bank3
  2252  13D0  0800               	movf	indf,w
  2253  13D1  00C5               	movwf	(??_getData+0)+0
  2254  13D2  0846               	movf	(getData@i),w
  2255  13D3  3EC1               	addlw	_Commandstr&0ffh
  2256  13D4  0084               	movwf	fsr0
  2257  13D5  0845               	movf	(??_getData+0)+0,w
  2258  13D6  0080               	movwf	indf
  2259                           	line	206
  2260                           	
  2261  13D7                     l11777:	
  2262  13D7  3001               	movlw	(01h)
  2263  13D8  00C5               	movwf	(??_getData+0)+0
  2264  13D9  0845               	movf	(??_getData+0)+0,w
  2265  13DA  07C6               	addwf	(getData@i),f
  2266                           	
  2267  13DB                     l11779:	
  2268  13DB  3009               	movlw	(09h)
  2269  13DC  0246               	subwf	(getData@i),w
  2270  13DD  1C03               	skipc
  2271  13DE  2BE0               	goto	u4751
  2272  13DF  2BE1               	goto	u4750
  2273  13E0                     u4751:
  2274  13E0  2BCB               	goto	l11775
  2275  13E1                     u4750:
  2276  13E1  2BE2               	goto	l11781
  2277                           	
  2278  13E2                     l1176:	
  2279                           	line	211
  2280                           	
  2281  13E2                     l11781:	
  2282                           ;Serial.c: 209: }
  2283                           ;Serial.c: 211: CurVal = str_to_num(Commandstr);
  2284  13E2  30C1               	movlw	(_Commandstr)&0ffh
  2285  13E3  160A  118A  223C   	fcall	_str_to_num
              160A  118A         
  2286  13E8  1283               	bcf	status, 5	;RP0=0, select bank0
  2287  13E9  1303               	bcf	status, 6	;RP1=0, select bank0
  2288  13EA  0830               	movf	(3+(?_str_to_num)),w
  2289  13EB  1683               	bsf	status, 5	;RP0=1, select bank1
  2290  13EC  1303               	bcf	status, 6	;RP1=0, select bank1
  2291  13ED  00AF               	movwf	(_CurVal+3)^080h
  2292  13EE  1283               	bcf	status, 5	;RP0=0, select bank0
  2293  13EF  1303               	bcf	status, 6	;RP1=0, select bank0
  2294  13F0  082F               	movf	(2+(?_str_to_num)),w
  2295  13F1  1683               	bsf	status, 5	;RP0=1, select bank1
  2296  13F2  1303               	bcf	status, 6	;RP1=0, select bank1
  2297  13F3  00AE               	movwf	(_CurVal+2)^080h
  2298  13F4  1283               	bcf	status, 5	;RP0=0, select bank0
  2299  13F5  1303               	bcf	status, 6	;RP1=0, select bank0
  2300  13F6  082E               	movf	(1+(?_str_to_num)),w
  2301  13F7  1683               	bsf	status, 5	;RP0=1, select bank1
  2302  13F8  1303               	bcf	status, 6	;RP1=0, select bank1
  2303  13F9  00AD               	movwf	(_CurVal+1)^080h
  2304  13FA  1283               	bcf	status, 5	;RP0=0, select bank0
  2305  13FB  1303               	bcf	status, 6	;RP1=0, select bank0
  2306  13FC  082D               	movf	(0+(?_str_to_num)),w
  2307  13FD  1683               	bsf	status, 5	;RP0=1, select bank1
  2308  13FE  1303               	bcf	status, 6	;RP1=0, select bank1
  2309  13FF  00AC               	movwf	(_CurVal)^080h
  2310                           
  2311                           	line	214
  2312                           ;Serial.c: 214: getrangeval();
  2313  1400  120A  158A  2000   	fcall	_getrangeval
              160A  118A         
  2314                           	line	215
  2315                           	
  2316  1405                     l11783:	
  2317                           ;Serial.c: 215: if(Command == 9)
  2318  1405  1283               	bcf	status, 5	;RP0=0, select bank0
  2319  1406  1303               	bcf	status, 6	;RP1=0, select bank0
  2320  1407  086C               	movf	(_Command),w
  2321  1408  3A09               	xorlw	09h
  2322  1409  1D03               	skipz
  2323  140A  2C0C               	goto	u4761
  2324  140B  2C0D               	goto	u4760
  2325  140C                     u4761:
  2326  140C  2C1C               	goto	l11793
  2327  140D                     u4760:
  2328                           	line	217
  2329                           	
  2330  140D                     l11785:	
  2331                           ;Serial.c: 216: {
  2332                           ;Serial.c: 217: USARTWriteChar('C');
  2333  140D  3043               	movlw	(043h)
  2334  140E  160A  118A  2000   	fcall	_USARTWriteChar
              160A  118A         
  2335                           	line	218
  2336                           	
  2337  1413                     l11787:	
  2338                           ;Serial.c: 218: USARTWriteString(strnw);
  2339  1413  3002               	movlw	((_strnw-__stringbase))&0ffh
  2340  1414  160A  158A  2390   	fcall	_USARTWriteString
              160A  118A         
  2341  1419  2C7C               	goto	l1178
  2342                           	line	219
  2343                           	
  2344  141A                     l11789:	
  2345                           ;Serial.c: 219: return(9);
  2346                           ;	Return value of _getData is never used
  2347  141A  2C7C               	goto	l1178
  2348                           	line	221
  2349                           	
  2350  141B                     l11791:	
  2351                           ;Serial.c: 221: }
  2352  141B  2C7C               	goto	l1178
  2353                           	line	224
  2354                           	
  2355  141C                     l1177:	
  2356                           	
  2357  141C                     l11793:	
  2358                           ;Serial.c: 224: else if(Command == 'Q') DispallCur();
  2359  141C  1283               	bcf	status, 5	;RP0=0, select bank0
  2360  141D  1303               	bcf	status, 6	;RP1=0, select bank0
  2361  141E  086C               	movf	(_Command),w
  2362  141F  3A51               	xorlw	051h
  2363  1420  1D03               	skipz
  2364  1421  2C23               	goto	u4771
  2365  1422  2C24               	goto	u4770
  2366  1423                     u4771:
  2367  1423  2C2A               	goto	l11797
  2368  1424                     u4770:
  2369                           	
  2370  1424                     l11795:	
  2371  1424  120A  118A  24D8   	fcall	_DispallCur
              160A  118A         
  2372  1429  2C7C               	goto	l1178
  2373                           	line	225
  2374                           	
  2375  142A                     l1180:	
  2376                           	
  2377  142A                     l11797:	
  2378                           ;Serial.c: 225: else if(ChkRange(CurVal))
  2379  142A  1683               	bsf	status, 5	;RP0=1, select bank1
  2380  142B  1303               	bcf	status, 6	;RP1=0, select bank1
  2381  142C  082F               	movf	(_CurVal+3)^080h,w
  2382  142D  1283               	bcf	status, 5	;RP0=0, select bank0
  2383  142E  1303               	bcf	status, 6	;RP1=0, select bank0
  2384  142F  00A3               	movwf	(?_ChkRange+3)
  2385  1430  1683               	bsf	status, 5	;RP0=1, select bank1
  2386  1431  1303               	bcf	status, 6	;RP1=0, select bank1
  2387  1432  082E               	movf	(_CurVal+2)^080h,w
  2388  1433  1283               	bcf	status, 5	;RP0=0, select bank0
  2389  1434  1303               	bcf	status, 6	;RP1=0, select bank0
  2390  1435  00A2               	movwf	(?_ChkRange+2)
  2391  1436  1683               	bsf	status, 5	;RP0=1, select bank1
  2392  1437  1303               	bcf	status, 6	;RP1=0, select bank1
  2393  1438  082D               	movf	(_CurVal+1)^080h,w
  2394  1439  1283               	bcf	status, 5	;RP0=0, select bank0
  2395  143A  1303               	bcf	status, 6	;RP1=0, select bank0
  2396  143B  00A1               	movwf	(?_ChkRange+1)
  2397  143C  1683               	bsf	status, 5	;RP0=1, select bank1
  2398  143D  1303               	bcf	status, 6	;RP1=0, select bank1
  2399  143E  082C               	movf	(_CurVal)^080h,w
  2400  143F  1283               	bcf	status, 5	;RP0=0, select bank0
  2401  1440  1303               	bcf	status, 6	;RP1=0, select bank0
  2402  1441  00A0               	movwf	(?_ChkRange)
  2403                           
  2404  1442  160A  158A  25E4   	fcall	_ChkRange
              160A  118A         
  2405  1447  3A00               	xorlw	0
  2406  1448  1903               	skipnz
  2407  1449  2C4B               	goto	u4781
  2408  144A  2C4C               	goto	u4780
  2409  144B                     u4781:
  2410  144B  2C5B               	goto	l11807
  2411  144C                     u4780:
  2412                           	line	227
  2413                           	
  2414  144C                     l11799:	
  2415                           ;Serial.c: 226: {
  2416                           ;Serial.c: 227: USARTWriteChar('E');
  2417  144C  3045               	movlw	(045h)
  2418  144D  160A  118A  2000   	fcall	_USARTWriteChar
              160A  118A         
  2419                           	line	228
  2420                           	
  2421  1452                     l11801:	
  2422                           ;Serial.c: 228: USARTWriteString(strnw);
  2423  1452  3002               	movlw	((_strnw-__stringbase))&0ffh
  2424  1453  160A  158A  2390   	fcall	_USARTWriteString
              160A  118A         
  2425  1458  2C7C               	goto	l1178
  2426                           	line	229
  2427                           	
  2428  1459                     l11803:	
  2429                           ;Serial.c: 229: return(10);
  2430                           ;	Return value of _getData is never used
  2431  1459  2C7C               	goto	l1178
  2432                           	line	230
  2433                           	
  2434  145A                     l11805:	
  2435                           ;Serial.c: 230: }
  2436  145A  2C7C               	goto	l1178
  2437                           	line	231
  2438                           	
  2439  145B                     l1182:	
  2440                           	line	233
  2441                           	
  2442  145B                     l11807:	
  2443                           ;Serial.c: 231: else
  2444                           ;Serial.c: 232: {
  2445                           ;Serial.c: 233: StoreCurVal(CurVal);
  2446  145B  1683               	bsf	status, 5	;RP0=1, select bank1
  2447  145C  1303               	bcf	status, 6	;RP1=0, select bank1
  2448  145D  082F               	movf	(_CurVal+3)^080h,w
  2449  145E  1283               	bcf	status, 5	;RP0=0, select bank0
  2450  145F  1303               	bcf	status, 6	;RP1=0, select bank0
  2451  1460  00B5               	movwf	(?_StoreCurVal+3)
  2452  1461  1683               	bsf	status, 5	;RP0=1, select bank1
  2453  1462  1303               	bcf	status, 6	;RP1=0, select bank1
  2454  1463  082E               	movf	(_CurVal+2)^080h,w
  2455  1464  1283               	bcf	status, 5	;RP0=0, select bank0
  2456  1465  1303               	bcf	status, 6	;RP1=0, select bank0
  2457  1466  00B4               	movwf	(?_StoreCurVal+2)
  2458  1467  1683               	bsf	status, 5	;RP0=1, select bank1
  2459  1468  1303               	bcf	status, 6	;RP1=0, select bank1
  2460  1469  082D               	movf	(_CurVal+1)^080h,w
  2461  146A  1283               	bcf	status, 5	;RP0=0, select bank0
  2462  146B  1303               	bcf	status, 6	;RP1=0, select bank0
  2463  146C  00B3               	movwf	(?_StoreCurVal+1)
  2464  146D  1683               	bsf	status, 5	;RP0=1, select bank1
  2465  146E  1303               	bcf	status, 6	;RP1=0, select bank1
  2466  146F  082C               	movf	(_CurVal)^080h,w
  2467  1470  1283               	bcf	status, 5	;RP0=0, select bank0
  2468  1471  1303               	bcf	status, 6	;RP1=0, select bank0
  2469  1472  00B2               	movwf	(?_StoreCurVal)
  2470                           
  2471  1473  120A  158A  21EE   	fcall	_StoreCurVal
              160A  118A         
  2472  1478  2C7C               	goto	l1178
  2473                           	line	235
  2474                           	
  2475  1479                     l11809:	
  2476                           ;Serial.c: 235: return(Command);
  2477                           ;	Return value of _getData is never used
  2478  1479  2C7C               	goto	l1178
  2479                           	line	236
  2480                           	
  2481  147A                     l1183:	
  2482  147A  2C7C               	goto	l1178
  2483                           	
  2484  147B                     l1181:	
  2485  147B  2C7C               	goto	l1178
  2486                           	
  2487  147C                     l1179:	
  2488                           	line	237
  2489                           	
  2490  147C                     l1178:	
  2491  147C  0008               	return
  2492                           	opt stack 0
  2493                           GLOBAL	__end_of_getData
  2494  147D                     	__end_of_getData:
  2495 ;; =============== function _getData ends ============
  2496                           
  2497                           	signat	_getData,89
  2498                           	global	_initall
  2499                           psect	text1146,local,class=CODE,delta=2
  2500                           global __ptext1146
  2501  1F0D                     __ptext1146:
  2502                           
  2503 ;; *************** function _initall *****************
  2504 ;; Defined at:
  2505 ;;		line 54 in file "Init.c"
  2506 ;; Parameters:    Size  Location     Type
  2507 ;;		None
  2508 ;; Auto vars:     Size  Location     Type
  2509 ;;		None
  2510 ;; Return value:  Size  Location     Type
  2511 ;;		None               void
  2512 ;; Registers used:
  2513 ;;		wreg, status,2, status,0, pclath, cstack
  2514 ;; Tracked objects:
  2515 ;;		On entry : 0/0
  2516 ;;		On exit  : 0/0
  2517 ;;		Unchanged: 0/0
  2518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2519 ;;      Params:         0       0       0       0       0
  2520 ;;      Locals:         0       0       0       0       0
  2521 ;;      Temps:          0       1       0       0       0
  2522 ;;      Totals:         0       1       0       0       0
  2523 ;;Total ram usage:        1 bytes
  2524 ;; Hardware stack levels used:    1
  2525 ;; Hardware stack levels required when called:    5
  2526 ;; This function calls:
  2527 ;;		_initadc
  2528 ;;		_Readeeprom
  2529 ;;		_inittimer0
  2530 ;;		_inittimer1
  2531 ;;		_inittimer2
  2532 ;;		_Calc_PID_const
  2533 ;;		___lmul
  2534 ;;		___lltoft
  2535 ;; This function is called by:
  2536 ;;		_main
  2537 ;; This function uses a non-reentrant model
  2538 ;;
  2539                           psect	text1146
  2540                           	file	"Init.c"
  2541                           	line	54
  2542                           	global	__size_of_initall
  2543  0076                     	__size_of_initall	equ	__end_of_initall-_initall
  2544                           	
  2545  1F0D                     _initall:	
  2546                           	opt	stack 2
  2547                           ; Regs used in _initall: [wreg+status,2+status,0+pclath+cstack]
  2548                           	line	55
  2549                           	
  2550  1F0D                     l11749:	
  2551                           ;Init.c: 55: initadc();
  2552  1F0D  160A  158A  22B1   	fcall	_initadc
              160A  158A         
  2553                           	line	56
  2554                           ;Init.c: 56: Readeeprom();
  2555  1F12  120A  118A  266F   	fcall	_Readeeprom
              160A  158A         
  2556                           	line	58
  2557                           ;Init.c: 58: inittimer0();
  2558  1F17  160A  158A  22BA   	fcall	_inittimer0
              160A  158A         
  2559                           	line	59
  2560                           ;Init.c: 59: inittimer1();
  2561  1F1C  160A  158A  22DB   	fcall	_inittimer1
              160A  158A         
  2562                           	line	60
  2563                           ;Init.c: 60: inittimer2();
  2564  1F21  160A  158A  2305   	fcall	_inittimer2
              160A  158A         
  2565                           	line	62
  2566                           ;Init.c: 62: Calc_PID_const();
  2567  1F26  120A  158A  267B   	fcall	_Calc_PID_const
              160A  158A         
  2568                           	line	63
  2569                           	
  2570  1F2B                     l11751:	
  2571                           ;Init.c: 63: PIDCycleNo = 0;
  2572  1F2B  1283               	bcf	status, 5	;RP0=0, select bank0
  2573  1F2C  1303               	bcf	status, 6	;RP1=0, select bank0
  2574  1F2D  01EF               	clrf	(_PIDCycleNo)
  2575                           	line	64
  2576                           	
  2577  1F2E                     l11753:	
  2578                           ;Init.c: 64: MotionComplete = 1;
  2579  1F2E  01EE               	clrf	(_MotionComplete)
  2580  1F2F  1403               	bsf	status,0
  2581  1F30  0DEE               	rlf	(_MotionComplete),f
  2582                           	line	66
  2583                           	
  2584  1F31                     l11755:	
  2585                           ;Init.c: 66: MaxStep = ACurVal * 18;
  2586  1F31  1683               	bsf	status, 5	;RP0=1, select bank1
  2587  1F32  1303               	bcf	status, 6	;RP1=0, select bank1
  2588  1F33  0823               	movf	(_ACurVal+3)^080h,w
  2589  1F34  1283               	bcf	status, 5	;RP0=0, select bank0
  2590  1F35  1303               	bcf	status, 6	;RP1=0, select bank0
  2591  1F36  00A3               	movwf	(?___lmul+3)
  2592  1F37  1683               	bsf	status, 5	;RP0=1, select bank1
  2593  1F38  1303               	bcf	status, 6	;RP1=0, select bank1
  2594  1F39  0822               	movf	(_ACurVal+2)^080h,w
  2595  1F3A  1283               	bcf	status, 5	;RP0=0, select bank0
  2596  1F3B  1303               	bcf	status, 6	;RP1=0, select bank0
  2597  1F3C  00A2               	movwf	(?___lmul+2)
  2598  1F3D  1683               	bsf	status, 5	;RP0=1, select bank1
  2599  1F3E  1303               	bcf	status, 6	;RP1=0, select bank1
  2600  1F3F  0821               	movf	(_ACurVal+1)^080h,w
  2601  1F40  1283               	bcf	status, 5	;RP0=0, select bank0
  2602  1F41  1303               	bcf	status, 6	;RP1=0, select bank0
  2603  1F42  00A1               	movwf	(?___lmul+1)
  2604  1F43  1683               	bsf	status, 5	;RP0=1, select bank1
  2605  1F44  1303               	bcf	status, 6	;RP1=0, select bank1
  2606  1F45  0820               	movf	(_ACurVal)^080h,w
  2607  1F46  1283               	bcf	status, 5	;RP0=0, select bank0
  2608  1F47  1303               	bcf	status, 6	;RP1=0, select bank0
  2609  1F48  00A0               	movwf	(?___lmul)
  2610                           
  2611  1F49  3000               	movlw	0
  2612  1F4A  00A7               	movwf	3+(?___lmul)+04h
  2613  1F4B  3000               	movlw	0
  2614  1F4C  00A6               	movwf	2+(?___lmul)+04h
  2615  1F4D  3000               	movlw	0
  2616  1F4E  00A5               	movwf	1+(?___lmul)+04h
  2617  1F4F  3012               	movlw	012h
  2618  1F50  00A4               	movwf	0+(?___lmul)+04h
  2619                           
  2620  1F51  160A  118A  2010   	fcall	___lmul
              160A  158A         
  2621  1F56  1283               	bcf	status, 5	;RP0=0, select bank0
  2622  1F57  1303               	bcf	status, 6	;RP1=0, select bank0
  2623  1F58  0823               	movf	(3+(?___lmul)),w
  2624  1F59  00B0               	movwf	(?___lltoft+3)
  2625  1F5A  0822               	movf	(2+(?___lmul)),w
  2626  1F5B  00AF               	movwf	(?___lltoft+2)
  2627  1F5C  0821               	movf	(1+(?___lmul)),w
  2628  1F5D  00AE               	movwf	(?___lltoft+1)
  2629  1F5E  0820               	movf	(0+(?___lmul)),w
  2630  1F5F  00AD               	movwf	(?___lltoft)
  2631                           
  2632  1F60  160A  158A  249D   	fcall	___lltoft
              160A  158A         
  2633  1F65  1283               	bcf	status, 5	;RP0=0, select bank0
  2634  1F66  1303               	bcf	status, 6	;RP1=0, select bank0
  2635  1F67  082D               	movf	(0+(?___lltoft)),w
  2636  1F68  1683               	bsf	status, 5	;RP0=1, select bank1
  2637  1F69  1303               	bcf	status, 6	;RP1=0, select bank1
  2638  1F6A  00CC               	movwf	(_MaxStep)^080h
  2639  1F6B  1283               	bcf	status, 5	;RP0=0, select bank0
  2640  1F6C  1303               	bcf	status, 6	;RP1=0, select bank0
  2641  1F6D  082E               	movf	(1+(?___lltoft)),w
  2642  1F6E  1683               	bsf	status, 5	;RP0=1, select bank1
  2643  1F6F  1303               	bcf	status, 6	;RP1=0, select bank1
  2644  1F70  00CD               	movwf	(_MaxStep+1)^080h
  2645  1F71  1283               	bcf	status, 5	;RP0=0, select bank0
  2646  1F72  1303               	bcf	status, 6	;RP1=0, select bank0
  2647  1F73  082F               	movf	(2+(?___lltoft)),w
  2648  1F74  1683               	bsf	status, 5	;RP0=1, select bank1
  2649  1F75  1303               	bcf	status, 6	;RP1=0, select bank1
  2650  1F76  00CE               	movwf	(_MaxStep+2)^080h
  2651                           	line	67
  2652                           	
  2653  1F77                     l11757:	
  2654                           ;Init.c: 67: Crankflg = 0;
  2655  1F77  01EB               	clrf	(_Crankflg)^080h
  2656                           	line	68
  2657                           	
  2658  1F78                     l11759:	
  2659                           ;Init.c: 68: Capidx = 0;
  2660  1F78  01FC               	clrf	(_Capidx)
  2661                           	line	70
  2662                           	
  2663  1F79                     l11761:	
  2664                           ;Init.c: 70: INTCON |= 0b11001000;
  2665  1F79  30C8               	movlw	(0C8h)
  2666  1F7A  1283               	bcf	status, 5	;RP0=0, select bank0
  2667  1F7B  1303               	bcf	status, 6	;RP1=0, select bank0
  2668  1F7C  00DC               	movwf	(??_initall+0)+0
  2669  1F7D  085C               	movf	(??_initall+0)+0,w
  2670  1F7E  048B               	iorwf	(11),f	;volatile
  2671                           	line	71
  2672                           	
  2673  1F7F                     l11763:	
  2674                           ;Init.c: 71: PIE1 |= 0b00000010;
  2675  1F7F  1683               	bsf	status, 5	;RP0=1, select bank1
  2676  1F80  1303               	bcf	status, 6	;RP1=0, select bank1
  2677  1F81  148C               	bsf	(140)^080h+(1/8),(1)&7	;volatile
  2678                           	line	72
  2679                           	
  2680  1F82                     l4522:	
  2681  1F82  0008               	return
  2682                           	opt stack 0
  2683                           GLOBAL	__end_of_initall
  2684  1F83                     	__end_of_initall:
  2685 ;; =============== function _initall ends ============
  2686                           
  2687                           	signat	_initall,88
  2688                           	global	_Calc_Err
  2689                           psect	text1147,local,class=CODE,delta=2
  2690                           global __ptext1147
  2691  1548                     __ptext1147:
  2692                           
  2693 ;; *************** function _Calc_Err *****************
  2694 ;; Defined at:
  2695 ;;		line 56 in file "PIDp.c"
  2696 ;; Parameters:    Size  Location     Type
  2697 ;;  errno           1    wreg     unsigned char 
  2698 ;; Auto vars:     Size  Location     Type
  2699 ;;  errno           1   47[BANK0 ] unsigned char 
  2700 ;; Return value:  Size  Location     Type
  2701 ;;		None               void
  2702 ;; Registers used:
  2703 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2704 ;; Tracked objects:
  2705 ;;		On entry : 0/0
  2706 ;;		On exit  : 0/0
  2707 ;;		Unchanged: 0/0
  2708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2709 ;;      Params:         0       0       0       0       0
  2710 ;;      Locals:         0       1       0       0       0
  2711 ;;      Temps:          0       2       0       0       0
  2712 ;;      Totals:         0       3       0       0       0
  2713 ;;Total ram usage:        3 bytes
  2714 ;; Hardware stack levels used:    1
  2715 ;; Hardware stack levels required when called:    5
  2716 ;; This function calls:
  2717 ;;		_Calc_SetPoint
  2718 ;;		_get_Actrpm
  2719 ;;		___awtoft
  2720 ;; This function is called by:
  2721 ;;		_main
  2722 ;; This function uses a non-reentrant model
  2723 ;;
  2724                           psect	text1147
  2725                           	file	"PIDp.c"
  2726                           	line	56
  2727                           	global	__size_of_Calc_Err
  2728  00D0                     	__size_of_Calc_Err	equ	__end_of_Calc_Err-_Calc_Err
  2729                           	
  2730  1548                     _Calc_Err:	
  2731                           	opt	stack 2
  2732                           ; Regs used in _Calc_Err: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2733                           ;Calc_Err@errno stored from wreg
  2734                           	line	58
  2735  1548  1283               	bcf	status, 5	;RP0=0, select bank0
  2736  1549  1303               	bcf	status, 6	;RP1=0, select bank0
  2737  154A  00CF               	movwf	(Calc_Err@errno)
  2738                           	
  2739  154B                     l11727:	
  2740                           ;PIDp.c: 58: Calc_SetPoint();
  2741  154B  120A  158A  2406   	fcall	_Calc_SetPoint
              160A  118A         
  2742                           	line	59
  2743                           ;PIDp.c: 59: get_Actrpm();
  2744  1550  120A  158A  20ED   	fcall	_get_Actrpm
              160A  118A         
  2745                           	line	63
  2746                           	
  2747  1555                     l11729:	
  2748                           ;PIDp.c: 63: e = SetPoint - Rpm;
  2749  1555  1283               	bcf	status, 5	;RP0=0, select bank0
  2750  1556  1303               	bcf	status, 6	;RP1=0, select bank0
  2751  1557  0961               	comf	(_Rpm),w
  2752  1558  00CD               	movwf	(??_Calc_Err+0)+0
  2753  1559  0962               	comf	(_Rpm+1),w
  2754  155A  00CE               	movwf	((??_Calc_Err+0)+0+1)
  2755  155B  0ACD               	incf	(??_Calc_Err+0)+0,f
  2756  155C  1903               	skipnz
  2757  155D  0ACE               	incf	((??_Calc_Err+0)+0+1),f
  2758  155E  0868               	movf	(_SetPoint),w
  2759  155F  074D               	addwf	0+(??_Calc_Err+0)+0,w
  2760  1560  1683               	bsf	status, 5	;RP0=1, select bank1
  2761  1561  1303               	bcf	status, 6	;RP1=0, select bank1
  2762  1562  00E9               	movwf	(_e)^080h
  2763  1563  1283               	bcf	status, 5	;RP0=0, select bank0
  2764  1564  1303               	bcf	status, 6	;RP1=0, select bank0
  2765  1565  0869               	movf	(_SetPoint+1),w
  2766  1566  1803               	skipnc
  2767  1567  0A69               	incf	(_SetPoint+1),w
  2768  1568  074E               	addwf	1+(??_Calc_Err+0)+0,w
  2769  1569  1683               	bsf	status, 5	;RP0=1, select bank1
  2770  156A  1303               	bcf	status, 6	;RP1=0, select bank1
  2771  156B  00EA               	movwf	1+(_e)^080h
  2772                           	line	65
  2773                           ;PIDp.c: 65: switch(errno)
  2774  156C  2E0A               	goto	l11747
  2775                           	line	67
  2776                           ;PIDp.c: 66: {
  2777                           ;PIDp.c: 67: case 0: e0 = e; PIDCycleNo++; break;
  2778                           	
  2779  156D                     l3410:	
  2780                           	
  2781  156D                     l11731:	
  2782  156D  1683               	bsf	status, 5	;RP0=1, select bank1
  2783  156E  1303               	bcf	status, 6	;RP1=0, select bank1
  2784  156F  086A               	movf	(_e+1)^080h,w
  2785  1570  1283               	bcf	status, 5	;RP0=0, select bank0
  2786  1571  1303               	bcf	status, 6	;RP1=0, select bank0
  2787  1572  01A9               	clrf	(?___awtoft+1)
  2788  1573  07A9               	addwf	(?___awtoft+1)
  2789  1574  1683               	bsf	status, 5	;RP0=1, select bank1
  2790  1575  1303               	bcf	status, 6	;RP1=0, select bank1
  2791  1576  0869               	movf	(_e)^080h,w
  2792  1577  1283               	bcf	status, 5	;RP0=0, select bank0
  2793  1578  1303               	bcf	status, 6	;RP1=0, select bank0
  2794  1579  01A8               	clrf	(?___awtoft)
  2795  157A  07A8               	addwf	(?___awtoft)
  2796                           
  2797  157B  160A  158A  23B5   	fcall	___awtoft
              160A  118A         
  2798  1580  1283               	bcf	status, 5	;RP0=0, select bank0
  2799  1581  1303               	bcf	status, 6	;RP1=0, select bank0
  2800  1582  0828               	movf	(0+(?___awtoft)),w
  2801  1583  1683               	bsf	status, 5	;RP0=1, select bank1
  2802  1584  1303               	bcf	status, 6	;RP1=0, select bank1
  2803  1585  00CF               	movwf	(_e0)^080h
  2804  1586  1283               	bcf	status, 5	;RP0=0, select bank0
  2805  1587  1303               	bcf	status, 6	;RP1=0, select bank0
  2806  1588  0829               	movf	(1+(?___awtoft)),w
  2807  1589  1683               	bsf	status, 5	;RP0=1, select bank1
  2808  158A  1303               	bcf	status, 6	;RP1=0, select bank1
  2809  158B  00D0               	movwf	(_e0+1)^080h
  2810  158C  1283               	bcf	status, 5	;RP0=0, select bank0
  2811  158D  1303               	bcf	status, 6	;RP1=0, select bank0
  2812  158E  082A               	movf	(2+(?___awtoft)),w
  2813  158F  1683               	bsf	status, 5	;RP0=1, select bank1
  2814  1590  1303               	bcf	status, 6	;RP1=0, select bank1
  2815  1591  00D1               	movwf	(_e0+2)^080h
  2816                           	
  2817  1592                     l11733:	
  2818  1592  3001               	movlw	(01h)
  2819  1593  1283               	bcf	status, 5	;RP0=0, select bank0
  2820  1594  1303               	bcf	status, 6	;RP1=0, select bank0
  2821  1595  00CD               	movwf	(??_Calc_Err+0)+0
  2822  1596  084D               	movf	(??_Calc_Err+0)+0,w
  2823  1597  07EF               	addwf	(_PIDCycleNo),f
  2824  1598  2E17               	goto	l3414
  2825                           	line	68
  2826                           ;PIDp.c: 68: case 1: e1 = e0; e0 = e; PIDCycleNo++; break;
  2827                           	
  2828  1599                     l3412:	
  2829                           	
  2830  1599                     l11735:	
  2831  1599  1683               	bsf	status, 5	;RP0=1, select bank1
  2832  159A  1303               	bcf	status, 6	;RP1=0, select bank1
  2833  159B  084F               	movf	(_e0)^080h,w
  2834  159C  00D2               	movwf	(_e1)^080h
  2835  159D  0850               	movf	(_e0+1)^080h,w
  2836  159E  00D3               	movwf	(_e1+1)^080h
  2837  159F  0851               	movf	(_e0+2)^080h,w
  2838  15A0  00D4               	movwf	(_e1+2)^080h
  2839                           	
  2840  15A1                     l11737:	
  2841  15A1  086A               	movf	(_e+1)^080h,w
  2842  15A2  1283               	bcf	status, 5	;RP0=0, select bank0
  2843  15A3  1303               	bcf	status, 6	;RP1=0, select bank0
  2844  15A4  01A9               	clrf	(?___awtoft+1)
  2845  15A5  07A9               	addwf	(?___awtoft+1)
  2846  15A6  1683               	bsf	status, 5	;RP0=1, select bank1
  2847  15A7  1303               	bcf	status, 6	;RP1=0, select bank1
  2848  15A8  0869               	movf	(_e)^080h,w
  2849  15A9  1283               	bcf	status, 5	;RP0=0, select bank0
  2850  15AA  1303               	bcf	status, 6	;RP1=0, select bank0
  2851  15AB  01A8               	clrf	(?___awtoft)
  2852  15AC  07A8               	addwf	(?___awtoft)
  2853                           
  2854  15AD  160A  158A  23B5   	fcall	___awtoft
              160A  118A         
  2855  15B2  1283               	bcf	status, 5	;RP0=0, select bank0
  2856  15B3  1303               	bcf	status, 6	;RP1=0, select bank0
  2857  15B4  0828               	movf	(0+(?___awtoft)),w
  2858  15B5  1683               	bsf	status, 5	;RP0=1, select bank1
  2859  15B6  1303               	bcf	status, 6	;RP1=0, select bank1
  2860  15B7  00CF               	movwf	(_e0)^080h
  2861  15B8  1283               	bcf	status, 5	;RP0=0, select bank0
  2862  15B9  1303               	bcf	status, 6	;RP1=0, select bank0
  2863  15BA  0829               	movf	(1+(?___awtoft)),w
  2864  15BB  1683               	bsf	status, 5	;RP0=1, select bank1
  2865  15BC  1303               	bcf	status, 6	;RP1=0, select bank1
  2866  15BD  00D0               	movwf	(_e0+1)^080h
  2867  15BE  1283               	bcf	status, 5	;RP0=0, select bank0
  2868  15BF  1303               	bcf	status, 6	;RP1=0, select bank0
  2869  15C0  082A               	movf	(2+(?___awtoft)),w
  2870  15C1  1683               	bsf	status, 5	;RP0=1, select bank1
  2871  15C2  1303               	bcf	status, 6	;RP1=0, select bank1
  2872  15C3  00D1               	movwf	(_e0+2)^080h
  2873                           	
  2874  15C4                     l11739:	
  2875  15C4  3001               	movlw	(01h)
  2876  15C5  1283               	bcf	status, 5	;RP0=0, select bank0
  2877  15C6  1303               	bcf	status, 6	;RP1=0, select bank0
  2878  15C7  00CD               	movwf	(??_Calc_Err+0)+0
  2879  15C8  084D               	movf	(??_Calc_Err+0)+0,w
  2880  15C9  07EF               	addwf	(_PIDCycleNo),f
  2881  15CA  2E17               	goto	l3414
  2882                           	line	69
  2883                           ;PIDp.c: 69: case 2: e2 = e1 ;e1 = e0 ; e0 = e; break;
  2884                           	
  2885  15CB                     l3413:	
  2886                           	
  2887  15CB                     l11741:	
  2888  15CB  1683               	bsf	status, 5	;RP0=1, select bank1
  2889  15CC  1303               	bcf	status, 6	;RP1=0, select bank1
  2890  15CD  0852               	movf	(_e1)^080h,w
  2891  15CE  1683               	bsf	status, 5	;RP0=1, select bank3
  2892  15CF  1703               	bsf	status, 6	;RP1=1, select bank3
  2893  15D0  00AF               	movwf	(_e2)^0180h
  2894  15D1  1683               	bsf	status, 5	;RP0=1, select bank1
  2895  15D2  1303               	bcf	status, 6	;RP1=0, select bank1
  2896  15D3  0853               	movf	(_e1+1)^080h,w
  2897  15D4  1683               	bsf	status, 5	;RP0=1, select bank3
  2898  15D5  1703               	bsf	status, 6	;RP1=1, select bank3
  2899  15D6  00B0               	movwf	(_e2+1)^0180h
  2900  15D7  1683               	bsf	status, 5	;RP0=1, select bank1
  2901  15D8  1303               	bcf	status, 6	;RP1=0, select bank1
  2902  15D9  0854               	movf	(_e1+2)^080h,w
  2903  15DA  1683               	bsf	status, 5	;RP0=1, select bank3
  2904  15DB  1703               	bsf	status, 6	;RP1=1, select bank3
  2905  15DC  00B1               	movwf	(_e2+2)^0180h
  2906  15DD  1683               	bsf	status, 5	;RP0=1, select bank1
  2907  15DE  1303               	bcf	status, 6	;RP1=0, select bank1
  2908  15DF  084F               	movf	(_e0)^080h,w
  2909  15E0  00D2               	movwf	(_e1)^080h
  2910  15E1  0850               	movf	(_e0+1)^080h,w
  2911  15E2  00D3               	movwf	(_e1+1)^080h
  2912  15E3  0851               	movf	(_e0+2)^080h,w
  2913  15E4  00D4               	movwf	(_e1+2)^080h
  2914                           	
  2915  15E5                     l11743:	
  2916  15E5  086A               	movf	(_e+1)^080h,w
  2917  15E6  1283               	bcf	status, 5	;RP0=0, select bank0
  2918  15E7  1303               	bcf	status, 6	;RP1=0, select bank0
  2919  15E8  01A9               	clrf	(?___awtoft+1)
  2920  15E9  07A9               	addwf	(?___awtoft+1)
  2921  15EA  1683               	bsf	status, 5	;RP0=1, select bank1
  2922  15EB  1303               	bcf	status, 6	;RP1=0, select bank1
  2923  15EC  0869               	movf	(_e)^080h,w
  2924  15ED  1283               	bcf	status, 5	;RP0=0, select bank0
  2925  15EE  1303               	bcf	status, 6	;RP1=0, select bank0
  2926  15EF  01A8               	clrf	(?___awtoft)
  2927  15F0  07A8               	addwf	(?___awtoft)
  2928                           
  2929  15F1  160A  158A  23B5   	fcall	___awtoft
              160A  118A         
  2930  15F6  1283               	bcf	status, 5	;RP0=0, select bank0
  2931  15F7  1303               	bcf	status, 6	;RP1=0, select bank0
  2932  15F8  0828               	movf	(0+(?___awtoft)),w
  2933  15F9  1683               	bsf	status, 5	;RP0=1, select bank1
  2934  15FA  1303               	bcf	status, 6	;RP1=0, select bank1
  2935  15FB  00CF               	movwf	(_e0)^080h
  2936  15FC  1283               	bcf	status, 5	;RP0=0, select bank0
  2937  15FD  1303               	bcf	status, 6	;RP1=0, select bank0
  2938  15FE  0829               	movf	(1+(?___awtoft)),w
  2939  15FF  1683               	bsf	status, 5	;RP0=1, select bank1
  2940  1600  1303               	bcf	status, 6	;RP1=0, select bank1
  2941  1601  00D0               	movwf	(_e0+1)^080h
  2942  1602  1283               	bcf	status, 5	;RP0=0, select bank0
  2943  1603  1303               	bcf	status, 6	;RP1=0, select bank0
  2944  1604  082A               	movf	(2+(?___awtoft)),w
  2945  1605  1683               	bsf	status, 5	;RP0=1, select bank1
  2946  1606  1303               	bcf	status, 6	;RP1=0, select bank1
  2947  1607  00D1               	movwf	(_e0+2)^080h
  2948  1608  2E17               	goto	l3414
  2949                           	line	70
  2950                           	
  2951  1609                     l11745:	
  2952                           ;PIDp.c: 70: }
  2953  1609  2E17               	goto	l3414
  2954                           	line	65
  2955                           	
  2956  160A                     l3409:	
  2957                           	
  2958  160A                     l11747:	
  2959  160A  1283               	bcf	status, 5	;RP0=0, select bank0
  2960  160B  1303               	bcf	status, 6	;RP1=0, select bank0
  2961  160C  084F               	movf	(Calc_Err@errno),w
  2962                           	; Switch size 1, requested type "space"
  2963                           ; Number of cases is 3, Range of values is 0 to 2
  2964                           ; switch strategies available:
  2965                           ; Name         Instructions Cycles
  2966                           ; simple_byte           10     6 (average)
  2967                           ; direct_byte           17     8 (fixed)
  2968                           ; jumptable            260     6 (fixed)
  2969                           ; rangetable             7     6 (fixed)
  2970                           ; spacedrange           12     9 (fixed)
  2971                           ; locatedrange           3     3 (fixed)
  2972                           ;	Chosen strategy is simple_byte
  2973                           
  2974                           	opt asmopt_off
  2975  160D  3A00               	xorlw	0^0	; case 0
  2976  160E  1903               	skipnz
  2977  160F  2D6D               	goto	l11731
  2978  1610  3A01               	xorlw	1^0	; case 1
  2979  1611  1903               	skipnz
  2980  1612  2D99               	goto	l11735
  2981  1613  3A03               	xorlw	2^1	; case 2
  2982  1614  1903               	skipnz
  2983  1615  2DCB               	goto	l11741
  2984  1616  2E17               	goto	l3414
  2985                           	opt asmopt_on
  2986                           
  2987                           	line	70
  2988                           	
  2989  1617                     l3411:	
  2990                           	line	71
  2991                           	
  2992  1617                     l3414:	
  2993  1617  0008               	return
  2994                           	opt stack 0
  2995                           GLOBAL	__end_of_Calc_Err
  2996  1618                     	__end_of_Calc_Err:
  2997 ;; =============== function _Calc_Err ends ============
  2998                           
  2999                           	signat	_Calc_Err,4216
  3000                           	global	_StoreCurVal
  3001                           psect	text1148,local,class=CODE,delta=2
  3002                           global __ptext1148
  3003  09EE                     __ptext1148:
  3004                           
  3005 ;; *************** function _StoreCurVal *****************
  3006 ;; Defined at:
  3007 ;;		line 180 in file "Serial.c"
  3008 ;; Parameters:    Size  Location     Type
  3009 ;;  val             4   18[BANK0 ] unsigned long 
  3010 ;; Auto vars:     Size  Location     Type
  3011 ;;		None
  3012 ;; Return value:  Size  Location     Type
  3013 ;;		None               void
  3014 ;; Registers used:
  3015 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3016 ;; Tracked objects:
  3017 ;;		On entry : 0/0
  3018 ;;		On exit  : 0/0
  3019 ;;		Unchanged: 0/0
  3020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3021 ;;      Params:         0       4       0       0       0
  3022 ;;      Locals:         0       0       0       0       0
  3023 ;;      Temps:          0       1       0       0       0
  3024 ;;      Totals:         0       5       0       0       0
  3025 ;;Total ram usage:        5 bytes
  3026 ;; Hardware stack levels used:    1
  3027 ;; Hardware stack levels required when called:    5
  3028 ;; This function calls:
  3029 ;;		_Writeeeprom
  3030 ;; This function is called by:
  3031 ;;		_getData
  3032 ;; This function uses a non-reentrant model
  3033 ;;
  3034                           psect	text1148
  3035                           	file	"Serial.c"
  3036                           	line	180
  3037                           	global	__size_of_StoreCurVal
  3038  010C                     	__size_of_StoreCurVal	equ	__end_of_StoreCurVal-_StoreCurVal
  3039                           	
  3040  09EE                     _StoreCurVal:	
  3041                           	opt	stack 1
  3042                           ; Regs used in _StoreCurVal: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3043                           	line	181
  3044                           	
  3045  09EE                     l11699:	
  3046                           ;Serial.c: 181: switch(Command)
  3047  09EE  2ACF               	goto	l11723
  3048                           	line	183
  3049                           ;Serial.c: 182: {
  3050                           ;Serial.c: 183: case 'Z': ZCurVal = val; break;
  3051                           	
  3052  09EF                     l1160:	
  3053                           	
  3054  09EF                     l11701:	
  3055  09EF  1283               	bcf	status, 5	;RP0=0, select bank0
  3056  09F0  1303               	bcf	status, 6	;RP1=0, select bank0
  3057  09F1  0835               	movf	(StoreCurVal@val+3),w
  3058  09F2  1683               	bsf	status, 5	;RP0=1, select bank1
  3059  09F3  1303               	bcf	status, 6	;RP1=0, select bank1
  3060  09F4  00CB               	movwf	(_ZCurVal+3)^080h
  3061  09F5  1283               	bcf	status, 5	;RP0=0, select bank0
  3062  09F6  1303               	bcf	status, 6	;RP1=0, select bank0
  3063  09F7  0834               	movf	(StoreCurVal@val+2),w
  3064  09F8  1683               	bsf	status, 5	;RP0=1, select bank1
  3065  09F9  1303               	bcf	status, 6	;RP1=0, select bank1
  3066  09FA  00CA               	movwf	(_ZCurVal+2)^080h
  3067  09FB  1283               	bcf	status, 5	;RP0=0, select bank0
  3068  09FC  1303               	bcf	status, 6	;RP1=0, select bank0
  3069  09FD  0833               	movf	(StoreCurVal@val+1),w
  3070  09FE  1683               	bsf	status, 5	;RP0=1, select bank1
  3071  09FF  1303               	bcf	status, 6	;RP1=0, select bank1
  3072  0A00  00C9               	movwf	(_ZCurVal+1)^080h
  3073  0A01  1283               	bcf	status, 5	;RP0=0, select bank0
  3074  0A02  1303               	bcf	status, 6	;RP1=0, select bank0
  3075  0A03  0832               	movf	(StoreCurVal@val),w
  3076  0A04  1683               	bsf	status, 5	;RP0=1, select bank1
  3077  0A05  1303               	bcf	status, 6	;RP1=0, select bank1
  3078  0A06  00C8               	movwf	(_ZCurVal)^080h
  3079                           
  3080  0A07  2AF4               	goto	l11725
  3081                           	line	184
  3082                           ;Serial.c: 184: case 'S': SCurVal = val; break;
  3083                           	
  3084  0A08                     l1162:	
  3085                           	
  3086  0A08                     l11703:	
  3087  0A08  1283               	bcf	status, 5	;RP0=0, select bank0
  3088  0A09  0835               	movf	(StoreCurVal@val+3),w
  3089  0A0A  1683               	bsf	status, 5	;RP0=1, select bank1
  3090  0A0B  1303               	bcf	status, 6	;RP1=0, select bank1
  3091  0A0C  00C3               	movwf	(_SCurVal+3)^080h
  3092  0A0D  1283               	bcf	status, 5	;RP0=0, select bank0
  3093  0A0E  1303               	bcf	status, 6	;RP1=0, select bank0
  3094  0A0F  0834               	movf	(StoreCurVal@val+2),w
  3095  0A10  1683               	bsf	status, 5	;RP0=1, select bank1
  3096  0A11  1303               	bcf	status, 6	;RP1=0, select bank1
  3097  0A12  00C2               	movwf	(_SCurVal+2)^080h
  3098  0A13  1283               	bcf	status, 5	;RP0=0, select bank0
  3099  0A14  1303               	bcf	status, 6	;RP1=0, select bank0
  3100  0A15  0833               	movf	(StoreCurVal@val+1),w
  3101  0A16  1683               	bsf	status, 5	;RP0=1, select bank1
  3102  0A17  1303               	bcf	status, 6	;RP1=0, select bank1
  3103  0A18  00C1               	movwf	(_SCurVal+1)^080h
  3104  0A19  1283               	bcf	status, 5	;RP0=0, select bank0
  3105  0A1A  1303               	bcf	status, 6	;RP1=0, select bank0
  3106  0A1B  0832               	movf	(StoreCurVal@val),w
  3107  0A1C  1683               	bsf	status, 5	;RP0=1, select bank1
  3108  0A1D  1303               	bcf	status, 6	;RP1=0, select bank1
  3109  0A1E  00C0               	movwf	(_SCurVal)^080h
  3110                           
  3111  0A1F  2AF4               	goto	l11725
  3112                           	line	185
  3113                           ;Serial.c: 185: case 'T': NoTeeth = val; break;
  3114                           	
  3115  0A20                     l1163:	
  3116                           	
  3117  0A20                     l11705:	
  3118  0A20  1283               	bcf	status, 5	;RP0=0, select bank0
  3119  0A21  0835               	movf	(StoreCurVal@val+3),w
  3120  0A22  1683               	bsf	status, 5	;RP0=1, select bank1
  3121  0A23  1303               	bcf	status, 6	;RP1=0, select bank1
  3122  0A24  00BB               	movwf	(_NoTeeth+3)^080h
  3123  0A25  1283               	bcf	status, 5	;RP0=0, select bank0
  3124  0A26  1303               	bcf	status, 6	;RP1=0, select bank0
  3125  0A27  0834               	movf	(StoreCurVal@val+2),w
  3126  0A28  1683               	bsf	status, 5	;RP0=1, select bank1
  3127  0A29  1303               	bcf	status, 6	;RP1=0, select bank1
  3128  0A2A  00BA               	movwf	(_NoTeeth+2)^080h
  3129  0A2B  1283               	bcf	status, 5	;RP0=0, select bank0
  3130  0A2C  1303               	bcf	status, 6	;RP1=0, select bank0
  3131  0A2D  0833               	movf	(StoreCurVal@val+1),w
  3132  0A2E  1683               	bsf	status, 5	;RP0=1, select bank1
  3133  0A2F  1303               	bcf	status, 6	;RP1=0, select bank1
  3134  0A30  00B9               	movwf	(_NoTeeth+1)^080h
  3135  0A31  1283               	bcf	status, 5	;RP0=0, select bank0
  3136  0A32  1303               	bcf	status, 6	;RP1=0, select bank0
  3137  0A33  0832               	movf	(StoreCurVal@val),w
  3138  0A34  1683               	bsf	status, 5	;RP0=1, select bank1
  3139  0A35  1303               	bcf	status, 6	;RP1=0, select bank1
  3140  0A36  00B8               	movwf	(_NoTeeth)^080h
  3141                           
  3142  0A37  2AF4               	goto	l11725
  3143                           	line	187
  3144                           ;Serial.c: 187: case 'P': PCurVal = val; break;
  3145                           	
  3146  0A38                     l1164:	
  3147                           	
  3148  0A38                     l11707:	
  3149  0A38  1283               	bcf	status, 5	;RP0=0, select bank0
  3150  0A39  0835               	movf	(StoreCurVal@val+3),w
  3151  0A3A  1683               	bsf	status, 5	;RP0=1, select bank1
  3152  0A3B  1303               	bcf	status, 6	;RP1=0, select bank1
  3153  0A3C  00BF               	movwf	(_PCurVal+3)^080h
  3154  0A3D  1283               	bcf	status, 5	;RP0=0, select bank0
  3155  0A3E  1303               	bcf	status, 6	;RP1=0, select bank0
  3156  0A3F  0834               	movf	(StoreCurVal@val+2),w
  3157  0A40  1683               	bsf	status, 5	;RP0=1, select bank1
  3158  0A41  1303               	bcf	status, 6	;RP1=0, select bank1
  3159  0A42  00BE               	movwf	(_PCurVal+2)^080h
  3160  0A43  1283               	bcf	status, 5	;RP0=0, select bank0
  3161  0A44  1303               	bcf	status, 6	;RP1=0, select bank0
  3162  0A45  0833               	movf	(StoreCurVal@val+1),w
  3163  0A46  1683               	bsf	status, 5	;RP0=1, select bank1
  3164  0A47  1303               	bcf	status, 6	;RP1=0, select bank1
  3165  0A48  00BD               	movwf	(_PCurVal+1)^080h
  3166  0A49  1283               	bcf	status, 5	;RP0=0, select bank0
  3167  0A4A  1303               	bcf	status, 6	;RP1=0, select bank0
  3168  0A4B  0832               	movf	(StoreCurVal@val),w
  3169  0A4C  1683               	bsf	status, 5	;RP0=1, select bank1
  3170  0A4D  1303               	bcf	status, 6	;RP1=0, select bank1
  3171  0A4E  00BC               	movwf	(_PCurVal)^080h
  3172                           
  3173  0A4F  2AF4               	goto	l11725
  3174                           	line	188
  3175                           ;Serial.c: 188: case 'I': ICurVal = val; break;
  3176                           	
  3177  0A50                     l1165:	
  3178                           	
  3179  0A50                     l11709:	
  3180  0A50  1283               	bcf	status, 5	;RP0=0, select bank0
  3181  0A51  0835               	movf	(StoreCurVal@val+3),w
  3182  0A52  1683               	bsf	status, 5	;RP0=1, select bank1
  3183  0A53  1303               	bcf	status, 6	;RP1=0, select bank1
  3184  0A54  00B7               	movwf	(_ICurVal+3)^080h
  3185  0A55  1283               	bcf	status, 5	;RP0=0, select bank0
  3186  0A56  1303               	bcf	status, 6	;RP1=0, select bank0
  3187  0A57  0834               	movf	(StoreCurVal@val+2),w
  3188  0A58  1683               	bsf	status, 5	;RP0=1, select bank1
  3189  0A59  1303               	bcf	status, 6	;RP1=0, select bank1
  3190  0A5A  00B6               	movwf	(_ICurVal+2)^080h
  3191  0A5B  1283               	bcf	status, 5	;RP0=0, select bank0
  3192  0A5C  1303               	bcf	status, 6	;RP1=0, select bank0
  3193  0A5D  0833               	movf	(StoreCurVal@val+1),w
  3194  0A5E  1683               	bsf	status, 5	;RP0=1, select bank1
  3195  0A5F  1303               	bcf	status, 6	;RP1=0, select bank1
  3196  0A60  00B5               	movwf	(_ICurVal+1)^080h
  3197  0A61  1283               	bcf	status, 5	;RP0=0, select bank0
  3198  0A62  1303               	bcf	status, 6	;RP1=0, select bank0
  3199  0A63  0832               	movf	(StoreCurVal@val),w
  3200  0A64  1683               	bsf	status, 5	;RP0=1, select bank1
  3201  0A65  1303               	bcf	status, 6	;RP1=0, select bank1
  3202  0A66  00B4               	movwf	(_ICurVal)^080h
  3203                           
  3204  0A67  2AF4               	goto	l11725
  3205                           	line	189
  3206                           ;Serial.c: 189: case 'D': DCurVal = val; break;
  3207                           	
  3208  0A68                     l1166:	
  3209                           	
  3210  0A68                     l11711:	
  3211  0A68  1283               	bcf	status, 5	;RP0=0, select bank0
  3212  0A69  0835               	movf	(StoreCurVal@val+3),w
  3213  0A6A  1683               	bsf	status, 5	;RP0=1, select bank1
  3214  0A6B  1303               	bcf	status, 6	;RP1=0, select bank1
  3215  0A6C  00B3               	movwf	(_DCurVal+3)^080h
  3216  0A6D  1283               	bcf	status, 5	;RP0=0, select bank0
  3217  0A6E  1303               	bcf	status, 6	;RP1=0, select bank0
  3218  0A6F  0834               	movf	(StoreCurVal@val+2),w
  3219  0A70  1683               	bsf	status, 5	;RP0=1, select bank1
  3220  0A71  1303               	bcf	status, 6	;RP1=0, select bank1
  3221  0A72  00B2               	movwf	(_DCurVal+2)^080h
  3222  0A73  1283               	bcf	status, 5	;RP0=0, select bank0
  3223  0A74  1303               	bcf	status, 6	;RP1=0, select bank0
  3224  0A75  0833               	movf	(StoreCurVal@val+1),w
  3225  0A76  1683               	bsf	status, 5	;RP0=1, select bank1
  3226  0A77  1303               	bcf	status, 6	;RP1=0, select bank1
  3227  0A78  00B1               	movwf	(_DCurVal+1)^080h
  3228  0A79  1283               	bcf	status, 5	;RP0=0, select bank0
  3229  0A7A  1303               	bcf	status, 6	;RP1=0, select bank0
  3230  0A7B  0832               	movf	(StoreCurVal@val),w
  3231  0A7C  1683               	bsf	status, 5	;RP0=1, select bank1
  3232  0A7D  1303               	bcf	status, 6	;RP1=0, select bank1
  3233  0A7E  00B0               	movwf	(_DCurVal)^080h
  3234                           
  3235  0A7F  2AF4               	goto	l11725
  3236                           	line	190
  3237                           ;Serial.c: 190: case 'B': BCurVal = val; break;
  3238                           	
  3239  0A80                     l1167:	
  3240                           	
  3241  0A80                     l11713:	
  3242  0A80  1283               	bcf	status, 5	;RP0=0, select bank0
  3243  0A81  0835               	movf	(StoreCurVal@val+3),w
  3244  0A82  1683               	bsf	status, 5	;RP0=1, select bank1
  3245  0A83  1303               	bcf	status, 6	;RP1=0, select bank1
  3246  0A84  00A7               	movwf	(_BCurVal+3)^080h
  3247  0A85  1283               	bcf	status, 5	;RP0=0, select bank0
  3248  0A86  1303               	bcf	status, 6	;RP1=0, select bank0
  3249  0A87  0834               	movf	(StoreCurVal@val+2),w
  3250  0A88  1683               	bsf	status, 5	;RP0=1, select bank1
  3251  0A89  1303               	bcf	status, 6	;RP1=0, select bank1
  3252  0A8A  00A6               	movwf	(_BCurVal+2)^080h
  3253  0A8B  1283               	bcf	status, 5	;RP0=0, select bank0
  3254  0A8C  1303               	bcf	status, 6	;RP1=0, select bank0
  3255  0A8D  0833               	movf	(StoreCurVal@val+1),w
  3256  0A8E  1683               	bsf	status, 5	;RP0=1, select bank1
  3257  0A8F  1303               	bcf	status, 6	;RP1=0, select bank1
  3258  0A90  00A5               	movwf	(_BCurVal+1)^080h
  3259  0A91  1283               	bcf	status, 5	;RP0=0, select bank0
  3260  0A92  1303               	bcf	status, 6	;RP1=0, select bank0
  3261  0A93  0832               	movf	(StoreCurVal@val),w
  3262  0A94  1683               	bsf	status, 5	;RP0=1, select bank1
  3263  0A95  1303               	bcf	status, 6	;RP1=0, select bank1
  3264  0A96  00A4               	movwf	(_BCurVal)^080h
  3265                           
  3266  0A97  2AF4               	goto	l11725
  3267                           	line	191
  3268                           ;Serial.c: 191: case 'R': CLKVIZ = val; break;
  3269                           	
  3270  0A98                     l1168:	
  3271                           	
  3272  0A98                     l11715:	
  3273  0A98  1283               	bcf	status, 5	;RP0=0, select bank0
  3274  0A99  0832               	movf	(StoreCurVal@val),w
  3275  0A9A  00B6               	movwf	(??_StoreCurVal+0)+0
  3276  0A9B  0836               	movf	(??_StoreCurVal+0)+0,w
  3277  0A9C  00EB               	movwf	(_CLKVIZ)
  3278  0A9D  2AF4               	goto	l11725
  3279                           	line	192
  3280                           ;Serial.c: 192: case 'Q': break;
  3281                           	
  3282  0A9E                     l1169:	
  3283  0A9E  2AF4               	goto	l11725
  3284                           	line	193
  3285                           ;Serial.c: 193: case 'F': BoardFreq = val; break;
  3286                           	
  3287  0A9F                     l1170:	
  3288                           	
  3289  0A9F                     l11717:	
  3290  0A9F  0835               	movf	(StoreCurVal@val+3),w
  3291  0AA0  1683               	bsf	status, 5	;RP0=1, select bank1
  3292  0AA1  1303               	bcf	status, 6	;RP1=0, select bank1
  3293  0AA2  00AB               	movwf	(_BoardFreq+3)^080h
  3294  0AA3  1283               	bcf	status, 5	;RP0=0, select bank0
  3295  0AA4  1303               	bcf	status, 6	;RP1=0, select bank0
  3296  0AA5  0834               	movf	(StoreCurVal@val+2),w
  3297  0AA6  1683               	bsf	status, 5	;RP0=1, select bank1
  3298  0AA7  1303               	bcf	status, 6	;RP1=0, select bank1
  3299  0AA8  00AA               	movwf	(_BoardFreq+2)^080h
  3300  0AA9  1283               	bcf	status, 5	;RP0=0, select bank0
  3301  0AAA  1303               	bcf	status, 6	;RP1=0, select bank0
  3302  0AAB  0833               	movf	(StoreCurVal@val+1),w
  3303  0AAC  1683               	bsf	status, 5	;RP0=1, select bank1
  3304  0AAD  1303               	bcf	status, 6	;RP1=0, select bank1
  3305  0AAE  00A9               	movwf	(_BoardFreq+1)^080h
  3306  0AAF  1283               	bcf	status, 5	;RP0=0, select bank0
  3307  0AB0  1303               	bcf	status, 6	;RP1=0, select bank0
  3308  0AB1  0832               	movf	(StoreCurVal@val),w
  3309  0AB2  1683               	bsf	status, 5	;RP0=1, select bank1
  3310  0AB3  1303               	bcf	status, 6	;RP1=0, select bank1
  3311  0AB4  00A8               	movwf	(_BoardFreq)^080h
  3312                           
  3313  0AB5  2AF4               	goto	l11725
  3314                           	line	194
  3315                           ;Serial.c: 194: case 'A': ACurVal = val; break;
  3316                           	
  3317  0AB6                     l1171:	
  3318                           	
  3319  0AB6                     l11719:	
  3320  0AB6  1283               	bcf	status, 5	;RP0=0, select bank0
  3321  0AB7  0835               	movf	(StoreCurVal@val+3),w
  3322  0AB8  1683               	bsf	status, 5	;RP0=1, select bank1
  3323  0AB9  1303               	bcf	status, 6	;RP1=0, select bank1
  3324  0ABA  00A3               	movwf	(_ACurVal+3)^080h
  3325  0ABB  1283               	bcf	status, 5	;RP0=0, select bank0
  3326  0ABC  1303               	bcf	status, 6	;RP1=0, select bank0
  3327  0ABD  0834               	movf	(StoreCurVal@val+2),w
  3328  0ABE  1683               	bsf	status, 5	;RP0=1, select bank1
  3329  0ABF  1303               	bcf	status, 6	;RP1=0, select bank1
  3330  0AC0  00A2               	movwf	(_ACurVal+2)^080h
  3331  0AC1  1283               	bcf	status, 5	;RP0=0, select bank0
  3332  0AC2  1303               	bcf	status, 6	;RP1=0, select bank0
  3333  0AC3  0833               	movf	(StoreCurVal@val+1),w
  3334  0AC4  1683               	bsf	status, 5	;RP0=1, select bank1
  3335  0AC5  1303               	bcf	status, 6	;RP1=0, select bank1
  3336  0AC6  00A1               	movwf	(_ACurVal+1)^080h
  3337  0AC7  1283               	bcf	status, 5	;RP0=0, select bank0
  3338  0AC8  1303               	bcf	status, 6	;RP1=0, select bank0
  3339  0AC9  0832               	movf	(StoreCurVal@val),w
  3340  0ACA  1683               	bsf	status, 5	;RP0=1, select bank1
  3341  0ACB  1303               	bcf	status, 6	;RP1=0, select bank1
  3342  0ACC  00A0               	movwf	(_ACurVal)^080h
  3343                           
  3344  0ACD  2AF4               	goto	l11725
  3345                           	line	195
  3346                           	
  3347  0ACE                     l11721:	
  3348                           ;Serial.c: 195: }
  3349  0ACE  2AF4               	goto	l11725
  3350                           	line	181
  3351                           	
  3352  0ACF                     l1159:	
  3353                           	
  3354  0ACF                     l11723:	
  3355  0ACF  1283               	bcf	status, 5	;RP0=0, select bank0
  3356  0AD0  1303               	bcf	status, 6	;RP1=0, select bank0
  3357  0AD1  086C               	movf	(_Command),w
  3358                           	; Switch size 1, requested type "space"
  3359                           ; Number of cases is 11, Range of values is 65 to 90
  3360                           ; switch strategies available:
  3361                           ; Name         Instructions Cycles
  3362                           ; simple_byte           34    18 (average)
  3363                           ; direct_byte           89    11 (fixed)
  3364                           ; jumptable            263     9 (fixed)
  3365                           ;	Chosen strategy is simple_byte
  3366                           
  3367                           	opt asmopt_off
  3368  0AD2  3A41               	xorlw	65^0	; case 65
  3369  0AD3  1903               	skipnz
  3370  0AD4  2AB6               	goto	l11719
  3371  0AD5  3A03               	xorlw	66^65	; case 66
  3372  0AD6  1903               	skipnz
  3373  0AD7  2A80               	goto	l11713
  3374  0AD8  3A06               	xorlw	68^66	; case 68
  3375  0AD9  1903               	skipnz
  3376  0ADA  2A68               	goto	l11711
  3377  0ADB  3A02               	xorlw	70^68	; case 70
  3378  0ADC  1903               	skipnz
  3379  0ADD  2A9F               	goto	l11717
  3380  0ADE  3A0F               	xorlw	73^70	; case 73
  3381  0ADF  1903               	skipnz
  3382  0AE0  2A50               	goto	l11709
  3383  0AE1  3A19               	xorlw	80^73	; case 80
  3384  0AE2  1903               	skipnz
  3385  0AE3  2A38               	goto	l11707
  3386  0AE4  3A01               	xorlw	81^80	; case 81
  3387  0AE5  1903               	skipnz
  3388  0AE6  2AF4               	goto	l11725
  3389  0AE7  3A03               	xorlw	82^81	; case 82
  3390  0AE8  1903               	skipnz
  3391  0AE9  2A98               	goto	l11715
  3392  0AEA  3A01               	xorlw	83^82	; case 83
  3393  0AEB  1903               	skipnz
  3394  0AEC  2A08               	goto	l11703
  3395  0AED  3A07               	xorlw	84^83	; case 84
  3396  0AEE  1903               	skipnz
  3397  0AEF  2A20               	goto	l11705
  3398  0AF0  3A0E               	xorlw	90^84	; case 90
  3399  0AF1  1903               	skipnz
  3400  0AF2  29EF               	goto	l11701
  3401  0AF3  2AF4               	goto	l11725
  3402                           	opt asmopt_on
  3403                           
  3404                           	line	195
  3405                           	
  3406  0AF4                     l1161:	
  3407                           	line	196
  3408                           	
  3409  0AF4                     l11725:	
  3410                           ;Serial.c: 196: Writeeeprom();
  3411  0AF4  120A  118A  2319   	fcall	_Writeeeprom
              120A  158A         
  3412                           	line	197
  3413                           	
  3414  0AF9                     l1172:	
  3415  0AF9  0008               	return
  3416                           	opt stack 0
  3417                           GLOBAL	__end_of_StoreCurVal
  3418  0AFA                     	__end_of_StoreCurVal:
  3419 ;; =============== function _StoreCurVal ends ============
  3420                           
  3421                           	signat	_StoreCurVal,4216
  3422                           	global	_DispallCur
  3423                           psect	text1149,local,class=CODE,delta=2
  3424                           global __ptext1149
  3425  04D8                     __ptext1149:
  3426                           
  3427 ;; *************** function _DispallCur *****************
  3428 ;; Defined at:
  3429 ;;		line 99 in file "Serial.c"
  3430 ;; Parameters:    Size  Location     Type
  3431 ;;		None
  3432 ;; Auto vars:     Size  Location     Type
  3433 ;;		None
  3434 ;; Return value:  Size  Location     Type
  3435 ;;		None               void
  3436 ;; Registers used:
  3437 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3438 ;; Tracked objects:
  3439 ;;		On entry : 0/0
  3440 ;;		On exit  : 0/0
  3441 ;;		Unchanged: 0/0
  3442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3443 ;;      Params:         0       0       0       0       0
  3444 ;;      Locals:         0       0       0       0       0
  3445 ;;      Temps:          0       4       0       0       0
  3446 ;;      Totals:         0       4       0       0       0
  3447 ;;Total ram usage:        4 bytes
  3448 ;; Hardware stack levels used:    1
  3449 ;; Hardware stack levels required when called:    5
  3450 ;; This function calls:
  3451 ;;		_Readeeprom
  3452 ;;		_USARTWriteChar
  3453 ;;		_USARTWriteInt
  3454 ;;		_USARTWriteString
  3455 ;; This function is called by:
  3456 ;;		_getData
  3457 ;; This function uses a non-reentrant model
  3458 ;;
  3459                           psect	text1149
  3460                           	file	"Serial.c"
  3461                           	line	99
  3462                           	global	__size_of_DispallCur
  3463  0197                     	__size_of_DispallCur	equ	__end_of_DispallCur-_DispallCur
  3464                           	
  3465  04D8                     _DispallCur:	
  3466                           	opt	stack 1
  3467                           ; Regs used in _DispallCur: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3468                           	line	100
  3469                           	
  3470  04D8                     l11649:	
  3471                           ;Serial.c: 100: Readeeprom();
  3472  04D8  120A  118A  266F   	fcall	_Readeeprom
              120A  118A         
  3473                           	line	102
  3474                           ;Serial.c: 102: USARTWriteChar('Z'); USARTWriteInt(ZCurVal);
  3475  04DD  305A               	movlw	(05Ah)
  3476  04DE  160A  118A  2000   	fcall	_USARTWriteChar
              120A  118A         
  3477                           	
  3478  04E3                     l11651:	
  3479  04E3  1683               	bsf	status, 5	;RP0=1, select bank1
  3480  04E4  1303               	bcf	status, 6	;RP1=0, select bank1
  3481  04E5  084B               	movf	(_ZCurVal+3)^080h,w
  3482  04E6  1283               	bcf	status, 5	;RP0=0, select bank0
  3483  04E7  1303               	bcf	status, 6	;RP1=0, select bank0
  3484  04E8  00B2               	movwf	(?_USARTWriteInt+3)
  3485  04E9  1683               	bsf	status, 5	;RP0=1, select bank1
  3486  04EA  1303               	bcf	status, 6	;RP1=0, select bank1
  3487  04EB  084A               	movf	(_ZCurVal+2)^080h,w
  3488  04EC  1283               	bcf	status, 5	;RP0=0, select bank0
  3489  04ED  1303               	bcf	status, 6	;RP1=0, select bank0
  3490  04EE  00B1               	movwf	(?_USARTWriteInt+2)
  3491  04EF  1683               	bsf	status, 5	;RP0=1, select bank1
  3492  04F0  1303               	bcf	status, 6	;RP1=0, select bank1
  3493  04F1  0849               	movf	(_ZCurVal+1)^080h,w
  3494  04F2  1283               	bcf	status, 5	;RP0=0, select bank0
  3495  04F3  1303               	bcf	status, 6	;RP1=0, select bank0
  3496  04F4  00B0               	movwf	(?_USARTWriteInt+1)
  3497  04F5  1683               	bsf	status, 5	;RP0=1, select bank1
  3498  04F6  1303               	bcf	status, 6	;RP1=0, select bank1
  3499  04F7  0848               	movf	(_ZCurVal)^080h,w
  3500  04F8  1283               	bcf	status, 5	;RP0=0, select bank0
  3501  04F9  1303               	bcf	status, 6	;RP1=0, select bank0
  3502  04FA  00AF               	movwf	(?_USARTWriteInt)
  3503                           
  3504  04FB  160A  118A  247D   	fcall	_USARTWriteInt
              120A  118A         
  3505                           	line	104
  3506                           	
  3507  0500                     l11653:	
  3508                           ;Serial.c: 104: USARTWriteString(strnw);
  3509  0500  3002               	movlw	((_strnw-__stringbase))&0ffh
  3510  0501  160A  158A  2390   	fcall	_USARTWriteString
              120A  118A         
  3511                           	line	105
  3512                           	
  3513  0506                     l11655:	
  3514                           ;Serial.c: 105: USARTWriteChar('S'); USARTWriteInt(SCurVal);
  3515  0506  3053               	movlw	(053h)
  3516  0507  160A  118A  2000   	fcall	_USARTWriteChar
              120A  118A         
  3517                           	
  3518  050C                     l11657:	
  3519  050C  1683               	bsf	status, 5	;RP0=1, select bank1
  3520  050D  1303               	bcf	status, 6	;RP1=0, select bank1
  3521  050E  0843               	movf	(_SCurVal+3)^080h,w
  3522  050F  1283               	bcf	status, 5	;RP0=0, select bank0
  3523  0510  1303               	bcf	status, 6	;RP1=0, select bank0
  3524  0511  00B2               	movwf	(?_USARTWriteInt+3)
  3525  0512  1683               	bsf	status, 5	;RP0=1, select bank1
  3526  0513  1303               	bcf	status, 6	;RP1=0, select bank1
  3527  0514  0842               	movf	(_SCurVal+2)^080h,w
  3528  0515  1283               	bcf	status, 5	;RP0=0, select bank0
  3529  0516  1303               	bcf	status, 6	;RP1=0, select bank0
  3530  0517  00B1               	movwf	(?_USARTWriteInt+2)
  3531  0518  1683               	bsf	status, 5	;RP0=1, select bank1
  3532  0519  1303               	bcf	status, 6	;RP1=0, select bank1
  3533  051A  0841               	movf	(_SCurVal+1)^080h,w
  3534  051B  1283               	bcf	status, 5	;RP0=0, select bank0
  3535  051C  1303               	bcf	status, 6	;RP1=0, select bank0
  3536  051D  00B0               	movwf	(?_USARTWriteInt+1)
  3537  051E  1683               	bsf	status, 5	;RP0=1, select bank1
  3538  051F  1303               	bcf	status, 6	;RP1=0, select bank1
  3539  0520  0840               	movf	(_SCurVal)^080h,w
  3540  0521  1283               	bcf	status, 5	;RP0=0, select bank0
  3541  0522  1303               	bcf	status, 6	;RP1=0, select bank0
  3542  0523  00AF               	movwf	(?_USARTWriteInt)
  3543                           
  3544  0524  160A  118A  247D   	fcall	_USARTWriteInt
              120A  118A         
  3545                           	line	107
  3546                           ;Serial.c: 107: USARTWriteString(strnw);
  3547  0529  3002               	movlw	((_strnw-__stringbase))&0ffh
  3548  052A  160A  158A  2390   	fcall	_USARTWriteString
              120A  118A         
  3549                           	line	108
  3550                           	
  3551  052F                     l11659:	
  3552                           ;Serial.c: 108: USARTWriteChar('T'); USARTWriteInt(NoTeeth);
  3553  052F  3054               	movlw	(054h)
  3554  0530  160A  118A  2000   	fcall	_USARTWriteChar
              120A  118A         
  3555                           	
  3556  0535                     l11661:	
  3557  0535  1683               	bsf	status, 5	;RP0=1, select bank1
  3558  0536  1303               	bcf	status, 6	;RP1=0, select bank1
  3559  0537  083B               	movf	(_NoTeeth+3)^080h,w
  3560  0538  1283               	bcf	status, 5	;RP0=0, select bank0
  3561  0539  1303               	bcf	status, 6	;RP1=0, select bank0
  3562  053A  00B2               	movwf	(?_USARTWriteInt+3)
  3563  053B  1683               	bsf	status, 5	;RP0=1, select bank1
  3564  053C  1303               	bcf	status, 6	;RP1=0, select bank1
  3565  053D  083A               	movf	(_NoTeeth+2)^080h,w
  3566  053E  1283               	bcf	status, 5	;RP0=0, select bank0
  3567  053F  1303               	bcf	status, 6	;RP1=0, select bank0
  3568  0540  00B1               	movwf	(?_USARTWriteInt+2)
  3569  0541  1683               	bsf	status, 5	;RP0=1, select bank1
  3570  0542  1303               	bcf	status, 6	;RP1=0, select bank1
  3571  0543  0839               	movf	(_NoTeeth+1)^080h,w
  3572  0544  1283               	bcf	status, 5	;RP0=0, select bank0
  3573  0545  1303               	bcf	status, 6	;RP1=0, select bank0
  3574  0546  00B0               	movwf	(?_USARTWriteInt+1)
  3575  0547  1683               	bsf	status, 5	;RP0=1, select bank1
  3576  0548  1303               	bcf	status, 6	;RP1=0, select bank1
  3577  0549  0838               	movf	(_NoTeeth)^080h,w
  3578  054A  1283               	bcf	status, 5	;RP0=0, select bank0
  3579  054B  1303               	bcf	status, 6	;RP1=0, select bank0
  3580  054C  00AF               	movwf	(?_USARTWriteInt)
  3581                           
  3582  054D  160A  118A  247D   	fcall	_USARTWriteInt
              120A  118A         
  3583                           	line	110
  3584                           	
  3585  0552                     l11663:	
  3586                           ;Serial.c: 110: USARTWriteString(strnw);
  3587  0552  3002               	movlw	((_strnw-__stringbase))&0ffh
  3588  0553  160A  158A  2390   	fcall	_USARTWriteString
              120A  118A         
  3589                           	line	114
  3590                           	
  3591  0558                     l11665:	
  3592                           ;Serial.c: 114: USARTWriteChar('P'); USARTWriteInt(PCurVal);
  3593  0558  3050               	movlw	(050h)
  3594  0559  160A  118A  2000   	fcall	_USARTWriteChar
              120A  118A         
  3595  055E  1683               	bsf	status, 5	;RP0=1, select bank1
  3596  055F  1303               	bcf	status, 6	;RP1=0, select bank1
  3597  0560  083F               	movf	(_PCurVal+3)^080h,w
  3598  0561  1283               	bcf	status, 5	;RP0=0, select bank0
  3599  0562  1303               	bcf	status, 6	;RP1=0, select bank0
  3600  0563  00B2               	movwf	(?_USARTWriteInt+3)
  3601  0564  1683               	bsf	status, 5	;RP0=1, select bank1
  3602  0565  1303               	bcf	status, 6	;RP1=0, select bank1
  3603  0566  083E               	movf	(_PCurVal+2)^080h,w
  3604  0567  1283               	bcf	status, 5	;RP0=0, select bank0
  3605  0568  1303               	bcf	status, 6	;RP1=0, select bank0
  3606  0569  00B1               	movwf	(?_USARTWriteInt+2)
  3607  056A  1683               	bsf	status, 5	;RP0=1, select bank1
  3608  056B  1303               	bcf	status, 6	;RP1=0, select bank1
  3609  056C  083D               	movf	(_PCurVal+1)^080h,w
  3610  056D  1283               	bcf	status, 5	;RP0=0, select bank0
  3611  056E  1303               	bcf	status, 6	;RP1=0, select bank0
  3612  056F  00B0               	movwf	(?_USARTWriteInt+1)
  3613  0570  1683               	bsf	status, 5	;RP0=1, select bank1
  3614  0571  1303               	bcf	status, 6	;RP1=0, select bank1
  3615  0572  083C               	movf	(_PCurVal)^080h,w
  3616  0573  1283               	bcf	status, 5	;RP0=0, select bank0
  3617  0574  1303               	bcf	status, 6	;RP1=0, select bank0
  3618  0575  00AF               	movwf	(?_USARTWriteInt)
  3619                           
  3620  0576  160A  118A  247D   	fcall	_USARTWriteInt
              120A  118A         
  3621                           	line	116
  3622                           	
  3623  057B                     l11667:	
  3624                           ;Serial.c: 116: USARTWriteString(strnw);
  3625  057B  3002               	movlw	((_strnw-__stringbase))&0ffh
  3626  057C  160A  158A  2390   	fcall	_USARTWriteString
              120A  118A         
  3627                           	line	117
  3628                           	
  3629  0581                     l11669:	
  3630                           ;Serial.c: 117: USARTWriteChar('I'); USARTWriteInt(ICurVal);
  3631  0581  3049               	movlw	(049h)
  3632  0582  160A  118A  2000   	fcall	_USARTWriteChar
              120A  118A         
  3633                           	
  3634  0587                     l11671:	
  3635  0587  1683               	bsf	status, 5	;RP0=1, select bank1
  3636  0588  1303               	bcf	status, 6	;RP1=0, select bank1
  3637  0589  0837               	movf	(_ICurVal+3)^080h,w
  3638  058A  1283               	bcf	status, 5	;RP0=0, select bank0
  3639  058B  1303               	bcf	status, 6	;RP1=0, select bank0
  3640  058C  00B2               	movwf	(?_USARTWriteInt+3)
  3641  058D  1683               	bsf	status, 5	;RP0=1, select bank1
  3642  058E  1303               	bcf	status, 6	;RP1=0, select bank1
  3643  058F  0836               	movf	(_ICurVal+2)^080h,w
  3644  0590  1283               	bcf	status, 5	;RP0=0, select bank0
  3645  0591  1303               	bcf	status, 6	;RP1=0, select bank0
  3646  0592  00B1               	movwf	(?_USARTWriteInt+2)
  3647  0593  1683               	bsf	status, 5	;RP0=1, select bank1
  3648  0594  1303               	bcf	status, 6	;RP1=0, select bank1
  3649  0595  0835               	movf	(_ICurVal+1)^080h,w
  3650  0596  1283               	bcf	status, 5	;RP0=0, select bank0
  3651  0597  1303               	bcf	status, 6	;RP1=0, select bank0
  3652  0598  00B0               	movwf	(?_USARTWriteInt+1)
  3653  0599  1683               	bsf	status, 5	;RP0=1, select bank1
  3654  059A  1303               	bcf	status, 6	;RP1=0, select bank1
  3655  059B  0834               	movf	(_ICurVal)^080h,w
  3656  059C  1283               	bcf	status, 5	;RP0=0, select bank0
  3657  059D  1303               	bcf	status, 6	;RP1=0, select bank0
  3658  059E  00AF               	movwf	(?_USARTWriteInt)
  3659                           
  3660  059F  160A  118A  247D   	fcall	_USARTWriteInt
              120A  118A         
  3661                           	line	119
  3662                           	
  3663  05A4                     l11673:	
  3664                           ;Serial.c: 119: USARTWriteString(strnw);
  3665  05A4  3002               	movlw	((_strnw-__stringbase))&0ffh
  3666  05A5  160A  158A  2390   	fcall	_USARTWriteString
              120A  118A         
  3667                           	line	120
  3668                           ;Serial.c: 120: USARTWriteChar('D'); USARTWriteInt(DCurVal);
  3669  05AA  3044               	movlw	(044h)
  3670  05AB  160A  118A  2000   	fcall	_USARTWriteChar
              120A  118A         
  3671                           	
  3672  05B0                     l11675:	
  3673  05B0  1683               	bsf	status, 5	;RP0=1, select bank1
  3674  05B1  1303               	bcf	status, 6	;RP1=0, select bank1
  3675  05B2  0833               	movf	(_DCurVal+3)^080h,w
  3676  05B3  1283               	bcf	status, 5	;RP0=0, select bank0
  3677  05B4  1303               	bcf	status, 6	;RP1=0, select bank0
  3678  05B5  00B2               	movwf	(?_USARTWriteInt+3)
  3679  05B6  1683               	bsf	status, 5	;RP0=1, select bank1
  3680  05B7  1303               	bcf	status, 6	;RP1=0, select bank1
  3681  05B8  0832               	movf	(_DCurVal+2)^080h,w
  3682  05B9  1283               	bcf	status, 5	;RP0=0, select bank0
  3683  05BA  1303               	bcf	status, 6	;RP1=0, select bank0
  3684  05BB  00B1               	movwf	(?_USARTWriteInt+2)
  3685  05BC  1683               	bsf	status, 5	;RP0=1, select bank1
  3686  05BD  1303               	bcf	status, 6	;RP1=0, select bank1
  3687  05BE  0831               	movf	(_DCurVal+1)^080h,w
  3688  05BF  1283               	bcf	status, 5	;RP0=0, select bank0
  3689  05C0  1303               	bcf	status, 6	;RP1=0, select bank0
  3690  05C1  00B0               	movwf	(?_USARTWriteInt+1)
  3691  05C2  1683               	bsf	status, 5	;RP0=1, select bank1
  3692  05C3  1303               	bcf	status, 6	;RP1=0, select bank1
  3693  05C4  0830               	movf	(_DCurVal)^080h,w
  3694  05C5  1283               	bcf	status, 5	;RP0=0, select bank0
  3695  05C6  1303               	bcf	status, 6	;RP1=0, select bank0
  3696  05C7  00AF               	movwf	(?_USARTWriteInt)
  3697                           
  3698  05C8  160A  118A  247D   	fcall	_USARTWriteInt
              120A  118A         
  3699                           	line	122
  3700                           	
  3701  05CD                     l11677:	
  3702                           ;Serial.c: 122: USARTWriteString(strnw);
  3703  05CD  3002               	movlw	((_strnw-__stringbase))&0ffh
  3704  05CE  160A  158A  2390   	fcall	_USARTWriteString
              120A  118A         
  3705                           	line	123
  3706                           	
  3707  05D3                     l11679:	
  3708                           ;Serial.c: 123: USARTWriteChar('R'); USARTWriteInt(CLKVIZ);
  3709  05D3  3052               	movlw	(052h)
  3710  05D4  160A  118A  2000   	fcall	_USARTWriteChar
              120A  118A         
  3711                           	
  3712  05D9                     l11681:	
  3713  05D9  1283               	bcf	status, 5	;RP0=0, select bank0
  3714  05DA  1303               	bcf	status, 6	;RP1=0, select bank0
  3715  05DB  086B               	movf	(_CLKVIZ),w
  3716  05DC  00C1               	movwf	(??_DispallCur+0)+0
  3717  05DD  01C2               	clrf	((??_DispallCur+0)+0+1)
  3718  05DE  01C3               	clrf	((??_DispallCur+0)+0+2)
  3719  05DF  01C4               	clrf	((??_DispallCur+0)+0+3)
  3720  05E0  0844               	movf	3+(??_DispallCur+0)+0,w
  3721  05E1  00B2               	movwf	(?_USARTWriteInt+3)
  3722  05E2  0843               	movf	2+(??_DispallCur+0)+0,w
  3723  05E3  00B1               	movwf	(?_USARTWriteInt+2)
  3724  05E4  0842               	movf	1+(??_DispallCur+0)+0,w
  3725  05E5  00B0               	movwf	(?_USARTWriteInt+1)
  3726  05E6  0841               	movf	0+(??_DispallCur+0)+0,w
  3727  05E7  00AF               	movwf	(?_USARTWriteInt)
  3728                           
  3729  05E8  160A  118A  247D   	fcall	_USARTWriteInt
              120A  118A         
  3730                           	line	125
  3731                           ;Serial.c: 125: USARTWriteString(strnw);
  3732  05ED  3002               	movlw	((_strnw-__stringbase))&0ffh
  3733  05EE  160A  158A  2390   	fcall	_USARTWriteString
              120A  118A         
  3734                           	line	126
  3735                           	
  3736  05F3                     l11683:	
  3737                           ;Serial.c: 126: USARTWriteChar('B'); USARTWriteInt(BCurVal);
  3738  05F3  3042               	movlw	(042h)
  3739  05F4  160A  118A  2000   	fcall	_USARTWriteChar
              120A  118A         
  3740                           	
  3741  05F9                     l11685:	
  3742  05F9  1683               	bsf	status, 5	;RP0=1, select bank1
  3743  05FA  1303               	bcf	status, 6	;RP1=0, select bank1
  3744  05FB  0827               	movf	(_BCurVal+3)^080h,w
  3745  05FC  1283               	bcf	status, 5	;RP0=0, select bank0
  3746  05FD  1303               	bcf	status, 6	;RP1=0, select bank0
  3747  05FE  00B2               	movwf	(?_USARTWriteInt+3)
  3748  05FF  1683               	bsf	status, 5	;RP0=1, select bank1
  3749  0600  1303               	bcf	status, 6	;RP1=0, select bank1
  3750  0601  0826               	movf	(_BCurVal+2)^080h,w
  3751  0602  1283               	bcf	status, 5	;RP0=0, select bank0
  3752  0603  1303               	bcf	status, 6	;RP1=0, select bank0
  3753  0604  00B1               	movwf	(?_USARTWriteInt+2)
  3754  0605  1683               	bsf	status, 5	;RP0=1, select bank1
  3755  0606  1303               	bcf	status, 6	;RP1=0, select bank1
  3756  0607  0825               	movf	(_BCurVal+1)^080h,w
  3757  0608  1283               	bcf	status, 5	;RP0=0, select bank0
  3758  0609  1303               	bcf	status, 6	;RP1=0, select bank0
  3759  060A  00B0               	movwf	(?_USARTWriteInt+1)
  3760  060B  1683               	bsf	status, 5	;RP0=1, select bank1
  3761  060C  1303               	bcf	status, 6	;RP1=0, select bank1
  3762  060D  0824               	movf	(_BCurVal)^080h,w
  3763  060E  1283               	bcf	status, 5	;RP0=0, select bank0
  3764  060F  1303               	bcf	status, 6	;RP1=0, select bank0
  3765  0610  00AF               	movwf	(?_USARTWriteInt)
  3766                           
  3767  0611  160A  118A  247D   	fcall	_USARTWriteInt
              120A  118A         
  3768                           	line	128
  3769                           	
  3770  0616                     l11687:	
  3771                           ;Serial.c: 128: USARTWriteString(strnw);
  3772  0616  3002               	movlw	((_strnw-__stringbase))&0ffh
  3773  0617  160A  158A  2390   	fcall	_USARTWriteString
              120A  118A         
  3774                           	line	129
  3775                           	
  3776  061C                     l11689:	
  3777                           ;Serial.c: 129: USARTWriteChar('F'); USARTWriteInt(BoardFreq);
  3778  061C  3046               	movlw	(046h)
  3779  061D  160A  118A  2000   	fcall	_USARTWriteChar
              120A  118A         
  3780  0622  1683               	bsf	status, 5	;RP0=1, select bank1
  3781  0623  1303               	bcf	status, 6	;RP1=0, select bank1
  3782  0624  082B               	movf	(_BoardFreq+3)^080h,w
  3783  0625  1283               	bcf	status, 5	;RP0=0, select bank0
  3784  0626  1303               	bcf	status, 6	;RP1=0, select bank0
  3785  0627  00B2               	movwf	(?_USARTWriteInt+3)
  3786  0628  1683               	bsf	status, 5	;RP0=1, select bank1
  3787  0629  1303               	bcf	status, 6	;RP1=0, select bank1
  3788  062A  082A               	movf	(_BoardFreq+2)^080h,w
  3789  062B  1283               	bcf	status, 5	;RP0=0, select bank0
  3790  062C  1303               	bcf	status, 6	;RP1=0, select bank0
  3791  062D  00B1               	movwf	(?_USARTWriteInt+2)
  3792  062E  1683               	bsf	status, 5	;RP0=1, select bank1
  3793  062F  1303               	bcf	status, 6	;RP1=0, select bank1
  3794  0630  0829               	movf	(_BoardFreq+1)^080h,w
  3795  0631  1283               	bcf	status, 5	;RP0=0, select bank0
  3796  0632  1303               	bcf	status, 6	;RP1=0, select bank0
  3797  0633  00B0               	movwf	(?_USARTWriteInt+1)
  3798  0634  1683               	bsf	status, 5	;RP0=1, select bank1
  3799  0635  1303               	bcf	status, 6	;RP1=0, select bank1
  3800  0636  0828               	movf	(_BoardFreq)^080h,w
  3801  0637  1283               	bcf	status, 5	;RP0=0, select bank0
  3802  0638  1303               	bcf	status, 6	;RP1=0, select bank0
  3803  0639  00AF               	movwf	(?_USARTWriteInt)
  3804                           
  3805  063A  160A  118A  247D   	fcall	_USARTWriteInt
              120A  118A         
  3806                           	line	130
  3807                           	
  3808  063F                     l11691:	
  3809                           ;Serial.c: 130: USARTWriteString(strnw);
  3810  063F  3002               	movlw	((_strnw-__stringbase))&0ffh
  3811  0640  160A  158A  2390   	fcall	_USARTWriteString
              120A  118A         
  3812                           	line	131
  3813                           	
  3814  0645                     l11693:	
  3815                           ;Serial.c: 131: USARTWriteChar('A'); USARTWriteInt(ACurVal);
  3816  0645  3041               	movlw	(041h)
  3817  0646  160A  118A  2000   	fcall	_USARTWriteChar
              120A  118A         
  3818                           	
  3819  064B                     l11695:	
  3820  064B  1683               	bsf	status, 5	;RP0=1, select bank1
  3821  064C  1303               	bcf	status, 6	;RP1=0, select bank1
  3822  064D  0823               	movf	(_ACurVal+3)^080h,w
  3823  064E  1283               	bcf	status, 5	;RP0=0, select bank0
  3824  064F  1303               	bcf	status, 6	;RP1=0, select bank0
  3825  0650  00B2               	movwf	(?_USARTWriteInt+3)
  3826  0651  1683               	bsf	status, 5	;RP0=1, select bank1
  3827  0652  1303               	bcf	status, 6	;RP1=0, select bank1
  3828  0653  0822               	movf	(_ACurVal+2)^080h,w
  3829  0654  1283               	bcf	status, 5	;RP0=0, select bank0
  3830  0655  1303               	bcf	status, 6	;RP1=0, select bank0
  3831  0656  00B1               	movwf	(?_USARTWriteInt+2)
  3832  0657  1683               	bsf	status, 5	;RP0=1, select bank1
  3833  0658  1303               	bcf	status, 6	;RP1=0, select bank1
  3834  0659  0821               	movf	(_ACurVal+1)^080h,w
  3835  065A  1283               	bcf	status, 5	;RP0=0, select bank0
  3836  065B  1303               	bcf	status, 6	;RP1=0, select bank0
  3837  065C  00B0               	movwf	(?_USARTWriteInt+1)
  3838  065D  1683               	bsf	status, 5	;RP0=1, select bank1
  3839  065E  1303               	bcf	status, 6	;RP1=0, select bank1
  3840  065F  0820               	movf	(_ACurVal)^080h,w
  3841  0660  1283               	bcf	status, 5	;RP0=0, select bank0
  3842  0661  1303               	bcf	status, 6	;RP1=0, select bank0
  3843  0662  00AF               	movwf	(?_USARTWriteInt)
  3844                           
  3845  0663  160A  118A  247D   	fcall	_USARTWriteInt
              120A  118A         
  3846                           	line	133
  3847                           	
  3848  0668                     l11697:	
  3849                           ;Serial.c: 133: USARTWriteString(strnw);
  3850  0668  3002               	movlw	((_strnw-__stringbase))&0ffh
  3851  0669  160A  158A  2390   	fcall	_USARTWriteString
              120A  118A         
  3852                           	line	135
  3853                           	
  3854  066E                     l1124:	
  3855  066E  0008               	return
  3856                           	opt stack 0
  3857                           GLOBAL	__end_of_DispallCur
  3858  066F                     	__end_of_DispallCur:
  3859 ;; =============== function _DispallCur ends ============
  3860                           
  3861                           	signat	_DispallCur,88
  3862                           	global	_Calc_PID_op
  3863                           psect	text1150,local,class=CODE,delta=2
  3864                           global __ptext1150
  3865  0015                     __ptext1150:
  3866                           
  3867 ;; *************** function _Calc_PID_op *****************
  3868 ;; Defined at:
  3869 ;;		line 74 in file "PIDp.c"
  3870 ;; Parameters:    Size  Location     Type
  3871 ;;		None
  3872 ;; Auto vars:     Size  Location     Type
  3873 ;;  diff            3   59[BANK0 ] float 
  3874 ;;  NoStepOut       2   57[BANK0 ] int 
  3875 ;;  angle           2   55[BANK0 ] int 
  3876 ;; Return value:  Size  Location     Type
  3877 ;;                  1    wreg      unsigned char 
  3878 ;; Registers used:
  3879 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3880 ;; Tracked objects:
  3881 ;;		On entry : 0/0
  3882 ;;		On exit  : 0/0
  3883 ;;		Unchanged: 0/0
  3884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3885 ;;      Params:         0       0       0       0       0
  3886 ;;      Locals:         0      10       0       0       0
  3887 ;;      Temps:          0       1       0       0       0
  3888 ;;      Totals:         0      11       0       0       0
  3889 ;;Total ram usage:       11 bytes
  3890 ;; Hardware stack levels used:    1
  3891 ;; Hardware stack levels required when called:    4
  3892 ;; This function calls:
  3893 ;;		___ftmul
  3894 ;;		___ftadd
  3895 ;;		___ftge
  3896 ;;		___ftneg
  3897 ;;		___fttol
  3898 ;;		___ftdiv
  3899 ;;		_USARTWriteChar
  3900 ;;		_USARTWriteInt
  3901 ;;		_USARTWriteString
  3902 ;;		_Make_Table
  3903 ;; This function is called by:
  3904 ;;		_main
  3905 ;; This function uses a non-reentrant model
  3906 ;;
  3907                           psect	text1150
  3908                           	file	"PIDp.c"
  3909                           	line	74
  3910                           	global	__size_of_Calc_PID_op
  3911  0304                     	__size_of_Calc_PID_op	equ	__end_of_Calc_PID_op-_Calc_PID_op
  3912                           	
  3913  0015                     _Calc_PID_op:	
  3914                           	opt	stack 3
  3915                           ; Regs used in _Calc_PID_op: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3916                           	line	88
  3917                           	
  3918  0015                     l11601:	
  3919                           ;PIDp.c: 75: signed int NoStepOut,angle;
  3920                           ;PIDp.c: 83: float diff;
  3921                           ;PIDp.c: 88: if( Rpm > 100 )
  3922  0015  3000               	movlw	0
  3923  0016  1283               	bcf	status, 5	;RP0=0, select bank0
  3924  0017  1303               	bcf	status, 6	;RP1=0, select bank0
  3925  0018  0264               	subwf	(_Rpm+3),w
  3926  0019  1D03               	skipz
  3927  001A  2825               	goto	u4675
  3928  001B  3000               	movlw	0
  3929  001C  0263               	subwf	(_Rpm+2),w
  3930  001D  1D03               	skipz
  3931  001E  2825               	goto	u4675
  3932  001F  3000               	movlw	0
  3933  0020  0262               	subwf	(_Rpm+1),w
  3934  0021  1D03               	skipz
  3935  0022  2825               	goto	u4675
  3936  0023  3065               	movlw	065h
  3937  0024  0261               	subwf	(_Rpm),w
  3938  0025                     u4675:
  3939  0025  1C03               	skipc
  3940  0026  2828               	goto	u4671
  3941  0027  2829               	goto	u4670
  3942  0028                     u4671:
  3943  0028  28DD               	goto	l11605
  3944  0029                     u4670:
  3945                           	line	89
  3946                           	
  3947  0029                     l11603:	
  3948                           ;PIDp.c: 89: diff = ( k1 * e0 ) + ( k2 * e1 ) + ( k3 *e2 ) ;
  3949  0029  1683               	bsf	status, 5	;RP0=1, select bank1
  3950  002A  1303               	bcf	status, 6	;RP1=0, select bank1
  3951  002B  0852               	movf	(_e1)^080h,w
  3952  002C  1283               	bcf	status, 5	;RP0=0, select bank0
  3953  002D  1303               	bcf	status, 6	;RP1=0, select bank0
  3954  002E  00AB               	movwf	(?___ftmul)
  3955  002F  1683               	bsf	status, 5	;RP0=1, select bank1
  3956  0030  1303               	bcf	status, 6	;RP1=0, select bank1
  3957  0031  0853               	movf	(_e1+1)^080h,w
  3958  0032  1283               	bcf	status, 5	;RP0=0, select bank0
  3959  0033  1303               	bcf	status, 6	;RP1=0, select bank0
  3960  0034  00AC               	movwf	(?___ftmul+1)
  3961  0035  1683               	bsf	status, 5	;RP0=1, select bank1
  3962  0036  1303               	bcf	status, 6	;RP1=0, select bank1
  3963  0037  0854               	movf	(_e1+2)^080h,w
  3964  0038  1283               	bcf	status, 5	;RP0=0, select bank0
  3965  0039  1303               	bcf	status, 6	;RP1=0, select bank0
  3966  003A  00AD               	movwf	(?___ftmul+2)
  3967  003B  1683               	bsf	status, 5	;RP0=1, select bank3
  3968  003C  1703               	bsf	status, 6	;RP1=1, select bank3
  3969  003D  0835               	movf	(_k2)^0180h,w
  3970  003E  1283               	bcf	status, 5	;RP0=0, select bank0
  3971  003F  1303               	bcf	status, 6	;RP1=0, select bank0
  3972  0040  00AE               	movwf	0+(?___ftmul)+03h
  3973  0041  1683               	bsf	status, 5	;RP0=1, select bank3
  3974  0042  1703               	bsf	status, 6	;RP1=1, select bank3
  3975  0043  0836               	movf	(_k2+1)^0180h,w
  3976  0044  1283               	bcf	status, 5	;RP0=0, select bank0
  3977  0045  1303               	bcf	status, 6	;RP1=0, select bank0
  3978  0046  00AF               	movwf	1+(?___ftmul)+03h
  3979  0047  1683               	bsf	status, 5	;RP0=1, select bank3
  3980  0048  1703               	bsf	status, 6	;RP1=1, select bank3
  3981  0049  0837               	movf	(_k2+2)^0180h,w
  3982  004A  1283               	bcf	status, 5	;RP0=0, select bank0
  3983  004B  1303               	bcf	status, 6	;RP1=0, select bank0
  3984  004C  00B0               	movwf	2+(?___ftmul)+03h
  3985  004D  160A  118A  2618   	fcall	___ftmul
              120A  118A         
  3986  0052  1283               	bcf	status, 5	;RP0=0, select bank0
  3987  0053  1303               	bcf	status, 6	;RP1=0, select bank0
  3988  0054  082B               	movf	(0+(?___ftmul)),w
  3989  0055  00C6               	movwf	(?___ftadd)
  3990  0056  082C               	movf	(1+(?___ftmul)),w
  3991  0057  00C7               	movwf	(?___ftadd+1)
  3992  0058  082D               	movf	(2+(?___ftmul)),w
  3993  0059  00C8               	movwf	(?___ftadd+2)
  3994  005A  1683               	bsf	status, 5	;RP0=1, select bank1
  3995  005B  1303               	bcf	status, 6	;RP1=0, select bank1
  3996  005C  084F               	movf	(_e0)^080h,w
  3997  005D  1283               	bcf	status, 5	;RP0=0, select bank0
  3998  005E  1303               	bcf	status, 6	;RP1=0, select bank0
  3999  005F  00AB               	movwf	(?___ftmul)
  4000  0060  1683               	bsf	status, 5	;RP0=1, select bank1
  4001  0061  1303               	bcf	status, 6	;RP1=0, select bank1
  4002  0062  0850               	movf	(_e0+1)^080h,w
  4003  0063  1283               	bcf	status, 5	;RP0=0, select bank0
  4004  0064  1303               	bcf	status, 6	;RP1=0, select bank0
  4005  0065  00AC               	movwf	(?___ftmul+1)
  4006  0066  1683               	bsf	status, 5	;RP0=1, select bank1
  4007  0067  1303               	bcf	status, 6	;RP1=0, select bank1
  4008  0068  0851               	movf	(_e0+2)^080h,w
  4009  0069  1283               	bcf	status, 5	;RP0=0, select bank0
  4010  006A  1303               	bcf	status, 6	;RP1=0, select bank0
  4011  006B  00AD               	movwf	(?___ftmul+2)
  4012  006C  1683               	bsf	status, 5	;RP0=1, select bank3
  4013  006D  1703               	bsf	status, 6	;RP1=1, select bank3
  4014  006E  0832               	movf	(_k1)^0180h,w
  4015  006F  1283               	bcf	status, 5	;RP0=0, select bank0
  4016  0070  1303               	bcf	status, 6	;RP1=0, select bank0
  4017  0071  00AE               	movwf	0+(?___ftmul)+03h
  4018  0072  1683               	bsf	status, 5	;RP0=1, select bank3
  4019  0073  1703               	bsf	status, 6	;RP1=1, select bank3
  4020  0074  0833               	movf	(_k1+1)^0180h,w
  4021  0075  1283               	bcf	status, 5	;RP0=0, select bank0
  4022  0076  1303               	bcf	status, 6	;RP1=0, select bank0
  4023  0077  00AF               	movwf	1+(?___ftmul)+03h
  4024  0078  1683               	bsf	status, 5	;RP0=1, select bank3
  4025  0079  1703               	bsf	status, 6	;RP1=1, select bank3
  4026  007A  0834               	movf	(_k1+2)^0180h,w
  4027  007B  1283               	bcf	status, 5	;RP0=0, select bank0
  4028  007C  1303               	bcf	status, 6	;RP1=0, select bank0
  4029  007D  00B0               	movwf	2+(?___ftmul)+03h
  4030  007E  160A  118A  2618   	fcall	___ftmul
              120A  118A         
  4031  0083  1283               	bcf	status, 5	;RP0=0, select bank0
  4032  0084  1303               	bcf	status, 6	;RP1=0, select bank0
  4033  0085  082B               	movf	(0+(?___ftmul)),w
  4034  0086  00C9               	movwf	0+(?___ftadd)+03h
  4035  0087  082C               	movf	(1+(?___ftmul)),w
  4036  0088  00CA               	movwf	1+(?___ftadd)+03h
  4037  0089  082D               	movf	(2+(?___ftmul)),w
  4038  008A  00CB               	movwf	2+(?___ftadd)+03h
  4039  008B  120A  158A  2535   	fcall	___ftadd
              120A  118A         
  4040  0090  1283               	bcf	status, 5	;RP0=0, select bank0
  4041  0091  1303               	bcf	status, 6	;RP1=0, select bank0
  4042  0092  0846               	movf	(0+(?___ftadd)),w
  4043  0093  00D4               	movwf	(_Calc_PID_op$8870)
  4044  0094  0847               	movf	(1+(?___ftadd)),w
  4045  0095  00D5               	movwf	(_Calc_PID_op$8870+1)
  4046  0096  0848               	movf	(2+(?___ftadd)),w
  4047  0097  00D6               	movwf	(_Calc_PID_op$8870+2)
  4048                           ;PIDp.c: 89: diff = ( k1 * e0 ) + ( k2 * e1 ) + ( k3 *e2 ) ;
  4049  0098  1683               	bsf	status, 5	;RP0=1, select bank3
  4050  0099  1703               	bsf	status, 6	;RP1=1, select bank3
  4051  009A  082F               	movf	(_e2)^0180h,w
  4052  009B  1283               	bcf	status, 5	;RP0=0, select bank0
  4053  009C  1303               	bcf	status, 6	;RP1=0, select bank0
  4054  009D  00AB               	movwf	(?___ftmul)
  4055  009E  1683               	bsf	status, 5	;RP0=1, select bank3
  4056  009F  1703               	bsf	status, 6	;RP1=1, select bank3
  4057  00A0  0830               	movf	(_e2+1)^0180h,w
  4058  00A1  1283               	bcf	status, 5	;RP0=0, select bank0
  4059  00A2  1303               	bcf	status, 6	;RP1=0, select bank0
  4060  00A3  00AC               	movwf	(?___ftmul+1)
  4061  00A4  1683               	bsf	status, 5	;RP0=1, select bank3
  4062  00A5  1703               	bsf	status, 6	;RP1=1, select bank3
  4063  00A6  0831               	movf	(_e2+2)^0180h,w
  4064  00A7  1283               	bcf	status, 5	;RP0=0, select bank0
  4065  00A8  1303               	bcf	status, 6	;RP1=0, select bank0
  4066  00A9  00AD               	movwf	(?___ftmul+2)
  4067  00AA  1683               	bsf	status, 5	;RP0=1, select bank3
  4068  00AB  1703               	bsf	status, 6	;RP1=1, select bank3
  4069  00AC  0838               	movf	(_k3)^0180h,w
  4070  00AD  1283               	bcf	status, 5	;RP0=0, select bank0
  4071  00AE  1303               	bcf	status, 6	;RP1=0, select bank0
  4072  00AF  00AE               	movwf	0+(?___ftmul)+03h
  4073  00B0  1683               	bsf	status, 5	;RP0=1, select bank3
  4074  00B1  1703               	bsf	status, 6	;RP1=1, select bank3
  4075  00B2  0839               	movf	(_k3+1)^0180h,w
  4076  00B3  1283               	bcf	status, 5	;RP0=0, select bank0
  4077  00B4  1303               	bcf	status, 6	;RP1=0, select bank0
  4078  00B5  00AF               	movwf	1+(?___ftmul)+03h
  4079  00B6  1683               	bsf	status, 5	;RP0=1, select bank3
  4080  00B7  1703               	bsf	status, 6	;RP1=1, select bank3
  4081  00B8  083A               	movf	(_k3+2)^0180h,w
  4082  00B9  1283               	bcf	status, 5	;RP0=0, select bank0
  4083  00BA  1303               	bcf	status, 6	;RP1=0, select bank0
  4084  00BB  00B0               	movwf	2+(?___ftmul)+03h
  4085  00BC  160A  118A  2618   	fcall	___ftmul
              120A  118A         
  4086  00C1  1283               	bcf	status, 5	;RP0=0, select bank0
  4087  00C2  1303               	bcf	status, 6	;RP1=0, select bank0
  4088  00C3  082B               	movf	(0+(?___ftmul)),w
  4089  00C4  00C6               	movwf	(?___ftadd)
  4090  00C5  082C               	movf	(1+(?___ftmul)),w
  4091  00C6  00C7               	movwf	(?___ftadd+1)
  4092  00C7  082D               	movf	(2+(?___ftmul)),w
  4093  00C8  00C8               	movwf	(?___ftadd+2)
  4094  00C9  0854               	movf	(_Calc_PID_op$8870),w
  4095  00CA  00C9               	movwf	0+(?___ftadd)+03h
  4096  00CB  0855               	movf	(_Calc_PID_op$8870+1),w
  4097  00CC  00CA               	movwf	1+(?___ftadd)+03h
  4098  00CD  0856               	movf	(_Calc_PID_op$8870+2),w
  4099  00CE  00CB               	movwf	2+(?___ftadd)+03h
  4100  00CF  120A  158A  2535   	fcall	___ftadd
              120A  118A         
  4101  00D4  1283               	bcf	status, 5	;RP0=0, select bank0
  4102  00D5  1303               	bcf	status, 6	;RP1=0, select bank0
  4103  00D6  0846               	movf	(0+(?___ftadd)),w
  4104  00D7  00DB               	movwf	(Calc_PID_op@diff)
  4105  00D8  0847               	movf	(1+(?___ftadd)),w
  4106  00D9  00DC               	movwf	(Calc_PID_op@diff+1)
  4107  00DA  0848               	movf	(2+(?___ftadd)),w
  4108  00DB  00DD               	movwf	(Calc_PID_op@diff+2)
  4109  00DC  28E4               	goto	l11607
  4110                           	line	90
  4111                           	
  4112  00DD                     l3417:	
  4113                           	line	91
  4114                           	
  4115  00DD                     l11605:	
  4116                           ;PIDp.c: 90: else
  4117                           ;PIDp.c: 91: diff = -48.0 ;
  4118  00DD  3000               	movlw	0x0
  4119  00DE  00DB               	movwf	(Calc_PID_op@diff)
  4120  00DF  3040               	movlw	0x40
  4121  00E0  00DC               	movwf	(Calc_PID_op@diff+1)
  4122  00E1  30C2               	movlw	0xc2
  4123  00E2  00DD               	movwf	(Calc_PID_op@diff+2)
  4124  00E3  28E4               	goto	l11607
  4125                           	
  4126  00E4                     l3418:	
  4127                           	line	93
  4128                           	
  4129  00E4                     l11607:	
  4130                           ;PIDp.c: 93: if ( diff > 48.0 ) diff = 48.0 ;
  4131  00E4  3000               	movlw	0x0
  4132  00E5  00A8               	movwf	(?___ftge)
  4133  00E6  3040               	movlw	0x40
  4134  00E7  00A9               	movwf	(?___ftge+1)
  4135  00E8  3042               	movlw	0x42
  4136  00E9  00AA               	movwf	(?___ftge+2)
  4137  00EA  085B               	movf	(Calc_PID_op@diff),w
  4138  00EB  00AB               	movwf	0+(?___ftge)+03h
  4139  00EC  085C               	movf	(Calc_PID_op@diff+1),w
  4140  00ED  00AC               	movwf	1+(?___ftge)+03h
  4141  00EE  085D               	movf	(Calc_PID_op@diff+2),w
  4142  00EF  00AD               	movwf	2+(?___ftge)+03h
  4143  00F0  160A  158A  262F   	fcall	___ftge
              120A  118A         
  4144  00F5  1803               	btfsc	status,0
  4145  00F6  28F8               	goto	u4681
  4146  00F7  28F9               	goto	u4680
  4147  00F8                     u4681:
  4148  00F8  2902               	goto	l11611
  4149  00F9                     u4680:
  4150                           	
  4151  00F9                     l11609:	
  4152  00F9  3000               	movlw	0x0
  4153  00FA  1283               	bcf	status, 5	;RP0=0, select bank0
  4154  00FB  1303               	bcf	status, 6	;RP1=0, select bank0
  4155  00FC  00DB               	movwf	(Calc_PID_op@diff)
  4156  00FD  3040               	movlw	0x40
  4157  00FE  00DC               	movwf	(Calc_PID_op@diff+1)
  4158  00FF  3042               	movlw	0x42
  4159  0100  00DD               	movwf	(Calc_PID_op@diff+2)
  4160  0101  2902               	goto	l11611
  4161                           	
  4162  0102                     l3419:	
  4163                           	line	94
  4164                           	
  4165  0102                     l11611:	
  4166                           ;PIDp.c: 94: if ( diff < -48.0 ) diff = -48.0 ;
  4167  0102  1283               	bcf	status, 5	;RP0=0, select bank0
  4168  0103  1303               	bcf	status, 6	;RP1=0, select bank0
  4169  0104  085B               	movf	(Calc_PID_op@diff),w
  4170  0105  00A8               	movwf	(?___ftge)
  4171  0106  085C               	movf	(Calc_PID_op@diff+1),w
  4172  0107  00A9               	movwf	(?___ftge+1)
  4173  0108  085D               	movf	(Calc_PID_op@diff+2),w
  4174  0109  00AA               	movwf	(?___ftge+2)
  4175  010A  3000               	movlw	0x0
  4176  010B  00AB               	movwf	0+(?___ftge)+03h
  4177  010C  3040               	movlw	0x40
  4178  010D  00AC               	movwf	1+(?___ftge)+03h
  4179  010E  30C2               	movlw	0xc2
  4180  010F  00AD               	movwf	2+(?___ftge)+03h
  4181  0110  160A  158A  262F   	fcall	___ftge
              120A  118A         
  4182  0115  1803               	btfsc	status,0
  4183  0116  2918               	goto	u4691
  4184  0117  2919               	goto	u4690
  4185  0118                     u4691:
  4186  0118  2922               	goto	l11615
  4187  0119                     u4690:
  4188                           	
  4189  0119                     l11613:	
  4190  0119  3000               	movlw	0x0
  4191  011A  1283               	bcf	status, 5	;RP0=0, select bank0
  4192  011B  1303               	bcf	status, 6	;RP1=0, select bank0
  4193  011C  00DB               	movwf	(Calc_PID_op@diff)
  4194  011D  3040               	movlw	0x40
  4195  011E  00DC               	movwf	(Calc_PID_op@diff+1)
  4196  011F  30C2               	movlw	0xc2
  4197  0120  00DD               	movwf	(Calc_PID_op@diff+2)
  4198  0121  2922               	goto	l11615
  4199                           	
  4200  0122                     l3420:	
  4201                           	line	98
  4202                           	
  4203  0122                     l11615:	
  4204                           ;PIDp.c: 98: if ( ( u1 + diff ) > (MaxStep + 90) ) diff = MaxStep + 90 - u1 ;
  4205  0122  3000               	movlw	0x0
  4206  0123  1283               	bcf	status, 5	;RP0=0, select bank0
  4207  0124  1303               	bcf	status, 6	;RP1=0, select bank0
  4208  0125  00C6               	movwf	(?___ftadd)
  4209  0126  30B4               	movlw	0xb4
  4210  0127  00C7               	movwf	(?___ftadd+1)
  4211  0128  3042               	movlw	0x42
  4212  0129  00C8               	movwf	(?___ftadd+2)
  4213  012A  1683               	bsf	status, 5	;RP0=1, select bank1
  4214  012B  1303               	bcf	status, 6	;RP1=0, select bank1
  4215  012C  084C               	movf	(_MaxStep)^080h,w
  4216  012D  1283               	bcf	status, 5	;RP0=0, select bank0
  4217  012E  1303               	bcf	status, 6	;RP1=0, select bank0
  4218  012F  00C9               	movwf	0+(?___ftadd)+03h
  4219  0130  1683               	bsf	status, 5	;RP0=1, select bank1
  4220  0131  1303               	bcf	status, 6	;RP1=0, select bank1
  4221  0132  084D               	movf	(_MaxStep+1)^080h,w
  4222  0133  1283               	bcf	status, 5	;RP0=0, select bank0
  4223  0134  1303               	bcf	status, 6	;RP1=0, select bank0
  4224  0135  00CA               	movwf	1+(?___ftadd)+03h
  4225  0136  1683               	bsf	status, 5	;RP0=1, select bank1
  4226  0137  1303               	bcf	status, 6	;RP1=0, select bank1
  4227  0138  084E               	movf	(_MaxStep+2)^080h,w
  4228  0139  1283               	bcf	status, 5	;RP0=0, select bank0
  4229  013A  1303               	bcf	status, 6	;RP1=0, select bank0
  4230  013B  00CB               	movwf	2+(?___ftadd)+03h
  4231  013C  120A  158A  2535   	fcall	___ftadd
              120A  118A         
  4232  0141  1283               	bcf	status, 5	;RP0=0, select bank0
  4233  0142  1303               	bcf	status, 6	;RP1=0, select bank0
  4234  0143  0846               	movf	(0+(?___ftadd)),w
  4235  0144  00A8               	movwf	(?___ftge)
  4236  0145  0847               	movf	(1+(?___ftadd)),w
  4237  0146  00A9               	movwf	(?___ftge+1)
  4238  0147  0848               	movf	(2+(?___ftadd)),w
  4239  0148  00AA               	movwf	(?___ftge+2)
  4240  0149  085B               	movf	(Calc_PID_op@diff),w
  4241  014A  00C6               	movwf	(?___ftadd)
  4242  014B  085C               	movf	(Calc_PID_op@diff+1),w
  4243  014C  00C7               	movwf	(?___ftadd+1)
  4244  014D  085D               	movf	(Calc_PID_op@diff+2),w
  4245  014E  00C8               	movwf	(?___ftadd+2)
  4246  014F  1683               	bsf	status, 5	;RP0=1, select bank1
  4247  0150  1303               	bcf	status, 6	;RP1=0, select bank1
  4248  0151  0858               	movf	(_u1)^080h,w
  4249  0152  1283               	bcf	status, 5	;RP0=0, select bank0
  4250  0153  1303               	bcf	status, 6	;RP1=0, select bank0
  4251  0154  00C9               	movwf	0+(?___ftadd)+03h
  4252  0155  1683               	bsf	status, 5	;RP0=1, select bank1
  4253  0156  1303               	bcf	status, 6	;RP1=0, select bank1
  4254  0157  0859               	movf	(_u1+1)^080h,w
  4255  0158  1283               	bcf	status, 5	;RP0=0, select bank0
  4256  0159  1303               	bcf	status, 6	;RP1=0, select bank0
  4257  015A  00CA               	movwf	1+(?___ftadd)+03h
  4258  015B  1683               	bsf	status, 5	;RP0=1, select bank1
  4259  015C  1303               	bcf	status, 6	;RP1=0, select bank1
  4260  015D  085A               	movf	(_u1+2)^080h,w
  4261  015E  1283               	bcf	status, 5	;RP0=0, select bank0
  4262  015F  1303               	bcf	status, 6	;RP1=0, select bank0
  4263  0160  00CB               	movwf	2+(?___ftadd)+03h
  4264  0161  120A  158A  2535   	fcall	___ftadd
              120A  118A         
  4265  0166  1283               	bcf	status, 5	;RP0=0, select bank0
  4266  0167  1303               	bcf	status, 6	;RP1=0, select bank0
  4267  0168  0846               	movf	(0+(?___ftadd)),w
  4268  0169  00AB               	movwf	0+(?___ftge)+03h
  4269  016A  0847               	movf	(1+(?___ftadd)),w
  4270  016B  00AC               	movwf	1+(?___ftge)+03h
  4271  016C  0848               	movf	(2+(?___ftadd)),w
  4272  016D  00AD               	movwf	2+(?___ftge)+03h
  4273  016E  160A  158A  262F   	fcall	___ftge
              120A  118A         
  4274  0173  1803               	btfsc	status,0
  4275  0174  2976               	goto	u4701
  4276  0175  2977               	goto	u4700
  4277  0176                     u4701:
  4278  0176  29CE               	goto	l3421
  4279  0177                     u4700:
  4280                           	
  4281  0177                     l11617:	
  4282  0177  1683               	bsf	status, 5	;RP0=1, select bank1
  4283  0178  1303               	bcf	status, 6	;RP1=0, select bank1
  4284  0179  084C               	movf	(_MaxStep)^080h,w
  4285  017A  1283               	bcf	status, 5	;RP0=0, select bank0
  4286  017B  1303               	bcf	status, 6	;RP1=0, select bank0
  4287  017C  00C6               	movwf	(?___ftadd)
  4288  017D  1683               	bsf	status, 5	;RP0=1, select bank1
  4289  017E  1303               	bcf	status, 6	;RP1=0, select bank1
  4290  017F  084D               	movf	(_MaxStep+1)^080h,w
  4291  0180  1283               	bcf	status, 5	;RP0=0, select bank0
  4292  0181  1303               	bcf	status, 6	;RP1=0, select bank0
  4293  0182  00C7               	movwf	(?___ftadd+1)
  4294  0183  1683               	bsf	status, 5	;RP0=1, select bank1
  4295  0184  1303               	bcf	status, 6	;RP1=0, select bank1
  4296  0185  084E               	movf	(_MaxStep+2)^080h,w
  4297  0186  1283               	bcf	status, 5	;RP0=0, select bank0
  4298  0187  1303               	bcf	status, 6	;RP1=0, select bank0
  4299  0188  00C8               	movwf	(?___ftadd+2)
  4300  0189  1683               	bsf	status, 5	;RP0=1, select bank1
  4301  018A  1303               	bcf	status, 6	;RP1=0, select bank1
  4302  018B  0858               	movf	(_u1)^080h,w
  4303  018C  1283               	bcf	status, 5	;RP0=0, select bank0
  4304  018D  1303               	bcf	status, 6	;RP1=0, select bank0
  4305  018E  00A8               	movwf	(?___ftneg)
  4306  018F  1683               	bsf	status, 5	;RP0=1, select bank1
  4307  0190  1303               	bcf	status, 6	;RP1=0, select bank1
  4308  0191  0859               	movf	(_u1+1)^080h,w
  4309  0192  1283               	bcf	status, 5	;RP0=0, select bank0
  4310  0193  1303               	bcf	status, 6	;RP1=0, select bank0
  4311  0194  00A9               	movwf	(?___ftneg+1)
  4312  0195  1683               	bsf	status, 5	;RP0=1, select bank1
  4313  0196  1303               	bcf	status, 6	;RP1=0, select bank1
  4314  0197  085A               	movf	(_u1+2)^080h,w
  4315  0198  1283               	bcf	status, 5	;RP0=0, select bank0
  4316  0199  1303               	bcf	status, 6	;RP1=0, select bank0
  4317  019A  00AA               	movwf	(?___ftneg+2)
  4318  019B  160A  158A  22F7   	fcall	___ftneg
              120A  118A         
  4319  01A0  1283               	bcf	status, 5	;RP0=0, select bank0
  4320  01A1  1303               	bcf	status, 6	;RP1=0, select bank0
  4321  01A2  0828               	movf	(0+(?___ftneg)),w
  4322  01A3  00C9               	movwf	0+(?___ftadd)+03h
  4323  01A4  0829               	movf	(1+(?___ftneg)),w
  4324  01A5  00CA               	movwf	1+(?___ftadd)+03h
  4325  01A6  082A               	movf	(2+(?___ftneg)),w
  4326  01A7  00CB               	movwf	2+(?___ftadd)+03h
  4327  01A8  120A  158A  2535   	fcall	___ftadd
              120A  118A         
  4328  01AD  1283               	bcf	status, 5	;RP0=0, select bank0
  4329  01AE  1303               	bcf	status, 6	;RP1=0, select bank0
  4330  01AF  0846               	movf	(0+(?___ftadd)),w
  4331  01B0  00D4               	movwf	(_Calc_PID_op$8870)
  4332  01B1  0847               	movf	(1+(?___ftadd)),w
  4333  01B2  00D5               	movwf	(_Calc_PID_op$8870+1)
  4334  01B3  0848               	movf	(2+(?___ftadd)),w
  4335  01B4  00D6               	movwf	(_Calc_PID_op$8870+2)
  4336  01B5  3000               	movlw	0x0
  4337  01B6  00C6               	movwf	(?___ftadd)
  4338  01B7  30B4               	movlw	0xb4
  4339  01B8  00C7               	movwf	(?___ftadd+1)
  4340  01B9  3042               	movlw	0x42
  4341  01BA  00C8               	movwf	(?___ftadd+2)
  4342  01BB  0854               	movf	(_Calc_PID_op$8870),w
  4343  01BC  00C9               	movwf	0+(?___ftadd)+03h
  4344  01BD  0855               	movf	(_Calc_PID_op$8870+1),w
  4345  01BE  00CA               	movwf	1+(?___ftadd)+03h
  4346  01BF  0856               	movf	(_Calc_PID_op$8870+2),w
  4347  01C0  00CB               	movwf	2+(?___ftadd)+03h
  4348  01C1  120A  158A  2535   	fcall	___ftadd
              120A  118A         
  4349  01C6  1283               	bcf	status, 5	;RP0=0, select bank0
  4350  01C7  1303               	bcf	status, 6	;RP1=0, select bank0
  4351  01C8  0846               	movf	(0+(?___ftadd)),w
  4352  01C9  00DB               	movwf	(Calc_PID_op@diff)
  4353  01CA  0847               	movf	(1+(?___ftadd)),w
  4354  01CB  00DC               	movwf	(Calc_PID_op@diff+1)
  4355  01CC  0848               	movf	(2+(?___ftadd)),w
  4356  01CD  00DD               	movwf	(Calc_PID_op@diff+2)
  4357                           	
  4358  01CE                     l3421:	
  4359                           	line	99
  4360                           ;PIDp.c: 99: if ( ( u1 + diff ) < -90.0 ) diff = -90.0 - u1 ;
  4361  01CE  1283               	bcf	status, 5	;RP0=0, select bank0
  4362  01CF  1303               	bcf	status, 6	;RP1=0, select bank0
  4363  01D0  085B               	movf	(Calc_PID_op@diff),w
  4364  01D1  00C6               	movwf	(?___ftadd)
  4365  01D2  085C               	movf	(Calc_PID_op@diff+1),w
  4366  01D3  00C7               	movwf	(?___ftadd+1)
  4367  01D4  085D               	movf	(Calc_PID_op@diff+2),w
  4368  01D5  00C8               	movwf	(?___ftadd+2)
  4369  01D6  1683               	bsf	status, 5	;RP0=1, select bank1
  4370  01D7  1303               	bcf	status, 6	;RP1=0, select bank1
  4371  01D8  0858               	movf	(_u1)^080h,w
  4372  01D9  1283               	bcf	status, 5	;RP0=0, select bank0
  4373  01DA  1303               	bcf	status, 6	;RP1=0, select bank0
  4374  01DB  00C9               	movwf	0+(?___ftadd)+03h
  4375  01DC  1683               	bsf	status, 5	;RP0=1, select bank1
  4376  01DD  1303               	bcf	status, 6	;RP1=0, select bank1
  4377  01DE  0859               	movf	(_u1+1)^080h,w
  4378  01DF  1283               	bcf	status, 5	;RP0=0, select bank0
  4379  01E0  1303               	bcf	status, 6	;RP1=0, select bank0
  4380  01E1  00CA               	movwf	1+(?___ftadd)+03h
  4381  01E2  1683               	bsf	status, 5	;RP0=1, select bank1
  4382  01E3  1303               	bcf	status, 6	;RP1=0, select bank1
  4383  01E4  085A               	movf	(_u1+2)^080h,w
  4384  01E5  1283               	bcf	status, 5	;RP0=0, select bank0
  4385  01E6  1303               	bcf	status, 6	;RP1=0, select bank0
  4386  01E7  00CB               	movwf	2+(?___ftadd)+03h
  4387  01E8  120A  158A  2535   	fcall	___ftadd
              120A  118A         
  4388  01ED  1283               	bcf	status, 5	;RP0=0, select bank0
  4389  01EE  1303               	bcf	status, 6	;RP1=0, select bank0
  4390  01EF  0846               	movf	(0+(?___ftadd)),w
  4391  01F0  00A8               	movwf	(?___ftge)
  4392  01F1  0847               	movf	(1+(?___ftadd)),w
  4393  01F2  00A9               	movwf	(?___ftge+1)
  4394  01F3  0848               	movf	(2+(?___ftadd)),w
  4395  01F4  00AA               	movwf	(?___ftge+2)
  4396  01F5  3000               	movlw	0x0
  4397  01F6  00AB               	movwf	0+(?___ftge)+03h
  4398  01F7  30B4               	movlw	0xb4
  4399  01F8  00AC               	movwf	1+(?___ftge)+03h
  4400  01F9  30C2               	movlw	0xc2
  4401  01FA  00AD               	movwf	2+(?___ftge)+03h
  4402  01FB  160A  158A  262F   	fcall	___ftge
              120A  118A         
  4403  0200  1803               	btfsc	status,0
  4404  0201  2A03               	goto	u4711
  4405  0202  2A04               	goto	u4710
  4406  0203                     u4711:
  4407  0203  2A38               	goto	l3422
  4408  0204                     u4710:
  4409                           	
  4410  0204                     l11619:	
  4411  0204  3000               	movlw	0x0
  4412  0205  1283               	bcf	status, 5	;RP0=0, select bank0
  4413  0206  1303               	bcf	status, 6	;RP1=0, select bank0
  4414  0207  00C6               	movwf	(?___ftadd)
  4415  0208  30B4               	movlw	0xb4
  4416  0209  00C7               	movwf	(?___ftadd+1)
  4417  020A  30C2               	movlw	0xc2
  4418  020B  00C8               	movwf	(?___ftadd+2)
  4419  020C  1683               	bsf	status, 5	;RP0=1, select bank1
  4420  020D  1303               	bcf	status, 6	;RP1=0, select bank1
  4421  020E  0858               	movf	(_u1)^080h,w
  4422  020F  1283               	bcf	status, 5	;RP0=0, select bank0
  4423  0210  1303               	bcf	status, 6	;RP1=0, select bank0
  4424  0211  00A8               	movwf	(?___ftneg)
  4425  0212  1683               	bsf	status, 5	;RP0=1, select bank1
  4426  0213  1303               	bcf	status, 6	;RP1=0, select bank1
  4427  0214  0859               	movf	(_u1+1)^080h,w
  4428  0215  1283               	bcf	status, 5	;RP0=0, select bank0
  4429  0216  1303               	bcf	status, 6	;RP1=0, select bank0
  4430  0217  00A9               	movwf	(?___ftneg+1)
  4431  0218  1683               	bsf	status, 5	;RP0=1, select bank1
  4432  0219  1303               	bcf	status, 6	;RP1=0, select bank1
  4433  021A  085A               	movf	(_u1+2)^080h,w
  4434  021B  1283               	bcf	status, 5	;RP0=0, select bank0
  4435  021C  1303               	bcf	status, 6	;RP1=0, select bank0
  4436  021D  00AA               	movwf	(?___ftneg+2)
  4437  021E  160A  158A  22F7   	fcall	___ftneg
              120A  118A         
  4438  0223  1283               	bcf	status, 5	;RP0=0, select bank0
  4439  0224  1303               	bcf	status, 6	;RP1=0, select bank0
  4440  0225  0828               	movf	(0+(?___ftneg)),w
  4441  0226  00C9               	movwf	0+(?___ftadd)+03h
  4442  0227  0829               	movf	(1+(?___ftneg)),w
  4443  0228  00CA               	movwf	1+(?___ftadd)+03h
  4444  0229  082A               	movf	(2+(?___ftneg)),w
  4445  022A  00CB               	movwf	2+(?___ftadd)+03h
  4446  022B  120A  158A  2535   	fcall	___ftadd
              120A  118A         
  4447  0230  1283               	bcf	status, 5	;RP0=0, select bank0
  4448  0231  1303               	bcf	status, 6	;RP1=0, select bank0
  4449  0232  0846               	movf	(0+(?___ftadd)),w
  4450  0233  00DB               	movwf	(Calc_PID_op@diff)
  4451  0234  0847               	movf	(1+(?___ftadd)),w
  4452  0235  00DC               	movwf	(Calc_PID_op@diff+1)
  4453  0236  0848               	movf	(2+(?___ftadd)),w
  4454  0237  00DD               	movwf	(Calc_PID_op@diff+2)
  4455                           	
  4456  0238                     l3422:	
  4457                           	line	100
  4458                           ;PIDp.c: 100: u = u1 + diff ;
  4459  0238  1283               	bcf	status, 5	;RP0=0, select bank0
  4460  0239  1303               	bcf	status, 6	;RP1=0, select bank0
  4461  023A  085B               	movf	(Calc_PID_op@diff),w
  4462  023B  00C6               	movwf	(?___ftadd)
  4463  023C  085C               	movf	(Calc_PID_op@diff+1),w
  4464  023D  00C7               	movwf	(?___ftadd+1)
  4465  023E  085D               	movf	(Calc_PID_op@diff+2),w
  4466  023F  00C8               	movwf	(?___ftadd+2)
  4467  0240  1683               	bsf	status, 5	;RP0=1, select bank1
  4468  0241  1303               	bcf	status, 6	;RP1=0, select bank1
  4469  0242  0858               	movf	(_u1)^080h,w
  4470  0243  1283               	bcf	status, 5	;RP0=0, select bank0
  4471  0244  1303               	bcf	status, 6	;RP1=0, select bank0
  4472  0245  00C9               	movwf	0+(?___ftadd)+03h
  4473  0246  1683               	bsf	status, 5	;RP0=1, select bank1
  4474  0247  1303               	bcf	status, 6	;RP1=0, select bank1
  4475  0248  0859               	movf	(_u1+1)^080h,w
  4476  0249  1283               	bcf	status, 5	;RP0=0, select bank0
  4477  024A  1303               	bcf	status, 6	;RP1=0, select bank0
  4478  024B  00CA               	movwf	1+(?___ftadd)+03h
  4479  024C  1683               	bsf	status, 5	;RP0=1, select bank1
  4480  024D  1303               	bcf	status, 6	;RP1=0, select bank1
  4481  024E  085A               	movf	(_u1+2)^080h,w
  4482  024F  1283               	bcf	status, 5	;RP0=0, select bank0
  4483  0250  1303               	bcf	status, 6	;RP1=0, select bank0
  4484  0251  00CB               	movwf	2+(?___ftadd)+03h
  4485  0252  120A  158A  2535   	fcall	___ftadd
              120A  118A         
  4486  0257  1283               	bcf	status, 5	;RP0=0, select bank0
  4487  0258  1303               	bcf	status, 6	;RP1=0, select bank0
  4488  0259  0846               	movf	(0+(?___ftadd)),w
  4489  025A  1683               	bsf	status, 5	;RP0=1, select bank1
  4490  025B  1303               	bcf	status, 6	;RP1=0, select bank1
  4491  025C  00D5               	movwf	(_u)^080h
  4492  025D  1283               	bcf	status, 5	;RP0=0, select bank0
  4493  025E  1303               	bcf	status, 6	;RP1=0, select bank0
  4494  025F  0847               	movf	(1+(?___ftadd)),w
  4495  0260  1683               	bsf	status, 5	;RP0=1, select bank1
  4496  0261  1303               	bcf	status, 6	;RP1=0, select bank1
  4497  0262  00D6               	movwf	(_u+1)^080h
  4498  0263  1283               	bcf	status, 5	;RP0=0, select bank0
  4499  0264  1303               	bcf	status, 6	;RP1=0, select bank0
  4500  0265  0848               	movf	(2+(?___ftadd)),w
  4501  0266  1683               	bsf	status, 5	;RP0=1, select bank1
  4502  0267  1303               	bcf	status, 6	;RP1=0, select bank1
  4503  0268  00D7               	movwf	(_u+2)^080h
  4504                           	line	102
  4505                           ;PIDp.c: 102: NoStepOut = diff ;
  4506  0269  1283               	bcf	status, 5	;RP0=0, select bank0
  4507  026A  1303               	bcf	status, 6	;RP1=0, select bank0
  4508  026B  085B               	movf	(Calc_PID_op@diff),w
  4509  026C  00A8               	movwf	(?___fttol)
  4510  026D  085C               	movf	(Calc_PID_op@diff+1),w
  4511  026E  00A9               	movwf	(?___fttol+1)
  4512  026F  085D               	movf	(Calc_PID_op@diff+2),w
  4513  0270  00AA               	movwf	(?___fttol+2)
  4514  0271  160A  118A  20EE   	fcall	___fttol
              120A  118A         
  4515  0276  1283               	bcf	status, 5	;RP0=0, select bank0
  4516  0277  1303               	bcf	status, 6	;RP1=0, select bank0
  4517  0278  0829               	movf	1+(((0+(?___fttol)))),w
  4518  0279  01DA               	clrf	(Calc_PID_op@NoStepOut+1)
  4519  027A  07DA               	addwf	(Calc_PID_op@NoStepOut+1)
  4520  027B  0828               	movf	0+(((0+(?___fttol)))),w
  4521  027C  01D9               	clrf	(Calc_PID_op@NoStepOut)
  4522  027D  07D9               	addwf	(Calc_PID_op@NoStepOut)
  4523                           
  4524                           	line	109
  4525                           	
  4526  027E                     l11621:	
  4527                           ;PIDp.c: 109: CurStepMode = 4 ;
  4528  027E  3004               	movlw	(04h)
  4529  027F  00D3               	movwf	(??_Calc_PID_op+0)+0
  4530  0280  0853               	movf	(??_Calc_PID_op+0)+0,w
  4531  0281  1683               	bsf	status, 5	;RP0=1, select bank1
  4532  0282  1303               	bcf	status, 6	;RP1=0, select bank1
  4533  0283  00ED               	movwf	(_CurStepMode)^080h
  4534                           	line	110
  4535                           	
  4536  0284                     l11623:	
  4537                           ;PIDp.c: 110: u1 = u;
  4538  0284  0855               	movf	(_u)^080h,w
  4539  0285  00D8               	movwf	(_u1)^080h
  4540  0286  0856               	movf	(_u+1)^080h,w
  4541  0287  00D9               	movwf	(_u1+1)^080h
  4542  0288  0857               	movf	(_u+2)^080h,w
  4543  0289  00DA               	movwf	(_u1+2)^080h
  4544                           	line	114
  4545                           	
  4546  028A                     l11625:	
  4547                           ;PIDp.c: 114: if( NoStepOut < 0 ) { CurStepDir = ANTICLKVIZ; NoStepOut = 0 - NoStepOut;}
  4548  028A  1283               	bcf	status, 5	;RP0=0, select bank0
  4549  028B  1303               	bcf	status, 6	;RP1=0, select bank0
  4550  028C  1FDA               	btfss	(Calc_PID_op@NoStepOut+1),7
  4551  028D  2A8F               	goto	u4721
  4552  028E  2A90               	goto	u4720
  4553  028F                     u4721:
  4554  028F  2A9E               	goto	l11631
  4555  0290                     u4720:
  4556                           	
  4557  0290                     l11627:	
  4558  0290  086A               	movf	(_ANTICLKVIZ),w
  4559  0291  00D3               	movwf	(??_Calc_PID_op+0)+0
  4560  0292  0853               	movf	(??_Calc_PID_op+0)+0,w
  4561  0293  1683               	bsf	status, 5	;RP0=1, select bank1
  4562  0294  1303               	bcf	status, 6	;RP1=0, select bank1
  4563  0295  00EC               	movwf	(_CurStepDir)^080h
  4564                           	
  4565  0296                     l11629:	
  4566  0296  1283               	bcf	status, 5	;RP0=0, select bank0
  4567  0297  1303               	bcf	status, 6	;RP1=0, select bank0
  4568  0298  09D9               	comf	(Calc_PID_op@NoStepOut),f
  4569  0299  09DA               	comf	(Calc_PID_op@NoStepOut+1),f
  4570  029A  0AD9               	incf	(Calc_PID_op@NoStepOut),f
  4571  029B  1903               	skipnz
  4572  029C  0ADA               	incf	(Calc_PID_op@NoStepOut+1),f
  4573  029D  2AA5               	goto	l11633
  4574                           	line	115
  4575                           	
  4576  029E                     l3423:	
  4577                           	
  4578  029E                     l11631:	
  4579                           ;PIDp.c: 115: else { CurStepDir = CLKVIZ;}
  4580  029E  086B               	movf	(_CLKVIZ),w
  4581  029F  00D3               	movwf	(??_Calc_PID_op+0)+0
  4582  02A0  0853               	movf	(??_Calc_PID_op+0)+0,w
  4583  02A1  1683               	bsf	status, 5	;RP0=1, select bank1
  4584  02A2  1303               	bcf	status, 6	;RP1=0, select bank1
  4585  02A3  00EC               	movwf	(_CurStepDir)^080h
  4586  02A4  2AA5               	goto	l11633
  4587                           	
  4588  02A5                     l3424:	
  4589                           	line	116
  4590                           	
  4591  02A5                     l11633:	
  4592                           ;PIDp.c: 116: CurTotNoStep = NoStepOut ;
  4593  02A5  1283               	bcf	status, 5	;RP0=0, select bank0
  4594  02A6  085A               	movf	(Calc_PID_op@NoStepOut+1),w
  4595  02A7  1683               	bsf	status, 5	;RP0=1, select bank1
  4596  02A8  1303               	bcf	status, 6	;RP1=0, select bank1
  4597  02A9  01E2               	clrf	(_CurTotNoStep+1)^080h
  4598  02AA  07E2               	addwf	(_CurTotNoStep+1)^080h
  4599  02AB  1283               	bcf	status, 5	;RP0=0, select bank0
  4600  02AC  1303               	bcf	status, 6	;RP1=0, select bank0
  4601  02AD  0859               	movf	(Calc_PID_op@NoStepOut),w
  4602  02AE  1683               	bsf	status, 5	;RP0=1, select bank1
  4603  02AF  1303               	bcf	status, 6	;RP1=0, select bank1
  4604  02B0  01E1               	clrf	(_CurTotNoStep)^080h
  4605  02B1  07E1               	addwf	(_CurTotNoStep)^080h
  4606                           
  4607                           	line	128
  4608                           	
  4609  02B2                     l11635:	
  4610                           ;PIDp.c: 128: angle = u/18;
  4611  02B2  0855               	movf	(_u)^080h,w
  4612  02B3  1283               	bcf	status, 5	;RP0=0, select bank0
  4613  02B4  1303               	bcf	status, 6	;RP1=0, select bank0
  4614  02B5  00B9               	movwf	0+(?___ftdiv)+03h
  4615  02B6  1683               	bsf	status, 5	;RP0=1, select bank1
  4616  02B7  1303               	bcf	status, 6	;RP1=0, select bank1
  4617  02B8  0856               	movf	(_u+1)^080h,w
  4618  02B9  1283               	bcf	status, 5	;RP0=0, select bank0
  4619  02BA  1303               	bcf	status, 6	;RP1=0, select bank0
  4620  02BB  00BA               	movwf	1+(?___ftdiv)+03h
  4621  02BC  1683               	bsf	status, 5	;RP0=1, select bank1
  4622  02BD  1303               	bcf	status, 6	;RP1=0, select bank1
  4623  02BE  0857               	movf	(_u+2)^080h,w
  4624  02BF  1283               	bcf	status, 5	;RP0=0, select bank0
  4625  02C0  1303               	bcf	status, 6	;RP1=0, select bank0
  4626  02C1  00BB               	movwf	2+(?___ftdiv)+03h
  4627  02C2  3000               	movlw	0x0
  4628  02C3  00B6               	movwf	(?___ftdiv)
  4629  02C4  3090               	movlw	0x90
  4630  02C5  00B7               	movwf	(?___ftdiv+1)
  4631  02C6  3041               	movlw	0x41
  4632  02C7  00B8               	movwf	(?___ftdiv+2)
  4633  02C8  160A  118A  22ED   	fcall	___ftdiv
              120A  118A         
  4634  02CD  1283               	bcf	status, 5	;RP0=0, select bank0
  4635  02CE  1303               	bcf	status, 6	;RP1=0, select bank0
  4636  02CF  0836               	movf	(0+(?___ftdiv)),w
  4637  02D0  00A8               	movwf	(?___fttol)
  4638  02D1  0837               	movf	(1+(?___ftdiv)),w
  4639  02D2  00A9               	movwf	(?___fttol+1)
  4640  02D3  0838               	movf	(2+(?___ftdiv)),w
  4641  02D4  00AA               	movwf	(?___fttol+2)
  4642  02D5  160A  118A  20EE   	fcall	___fttol
              120A  118A         
  4643  02DA  1283               	bcf	status, 5	;RP0=0, select bank0
  4644  02DB  1303               	bcf	status, 6	;RP1=0, select bank0
  4645  02DC  0829               	movf	1+(((0+(?___fttol)))),w
  4646  02DD  01D8               	clrf	(Calc_PID_op@angle+1)
  4647  02DE  07D8               	addwf	(Calc_PID_op@angle+1)
  4648  02DF  0828               	movf	0+(((0+(?___fttol)))),w
  4649  02E0  01D7               	clrf	(Calc_PID_op@angle)
  4650  02E1  07D7               	addwf	(Calc_PID_op@angle)
  4651                           
  4652                           	line	129
  4653                           	
  4654  02E2                     l11637:	
  4655                           ;PIDp.c: 129: if(angle < 0 ) angle = 0;
  4656  02E2  1FD8               	btfss	(Calc_PID_op@angle+1),7
  4657  02E3  2AE5               	goto	u4731
  4658  02E4  2AE6               	goto	u4730
  4659  02E5                     u4731:
  4660  02E5  2AE9               	goto	l11641
  4661  02E6                     u4730:
  4662                           	
  4663  02E6                     l11639:	
  4664  02E6  01D7               	clrf	(Calc_PID_op@angle)
  4665  02E7  01D8               	clrf	(Calc_PID_op@angle+1)
  4666  02E8  2AE9               	goto	l11641
  4667                           	
  4668  02E9                     l3425:	
  4669                           	line	131
  4670                           	
  4671  02E9                     l11641:	
  4672                           ;PIDp.c: 131: USARTWriteChar('Y');USARTWriteInt(angle);USARTWriteString(strnw);
  4673  02E9  3059               	movlw	(059h)
  4674  02EA  160A  118A  2000   	fcall	_USARTWriteChar
              120A  118A         
  4675                           	
  4676  02EF                     l11643:	
  4677  02EF  1283               	bcf	status, 5	;RP0=0, select bank0
  4678  02F0  1303               	bcf	status, 6	;RP1=0, select bank0
  4679  02F1  0857               	movf	(Calc_PID_op@angle),w
  4680  02F2  00AF               	movwf	(?_USARTWriteInt)
  4681  02F3  0858               	movf	(Calc_PID_op@angle+1),w
  4682  02F4  00B0               	movwf	(?_USARTWriteInt+1)
  4683  02F5  3000               	movlw	0
  4684  02F6  1BB0               	btfsc	(?_USARTWriteInt+1),7
  4685  02F7  30FF               	movlw	255
  4686  02F8  00B1               	movwf	(?_USARTWriteInt+2)
  4687  02F9  00B2               	movwf	(?_USARTWriteInt+3)
  4688  02FA  160A  118A  247D   	fcall	_USARTWriteInt
              120A  118A         
  4689                           	
  4690  02FF                     l11645:	
  4691  02FF  3002               	movlw	((_strnw-__stringbase))&0ffh
  4692  0300  160A  158A  2390   	fcall	_USARTWriteString
              120A  118A         
  4693                           	line	138
  4694                           	
  4695  0305                     l11647:	
  4696                           ;PIDp.c: 138: Make_Table( CurTotNoStep );
  4697  0305  1683               	bsf	status, 5	;RP0=1, select bank1
  4698  0306  1303               	bcf	status, 6	;RP1=0, select bank1
  4699  0307  0862               	movf	(_CurTotNoStep+1)^080h,w
  4700  0308  1283               	bcf	status, 5	;RP0=0, select bank0
  4701  0309  1303               	bcf	status, 6	;RP1=0, select bank0
  4702  030A  01A1               	clrf	(?_Make_Table+1)
  4703  030B  07A1               	addwf	(?_Make_Table+1)
  4704  030C  1683               	bsf	status, 5	;RP0=1, select bank1
  4705  030D  1303               	bcf	status, 6	;RP1=0, select bank1
  4706  030E  0861               	movf	(_CurTotNoStep)^080h,w
  4707  030F  1283               	bcf	status, 5	;RP0=0, select bank0
  4708  0310  1303               	bcf	status, 6	;RP1=0, select bank0
  4709  0311  01A0               	clrf	(?_Make_Table)
  4710  0312  07A0               	addwf	(?_Make_Table)
  4711                           
  4712  0313  160A  158A  246B   	fcall	_Make_Table
              120A  118A         
  4713                           	line	140
  4714                           	
  4715  0318                     l3426:	
  4716  0318  0008               	return
  4717                           	opt stack 0
  4718                           GLOBAL	__end_of_Calc_PID_op
  4719  0319                     	__end_of_Calc_PID_op:
  4720 ;; =============== function _Calc_PID_op ends ============
  4721                           
  4722                           	signat	_Calc_PID_op,89
  4723                           	global	_get_Actrpm
  4724                           psect	text1151,local,class=CODE,delta=2
  4725                           global __ptext1151
  4726  08ED                     __ptext1151:
  4727                           
  4728 ;; *************** function _get_Actrpm *****************
  4729 ;; Defined at:
  4730 ;;		line 35 in file "PIDp.c"
  4731 ;; Parameters:    Size  Location     Type
  4732 ;;		None
  4733 ;; Auto vars:     Size  Location     Type
  4734 ;;		None
  4735 ;; Return value:  Size  Location     Type
  4736 ;;		None               void
  4737 ;; Registers used:
  4738 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4739 ;; Tracked objects:
  4740 ;;		On entry : 0/0
  4741 ;;		On exit  : 0/0
  4742 ;;		Unchanged: 0/0
  4743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4744 ;;      Params:         0       0       0       0       0
  4745 ;;      Locals:         0       0       0       0       0
  4746 ;;      Temps:          0       8       0       0       0
  4747 ;;      Totals:         0       8       0       0       0
  4748 ;;Total ram usage:        8 bytes
  4749 ;; Hardware stack levels used:    1
  4750 ;; Hardware stack levels required when called:    4
  4751 ;; This function calls:
  4752 ;;		___lmul
  4753 ;;		___lldiv
  4754 ;;		_USARTWriteChar
  4755 ;;		_USARTWriteInt
  4756 ;;		_USARTWriteString
  4757 ;; This function is called by:
  4758 ;;		_Calc_Err
  4759 ;;		_main
  4760 ;; This function uses a non-reentrant model
  4761 ;;
  4762                           psect	text1151
  4763                           	file	"PIDp.c"
  4764                           	line	35
  4765                           	global	__size_of_get_Actrpm
  4766  0101                     	__size_of_get_Actrpm	equ	__end_of_get_Actrpm-_get_Actrpm
  4767                           	
  4768  08ED                     _get_Actrpm:	
  4769                           	opt	stack 2
  4770                           ; Regs used in _get_Actrpm: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4771                           	line	43
  4772                           	
  4773  08ED                     l11583:	
  4774                           ;PIDp.c: 43: Rpm = ( BoardFreq * NoTeeth ) / Tacho_Reading;
  4775  08ED  1683               	bsf	status, 5	;RP0=1, select bank1
  4776  08EE  1303               	bcf	status, 6	;RP1=0, select bank1
  4777  08EF  0847               	movf	(_Tacho_Reading+3)^080h,w
  4778  08F0  1283               	bcf	status, 5	;RP0=0, select bank0
  4779  08F1  1303               	bcf	status, 6	;RP1=0, select bank0
  4780  08F2  00B0               	movwf	(?___lldiv+3)
  4781  08F3  1683               	bsf	status, 5	;RP0=1, select bank1
  4782  08F4  1303               	bcf	status, 6	;RP1=0, select bank1
  4783  08F5  0846               	movf	(_Tacho_Reading+2)^080h,w
  4784  08F6  1283               	bcf	status, 5	;RP0=0, select bank0
  4785  08F7  1303               	bcf	status, 6	;RP1=0, select bank0
  4786  08F8  00AF               	movwf	(?___lldiv+2)
  4787  08F9  1683               	bsf	status, 5	;RP0=1, select bank1
  4788  08FA  1303               	bcf	status, 6	;RP1=0, select bank1
  4789  08FB  0845               	movf	(_Tacho_Reading+1)^080h,w
  4790  08FC  1283               	bcf	status, 5	;RP0=0, select bank0
  4791  08FD  1303               	bcf	status, 6	;RP1=0, select bank0
  4792  08FE  00AE               	movwf	(?___lldiv+1)
  4793  08FF  1683               	bsf	status, 5	;RP0=1, select bank1
  4794  0900  1303               	bcf	status, 6	;RP1=0, select bank1
  4795  0901  0844               	movf	(_Tacho_Reading)^080h,w
  4796  0902  1283               	bcf	status, 5	;RP0=0, select bank0
  4797  0903  1303               	bcf	status, 6	;RP1=0, select bank0
  4798  0904  00AD               	movwf	(?___lldiv)
  4799                           
  4800  0905  1683               	bsf	status, 5	;RP0=1, select bank1
  4801  0906  1303               	bcf	status, 6	;RP1=0, select bank1
  4802  0907  082B               	movf	(_BoardFreq+3)^080h,w
  4803  0908  1283               	bcf	status, 5	;RP0=0, select bank0
  4804  0909  1303               	bcf	status, 6	;RP1=0, select bank0
  4805  090A  00A3               	movwf	(?___lmul+3)
  4806  090B  1683               	bsf	status, 5	;RP0=1, select bank1
  4807  090C  1303               	bcf	status, 6	;RP1=0, select bank1
  4808  090D  082A               	movf	(_BoardFreq+2)^080h,w
  4809  090E  1283               	bcf	status, 5	;RP0=0, select bank0
  4810  090F  1303               	bcf	status, 6	;RP1=0, select bank0
  4811  0910  00A2               	movwf	(?___lmul+2)
  4812  0911  1683               	bsf	status, 5	;RP0=1, select bank1
  4813  0912  1303               	bcf	status, 6	;RP1=0, select bank1
  4814  0913  0829               	movf	(_BoardFreq+1)^080h,w
  4815  0914  1283               	bcf	status, 5	;RP0=0, select bank0
  4816  0915  1303               	bcf	status, 6	;RP1=0, select bank0
  4817  0916  00A1               	movwf	(?___lmul+1)
  4818  0917  1683               	bsf	status, 5	;RP0=1, select bank1
  4819  0918  1303               	bcf	status, 6	;RP1=0, select bank1
  4820  0919  0828               	movf	(_BoardFreq)^080h,w
  4821  091A  1283               	bcf	status, 5	;RP0=0, select bank0
  4822  091B  1303               	bcf	status, 6	;RP1=0, select bank0
  4823  091C  00A0               	movwf	(?___lmul)
  4824                           
  4825  091D  1683               	bsf	status, 5	;RP0=1, select bank1
  4826  091E  1303               	bcf	status, 6	;RP1=0, select bank1
  4827  091F  083B               	movf	(_NoTeeth+3)^080h,w
  4828  0920  1283               	bcf	status, 5	;RP0=0, select bank0
  4829  0921  1303               	bcf	status, 6	;RP1=0, select bank0
  4830  0922  00A7               	movwf	3+(?___lmul)+04h
  4831  0923  1683               	bsf	status, 5	;RP0=1, select bank1
  4832  0924  1303               	bcf	status, 6	;RP1=0, select bank1
  4833  0925  083A               	movf	(_NoTeeth+2)^080h,w
  4834  0926  1283               	bcf	status, 5	;RP0=0, select bank0
  4835  0927  1303               	bcf	status, 6	;RP1=0, select bank0
  4836  0928  00A6               	movwf	2+(?___lmul)+04h
  4837  0929  1683               	bsf	status, 5	;RP0=1, select bank1
  4838  092A  1303               	bcf	status, 6	;RP1=0, select bank1
  4839  092B  0839               	movf	(_NoTeeth+1)^080h,w
  4840  092C  1283               	bcf	status, 5	;RP0=0, select bank0
  4841  092D  1303               	bcf	status, 6	;RP1=0, select bank0
  4842  092E  00A5               	movwf	1+(?___lmul)+04h
  4843  092F  1683               	bsf	status, 5	;RP0=1, select bank1
  4844  0930  1303               	bcf	status, 6	;RP1=0, select bank1
  4845  0931  0838               	movf	(_NoTeeth)^080h,w
  4846  0932  1283               	bcf	status, 5	;RP0=0, select bank0
  4847  0933  1303               	bcf	status, 6	;RP1=0, select bank0
  4848  0934  00A4               	movwf	0+(?___lmul)+04h
  4849                           
  4850  0935  160A  118A  2010   	fcall	___lmul
              120A  158A         
  4851  093A  1283               	bcf	status, 5	;RP0=0, select bank0
  4852  093B  1303               	bcf	status, 6	;RP1=0, select bank0
  4853  093C  0823               	movf	(3+(?___lmul)),w
  4854  093D  00B4               	movwf	3+(?___lldiv)+04h
  4855  093E  0822               	movf	(2+(?___lmul)),w
  4856  093F  00B3               	movwf	2+(?___lldiv)+04h
  4857  0940  0821               	movf	(1+(?___lmul)),w
  4858  0941  00B2               	movwf	1+(?___lldiv)+04h
  4859  0942  0820               	movf	(0+(?___lmul)),w
  4860  0943  00B1               	movwf	0+(?___lldiv)+04h
  4861                           
  4862  0944  160A  158A  269D   	fcall	___lldiv
              120A  158A         
  4863  0949  1283               	bcf	status, 5	;RP0=0, select bank0
  4864  094A  1303               	bcf	status, 6	;RP1=0, select bank0
  4865  094B  0830               	movf	(3+(?___lldiv)),w
  4866  094C  00E4               	movwf	(_Rpm+3)
  4867  094D  082F               	movf	(2+(?___lldiv)),w
  4868  094E  00E3               	movwf	(_Rpm+2)
  4869  094F  082E               	movf	(1+(?___lldiv)),w
  4870  0950  00E2               	movwf	(_Rpm+1)
  4871  0951  082D               	movf	(0+(?___lldiv)),w
  4872  0952  00E1               	movwf	(_Rpm)
  4873                           
  4874                           	line	44
  4875                           	
  4876  0953                     l11585:	
  4877                           ;PIDp.c: 44: if( ( Rpm > ( SetPoint - DeadBand ) ) && ( Rpm < (SetPoint + DeadBand ) ) )
                                  Rpm = SetPoint;
  4878  0953  1683               	bsf	status, 5	;RP0=1, select bank1
  4879  0954  1303               	bcf	status, 6	;RP1=0, select bank1
  4880  0955  0963               	comf	(_DeadBand)^080h,w
  4881  0956  1283               	bcf	status, 5	;RP0=0, select bank0
  4882  0957  1303               	bcf	status, 6	;RP1=0, select bank0
  4883  0958  00C1               	movwf	(??_get_Actrpm+0)+0
  4884  0959  1683               	bsf	status, 5	;RP0=1, select bank1
  4885  095A  1303               	bcf	status, 6	;RP1=0, select bank1
  4886  095B  0964               	comf	(_DeadBand+1)^080h,w
  4887  095C  1283               	bcf	status, 5	;RP0=0, select bank0
  4888  095D  1303               	bcf	status, 6	;RP1=0, select bank0
  4889  095E  00C2               	movwf	((??_get_Actrpm+0)+0+1)
  4890  095F  0AC1               	incf	(??_get_Actrpm+0)+0,f
  4891  0960  1903               	skipnz
  4892  0961  0AC2               	incf	((??_get_Actrpm+0)+0+1),f
  4893  0962  0868               	movf	(_SetPoint),w
  4894  0963  0741               	addwf	0+(??_get_Actrpm+0)+0,w
  4895  0964  00C3               	movwf	(??_get_Actrpm+2)+0
  4896  0965  0869               	movf	(_SetPoint+1),w
  4897  0966  1803               	skipnc
  4898  0967  0A69               	incf	(_SetPoint+1),w
  4899  0968  0742               	addwf	1+(??_get_Actrpm+0)+0,w
  4900  0969  00C4               	movwf	1+(??_get_Actrpm+2)+0
  4901  096A  0843               	movf	0+(??_get_Actrpm+2)+0,w
  4902  096B  00C5               	movwf	((??_get_Actrpm+4)+0)
  4903  096C  0844               	movf	1+(??_get_Actrpm+2)+0,w
  4904  096D  00C6               	movwf	((??_get_Actrpm+4)+0+1)
  4905  096E  01C7               	clrf	((??_get_Actrpm+4)+0+2)
  4906  096F  01C8               	clrf	((??_get_Actrpm+4)+0+3)
  4907  0970  0864               	movf	(_Rpm+3),w
  4908  0971  0248               	subwf	3+(??_get_Actrpm+4)+0,w
  4909  0972  1D03               	skipz
  4910  0973  297E               	goto	u4645
  4911  0974  0863               	movf	(_Rpm+2),w
  4912  0975  0247               	subwf	2+(??_get_Actrpm+4)+0,w
  4913  0976  1D03               	skipz
  4914  0977  297E               	goto	u4645
  4915  0978  0862               	movf	(_Rpm+1),w
  4916  0979  0246               	subwf	1+(??_get_Actrpm+4)+0,w
  4917  097A  1D03               	skipz
  4918  097B  297E               	goto	u4645
  4919  097C  0861               	movf	(_Rpm),w
  4920  097D  0245               	subwf	0+(??_get_Actrpm+4)+0,w
  4921  097E                     u4645:
  4922  097E  1803               	skipnc
  4923  097F  2981               	goto	u4641
  4924  0980  2982               	goto	u4640
  4925  0981                     u4641:
  4926  0981  29B0               	goto	l3404
  4927  0982                     u4640:
  4928                           	
  4929  0982                     l11587:	
  4930  0982  1683               	bsf	status, 5	;RP0=1, select bank1
  4931  0983  1303               	bcf	status, 6	;RP1=0, select bank1
  4932  0984  0863               	movf	(_DeadBand)^080h,w
  4933  0985  1283               	bcf	status, 5	;RP0=0, select bank0
  4934  0986  1303               	bcf	status, 6	;RP1=0, select bank0
  4935  0987  0768               	addwf	(_SetPoint),w
  4936  0988  00C1               	movwf	(??_get_Actrpm+0)+0
  4937  0989  1683               	bsf	status, 5	;RP0=1, select bank1
  4938  098A  1303               	bcf	status, 6	;RP1=0, select bank1
  4939  098B  0864               	movf	(_DeadBand+1)^080h,w
  4940  098C  1803               	skipnc
  4941  098D  0A64               	incf	(_DeadBand+1)^080h,w
  4942  098E  1283               	bcf	status, 5	;RP0=0, select bank0
  4943  098F  1303               	bcf	status, 6	;RP1=0, select bank0
  4944  0990  0769               	addwf	(_SetPoint+1),w
  4945  0991  00C2               	movwf	1+(??_get_Actrpm+0)+0
  4946  0992  0841               	movf	0+(??_get_Actrpm+0)+0,w
  4947  0993  00C3               	movwf	((??_get_Actrpm+2)+0)
  4948  0994  0842               	movf	1+(??_get_Actrpm+0)+0,w
  4949  0995  00C4               	movwf	((??_get_Actrpm+2)+0+1)
  4950  0996  01C5               	clrf	((??_get_Actrpm+2)+0+2)
  4951  0997  01C6               	clrf	((??_get_Actrpm+2)+0+3)
  4952  0998  0846               	movf	3+(??_get_Actrpm+2)+0,w
  4953  0999  0264               	subwf	(_Rpm+3),w
  4954  099A  1D03               	skipz
  4955  099B  29A6               	goto	u4655
  4956  099C  0845               	movf	2+(??_get_Actrpm+2)+0,w
  4957  099D  0263               	subwf	(_Rpm+2),w
  4958  099E  1D03               	skipz
  4959  099F  29A6               	goto	u4655
  4960  09A0  0844               	movf	1+(??_get_Actrpm+2)+0,w
  4961  09A1  0262               	subwf	(_Rpm+1),w
  4962  09A2  1D03               	skipz
  4963  09A3  29A6               	goto	u4655
  4964  09A4  0843               	movf	0+(??_get_Actrpm+2)+0,w
  4965  09A5  0261               	subwf	(_Rpm),w
  4966  09A6                     u4655:
  4967  09A6  1803               	skipnc
  4968  09A7  29A9               	goto	u4651
  4969  09A8  29AA               	goto	u4650
  4970  09A9                     u4651:
  4971  09A9  29B0               	goto	l3404
  4972  09AA                     u4650:
  4973                           	
  4974  09AA                     l11589:	
  4975  09AA  0868               	movf	(_SetPoint),w
  4976  09AB  00E1               	movwf	(_Rpm)
  4977  09AC  0869               	movf	(_SetPoint+1),w
  4978  09AD  00E2               	movwf	((_Rpm))+1
  4979  09AE  01E3               	clrf	2+((_Rpm))
  4980  09AF  01E4               	clrf	3+((_Rpm))
  4981                           	
  4982  09B0                     l3404:	
  4983                           	line	46
  4984                           ;PIDp.c: 46: if(Rpm > 100) Crankflg = 1;
  4985  09B0  3000               	movlw	0
  4986  09B1  0264               	subwf	(_Rpm+3),w
  4987  09B2  1D03               	skipz
  4988  09B3  29BE               	goto	u4665
  4989  09B4  3000               	movlw	0
  4990  09B5  0263               	subwf	(_Rpm+2),w
  4991  09B6  1D03               	skipz
  4992  09B7  29BE               	goto	u4665
  4993  09B8  3000               	movlw	0
  4994  09B9  0262               	subwf	(_Rpm+1),w
  4995  09BA  1D03               	skipz
  4996  09BB  29BE               	goto	u4665
  4997  09BC  3065               	movlw	065h
  4998  09BD  0261               	subwf	(_Rpm),w
  4999  09BE                     u4665:
  5000  09BE  1C03               	skipc
  5001  09BF  29C1               	goto	u4661
  5002  09C0  29C2               	goto	u4660
  5003  09C1                     u4661:
  5004  09C1  29C8               	goto	l11593
  5005  09C2                     u4660:
  5006                           	
  5007  09C2                     l11591:	
  5008  09C2  1683               	bsf	status, 5	;RP0=1, select bank1
  5009  09C3  1303               	bcf	status, 6	;RP1=0, select bank1
  5010  09C4  01EB               	clrf	(_Crankflg)^080h
  5011  09C5  1403               	bsf	status,0
  5012  09C6  0DEB               	rlf	(_Crankflg)^080h,f
  5013  09C7  29C8               	goto	l11593
  5014                           	
  5015  09C8                     l3405:	
  5016                           	line	48
  5017                           	
  5018  09C8                     l11593:	
  5019                           ;PIDp.c: 48: Tacho_Reading = 0x7fffffff;
  5020  09C8  307F               	movlw	07Fh
  5021  09C9  1683               	bsf	status, 5	;RP0=1, select bank1
  5022  09CA  1303               	bcf	status, 6	;RP1=0, select bank1
  5023  09CB  00C7               	movwf	(_Tacho_Reading+3)^080h
  5024  09CC  30FF               	movlw	0FFh
  5025  09CD  00C6               	movwf	(_Tacho_Reading+2)^080h
  5026  09CE  30FF               	movlw	0FFh
  5027  09CF  00C5               	movwf	(_Tacho_Reading+1)^080h
  5028  09D0  30FF               	movlw	0FFh
  5029  09D1  00C4               	movwf	(_Tacho_Reading)^080h
  5030                           
  5031                           	line	51
  5032                           	
  5033  09D2                     l11595:	
  5034                           ;PIDp.c: 51: USARTWriteChar('X');USARTWriteInt(Rpm);USARTWriteString(strnw);
  5035  09D2  3058               	movlw	(058h)
  5036  09D3  160A  118A  2000   	fcall	_USARTWriteChar
              120A  158A         
  5037                           	
  5038  09D8                     l11597:	
  5039  09D8  1283               	bcf	status, 5	;RP0=0, select bank0
  5040  09D9  1303               	bcf	status, 6	;RP1=0, select bank0
  5041  09DA  0864               	movf	(_Rpm+3),w
  5042  09DB  00B2               	movwf	(?_USARTWriteInt+3)
  5043  09DC  0863               	movf	(_Rpm+2),w
  5044  09DD  00B1               	movwf	(?_USARTWriteInt+2)
  5045  09DE  0862               	movf	(_Rpm+1),w
  5046  09DF  00B0               	movwf	(?_USARTWriteInt+1)
  5047  09E0  0861               	movf	(_Rpm),w
  5048  09E1  00AF               	movwf	(?_USARTWriteInt)
  5049                           
  5050  09E2  160A  118A  247D   	fcall	_USARTWriteInt
              120A  158A         
  5051                           	
  5052  09E7                     l11599:	
  5053  09E7  3002               	movlw	((_strnw-__stringbase))&0ffh
  5054  09E8  160A  158A  2390   	fcall	_USARTWriteString
              120A  158A         
  5055                           	line	53
  5056                           	
  5057  09ED                     l3406:	
  5058  09ED  0008               	return
  5059                           	opt stack 0
  5060                           GLOBAL	__end_of_get_Actrpm
  5061  09EE                     	__end_of_get_Actrpm:
  5062 ;; =============== function _get_Actrpm ends ============
  5063                           
  5064                           	signat	_get_Actrpm,88
  5065                           	global	_Calc_SetPoint
  5066                           psect	text1152,local,class=CODE,delta=2
  5067                           global __ptext1152
  5068  0C06                     __ptext1152:
  5069                           
  5070 ;; *************** function _Calc_SetPoint *****************
  5071 ;; Defined at:
  5072 ;;		line 19 in file "PIDp.c"
  5073 ;; Parameters:    Size  Location     Type
  5074 ;;		None
  5075 ;; Auto vars:     Size  Location     Type
  5076 ;;  temp            4   41[BANK0 ] unsigned long 
  5077 ;; Return value:  Size  Location     Type
  5078 ;;		None               void
  5079 ;; Registers used:
  5080 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5081 ;; Tracked objects:
  5082 ;;		On entry : 0/0
  5083 ;;		On exit  : 0/0
  5084 ;;		Unchanged: 0/0
  5085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5086 ;;      Params:         0       0       0       0       0
  5087 ;;      Locals:         0       4       0       0       0
  5088 ;;      Temps:          0       8       0       0       0
  5089 ;;      Totals:         0      12       0       0       0
  5090 ;;Total ram usage:       12 bytes
  5091 ;; Hardware stack levels used:    1
  5092 ;; Hardware stack levels required when called:    4
  5093 ;; This function calls:
  5094 ;;		_Get_ADC_Count
  5095 ;;		___lmul
  5096 ;;		___lldiv
  5097 ;;		_USARTWriteChar
  5098 ;;		_USARTWriteInt
  5099 ;;		_USARTWriteString
  5100 ;; This function is called by:
  5101 ;;		_Calc_Err
  5102 ;;		_main
  5103 ;; This function uses a non-reentrant model
  5104 ;;
  5105                           psect	text1152
  5106                           	file	"PIDp.c"
  5107                           	line	19
  5108                           	global	__size_of_Calc_SetPoint
  5109  012F                     	__size_of_Calc_SetPoint	equ	__end_of_Calc_SetPoint-_Calc_SetPoint
  5110                           	
  5111  0C06                     _Calc_SetPoint:	
  5112                           	opt	stack 2
  5113                           ; Regs used in _Calc_SetPoint: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5114                           	line	21
  5115                           	
  5116  0C06                     l11563:	
  5117                           ;PIDp.c: 20: unsigned long temp;
  5118                           ;PIDp.c: 21: Get_ADC_Count();
  5119  0C06  160A  158A  250D   	fcall	_Get_ADC_Count
              120A  158A         
  5120                           	line	22
  5121                           	
  5122  0C0B                     l11565:	
  5123                           ;PIDp.c: 22: temp = ADC_Count;
  5124  0C0B  1683               	bsf	status, 5	;RP0=1, select bank1
  5125  0C0C  1303               	bcf	status, 6	;RP1=0, select bank1
  5126  0C0D  085B               	movf	(_ADC_Count)^080h,w
  5127  0C0E  1283               	bcf	status, 5	;RP0=0, select bank0
  5128  0C0F  1303               	bcf	status, 6	;RP1=0, select bank0
  5129  0C10  00C9               	movwf	(Calc_SetPoint@temp)
  5130  0C11  1683               	bsf	status, 5	;RP0=1, select bank1
  5131  0C12  1303               	bcf	status, 6	;RP1=0, select bank1
  5132  0C13  085C               	movf	(_ADC_Count+1)^080h,w
  5133  0C14  1283               	bcf	status, 5	;RP0=0, select bank0
  5134  0C15  1303               	bcf	status, 6	;RP1=0, select bank0
  5135  0C16  00CA               	movwf	((Calc_SetPoint@temp))+1
  5136  0C17  01CB               	clrf	2+((Calc_SetPoint@temp))
  5137  0C18  01CC               	clrf	3+((Calc_SetPoint@temp))
  5138                           	line	23
  5139                           	
  5140  0C19                     l11567:	
  5141                           ;PIDp.c: 23: temp *= (SCurVal - ZCurVal);
  5142  0C19  1683               	bsf	status, 5	;RP0=1, select bank1
  5143  0C1A  1303               	bcf	status, 6	;RP1=0, select bank1
  5144  0C1B  0840               	movf	(_SCurVal)^080h,w
  5145  0C1C  1283               	bcf	status, 5	;RP0=0, select bank0
  5146  0C1D  1303               	bcf	status, 6	;RP1=0, select bank0
  5147  0C1E  00C1               	movwf	(??_Calc_SetPoint+0)+0
  5148  0C1F  1683               	bsf	status, 5	;RP0=1, select bank1
  5149  0C20  1303               	bcf	status, 6	;RP1=0, select bank1
  5150  0C21  0841               	movf	(_SCurVal+1)^080h,w
  5151  0C22  1283               	bcf	status, 5	;RP0=0, select bank0
  5152  0C23  1303               	bcf	status, 6	;RP1=0, select bank0
  5153  0C24  00C2               	movwf	((??_Calc_SetPoint+0)+0+1)
  5154  0C25  1683               	bsf	status, 5	;RP0=1, select bank1
  5155  0C26  1303               	bcf	status, 6	;RP1=0, select bank1
  5156  0C27  0842               	movf	(_SCurVal+2)^080h,w
  5157  0C28  1283               	bcf	status, 5	;RP0=0, select bank0
  5158  0C29  1303               	bcf	status, 6	;RP1=0, select bank0
  5159  0C2A  00C3               	movwf	((??_Calc_SetPoint+0)+0+2)
  5160  0C2B  1683               	bsf	status, 5	;RP0=1, select bank1
  5161  0C2C  1303               	bcf	status, 6	;RP1=0, select bank1
  5162  0C2D  0843               	movf	(_SCurVal+3)^080h,w
  5163  0C2E  1283               	bcf	status, 5	;RP0=0, select bank0
  5164  0C2F  1303               	bcf	status, 6	;RP1=0, select bank0
  5165  0C30  00C4               	movwf	((??_Calc_SetPoint+0)+0+3)
  5166  0C31  1683               	bsf	status, 5	;RP0=1, select bank1
  5167  0C32  1303               	bcf	status, 6	;RP1=0, select bank1
  5168  0C33  0948               	comf	(_ZCurVal)^080h,w
  5169  0C34  1283               	bcf	status, 5	;RP0=0, select bank0
  5170  0C35  1303               	bcf	status, 6	;RP1=0, select bank0
  5171  0C36  00C5               	movwf	(??_Calc_SetPoint+4)+0
  5172  0C37  1683               	bsf	status, 5	;RP0=1, select bank1
  5173  0C38  1303               	bcf	status, 6	;RP1=0, select bank1
  5174  0C39  0949               	comf	(_ZCurVal+1)^080h,w
  5175  0C3A  1283               	bcf	status, 5	;RP0=0, select bank0
  5176  0C3B  1303               	bcf	status, 6	;RP1=0, select bank0
  5177  0C3C  00C6               	movwf	((??_Calc_SetPoint+4)+0+1)
  5178  0C3D  1683               	bsf	status, 5	;RP0=1, select bank1
  5179  0C3E  1303               	bcf	status, 6	;RP1=0, select bank1
  5180  0C3F  094A               	comf	(_ZCurVal+2)^080h,w
  5181  0C40  1283               	bcf	status, 5	;RP0=0, select bank0
  5182  0C41  1303               	bcf	status, 6	;RP1=0, select bank0
  5183  0C42  00C7               	movwf	((??_Calc_SetPoint+4)+0+2)
  5184  0C43  1683               	bsf	status, 5	;RP0=1, select bank1
  5185  0C44  1303               	bcf	status, 6	;RP1=0, select bank1
  5186  0C45  094B               	comf	(_ZCurVal+3)^080h,w
  5187  0C46  1283               	bcf	status, 5	;RP0=0, select bank0
  5188  0C47  1303               	bcf	status, 6	;RP1=0, select bank0
  5189  0C48  00C8               	movwf	((??_Calc_SetPoint+4)+0+3)
  5190  0C49  0AC5               	incf	(??_Calc_SetPoint+4)+0,f
  5191  0C4A  1903               	skipnz
  5192  0C4B  0AC6               	incf	((??_Calc_SetPoint+4)+0+1),f
  5193  0C4C  1903               	skipnz
  5194  0C4D  0AC7               	incf	((??_Calc_SetPoint+4)+0+2),f
  5195  0C4E  1903               	skipnz
  5196  0C4F  0AC8               	incf	((??_Calc_SetPoint+4)+0+3),f
  5197  0C50  0845               	movf	0+(??_Calc_SetPoint+4)+0,w
  5198  0C51  07C1               	addwf	(??_Calc_SetPoint+0)+0,f
  5199  0C52  0846               	movf	1+(??_Calc_SetPoint+4)+0,w
  5200  0C53  1803               	skipnc
  5201  0C54  0F46               	incfsz	1+(??_Calc_SetPoint+4)+0,w
  5202  0C55  2C57               	goto	u4620
  5203  0C56  2C58               	goto	u4621
  5204  0C57                     u4620:
  5205  0C57  07C2               	addwf	(??_Calc_SetPoint+0)+1,f
  5206  0C58                     u4621:
  5207  0C58  0847               	movf	2+(??_Calc_SetPoint+4)+0,w
  5208  0C59  1803               	skipnc
  5209  0C5A  0F47               	incfsz	2+(??_Calc_SetPoint+4)+0,w
  5210  0C5B  2C5D               	goto	u4622
  5211  0C5C  2C5E               	goto	u4623
  5212  0C5D                     u4622:
  5213  0C5D  07C3               	addwf	(??_Calc_SetPoint+0)+2,f
  5214  0C5E                     u4623:
  5215  0C5E  0848               	movf	3+(??_Calc_SetPoint+4)+0,w
  5216  0C5F  1803               	skipnc
  5217  0C60  0A48               	incf	3+(??_Calc_SetPoint+4)+0,w
  5218  0C61  07C4               	addwf	(??_Calc_SetPoint+0)+3,f
  5219  0C62  0844               	movf	3+(??_Calc_SetPoint+0)+0,w
  5220  0C63  00A3               	movwf	(?___lmul+3)
  5221  0C64  0843               	movf	2+(??_Calc_SetPoint+0)+0,w
  5222  0C65  00A2               	movwf	(?___lmul+2)
  5223  0C66  0842               	movf	1+(??_Calc_SetPoint+0)+0,w
  5224  0C67  00A1               	movwf	(?___lmul+1)
  5225  0C68  0841               	movf	0+(??_Calc_SetPoint+0)+0,w
  5226  0C69  00A0               	movwf	(?___lmul)
  5227                           
  5228  0C6A  084C               	movf	(Calc_SetPoint@temp+3),w
  5229  0C6B  00A7               	movwf	3+(?___lmul)+04h
  5230  0C6C  084B               	movf	(Calc_SetPoint@temp+2),w
  5231  0C6D  00A6               	movwf	2+(?___lmul)+04h
  5232  0C6E  084A               	movf	(Calc_SetPoint@temp+1),w
  5233  0C6F  00A5               	movwf	1+(?___lmul)+04h
  5234  0C70  0849               	movf	(Calc_SetPoint@temp),w
  5235  0C71  00A4               	movwf	0+(?___lmul)+04h
  5236                           
  5237  0C72  160A  118A  2010   	fcall	___lmul
              120A  158A         
  5238  0C77  1283               	bcf	status, 5	;RP0=0, select bank0
  5239  0C78  1303               	bcf	status, 6	;RP1=0, select bank0
  5240  0C79  0823               	movf	(3+(?___lmul)),w
  5241  0C7A  00CC               	movwf	(Calc_SetPoint@temp+3)
  5242  0C7B  0822               	movf	(2+(?___lmul)),w
  5243  0C7C  00CB               	movwf	(Calc_SetPoint@temp+2)
  5244  0C7D  0821               	movf	(1+(?___lmul)),w
  5245  0C7E  00CA               	movwf	(Calc_SetPoint@temp+1)
  5246  0C7F  0820               	movf	(0+(?___lmul)),w
  5247  0C80  00C9               	movwf	(Calc_SetPoint@temp)
  5248                           
  5249                           	line	24
  5250                           	
  5251  0C81                     l11569:	
  5252                           ;PIDp.c: 24: temp /= 1023;
  5253  0C81  3000               	movlw	0
  5254  0C82  00B0               	movwf	(?___lldiv+3)
  5255  0C83  3000               	movlw	0
  5256  0C84  00AF               	movwf	(?___lldiv+2)
  5257  0C85  3003               	movlw	03h
  5258  0C86  00AE               	movwf	(?___lldiv+1)
  5259  0C87  30FF               	movlw	0FFh
  5260  0C88  00AD               	movwf	(?___lldiv)
  5261                           
  5262  0C89  084C               	movf	(Calc_SetPoint@temp+3),w
  5263  0C8A  00B4               	movwf	3+(?___lldiv)+04h
  5264  0C8B  084B               	movf	(Calc_SetPoint@temp+2),w
  5265  0C8C  00B3               	movwf	2+(?___lldiv)+04h
  5266  0C8D  084A               	movf	(Calc_SetPoint@temp+1),w
  5267  0C8E  00B2               	movwf	1+(?___lldiv)+04h
  5268  0C8F  0849               	movf	(Calc_SetPoint@temp),w
  5269  0C90  00B1               	movwf	0+(?___lldiv)+04h
  5270                           
  5271  0C91  160A  158A  269D   	fcall	___lldiv
              120A  158A         
  5272  0C96  1283               	bcf	status, 5	;RP0=0, select bank0
  5273  0C97  1303               	bcf	status, 6	;RP1=0, select bank0
  5274  0C98  0830               	movf	(3+(?___lldiv)),w
  5275  0C99  00CC               	movwf	(Calc_SetPoint@temp+3)
  5276  0C9A  082F               	movf	(2+(?___lldiv)),w
  5277  0C9B  00CB               	movwf	(Calc_SetPoint@temp+2)
  5278  0C9C  082E               	movf	(1+(?___lldiv)),w
  5279  0C9D  00CA               	movwf	(Calc_SetPoint@temp+1)
  5280  0C9E  082D               	movf	(0+(?___lldiv)),w
  5281  0C9F  00C9               	movwf	(Calc_SetPoint@temp)
  5282                           
  5283                           	line	25
  5284                           	
  5285  0CA0                     l11571:	
  5286                           ;PIDp.c: 25: temp += ZCurVal;
  5287  0CA0  1683               	bsf	status, 5	;RP0=1, select bank1
  5288  0CA1  1303               	bcf	status, 6	;RP1=0, select bank1
  5289  0CA2  0848               	movf	(_ZCurVal)^080h,w
  5290  0CA3  1283               	bcf	status, 5	;RP0=0, select bank0
  5291  0CA4  1303               	bcf	status, 6	;RP1=0, select bank0
  5292  0CA5  07C9               	addwf	(Calc_SetPoint@temp),f
  5293  0CA6  1683               	bsf	status, 5	;RP0=1, select bank1
  5294  0CA7  1303               	bcf	status, 6	;RP1=0, select bank1
  5295  0CA8  0849               	movf	(_ZCurVal+1)^080h,w
  5296  0CA9  1103               	clrz
  5297  0CAA  1803               	skipnc
  5298  0CAB  3E01               	addlw	1
  5299  0CAC  1903               	skipnz
  5300  0CAD  2CB1               	goto	u4631
  5301  0CAE  1283               	bcf	status, 5	;RP0=0, select bank0
  5302  0CAF  1303               	bcf	status, 6	;RP1=0, select bank0
  5303  0CB0  07CA               	addwf	(Calc_SetPoint@temp+1),f
  5304  0CB1                     u4631:
  5305  0CB1  1683               	bsf	status, 5	;RP0=1, select bank1
  5306  0CB2  1303               	bcf	status, 6	;RP1=0, select bank1
  5307  0CB3  084A               	movf	(_ZCurVal+2)^080h,w
  5308  0CB4  1103               	clrz
  5309  0CB5  1803               	skipnc
  5310  0CB6  3E01               	addlw	1
  5311  0CB7  1903               	skipnz
  5312  0CB8  2CBC               	goto	u4632
  5313  0CB9  1283               	bcf	status, 5	;RP0=0, select bank0
  5314  0CBA  1303               	bcf	status, 6	;RP1=0, select bank0
  5315  0CBB  07CB               	addwf	(Calc_SetPoint@temp+2),f
  5316  0CBC                     u4632:
  5317  0CBC  1683               	bsf	status, 5	;RP0=1, select bank1
  5318  0CBD  1303               	bcf	status, 6	;RP1=0, select bank1
  5319  0CBE  084B               	movf	(_ZCurVal+3)^080h,w
  5320  0CBF  1103               	clrz
  5321  0CC0  1803               	skipnc
  5322  0CC1  3E01               	addlw	1
  5323  0CC2  1903               	skipnz
  5324  0CC3  2CC7               	goto	u4633
  5325  0CC4  1283               	bcf	status, 5	;RP0=0, select bank0
  5326  0CC5  1303               	bcf	status, 6	;RP1=0, select bank0
  5327  0CC6  07CC               	addwf	(Calc_SetPoint@temp+3),f
  5328  0CC7                     u4633:
  5329  0CC7  1683               	bsf	status, 5	;RP0=1, select bank1
  5330  0CC8  1303               	bcf	status, 6	;RP1=0, select bank1
  5331  0CC9  1283               	bcf	status, 5	;RP0=0, select bank0
  5332  0CCA  1303               	bcf	status, 6	;RP1=0, select bank0
  5333                           
  5334                           	line	26
  5335                           	
  5336  0CCB                     l11573:	
  5337                           ;PIDp.c: 26: SetPoint = temp;
  5338  0CCB  084A               	movf	(Calc_SetPoint@temp+1),w
  5339  0CCC  01E9               	clrf	(_SetPoint+1)
  5340  0CCD  07E9               	addwf	(_SetPoint+1)
  5341  0CCE  0849               	movf	(Calc_SetPoint@temp),w
  5342  0CCF  01E8               	clrf	(_SetPoint)
  5343  0CD0  07E8               	addwf	(_SetPoint)
  5344                           
  5345                           	line	29
  5346                           	
  5347  0CD1                     l11575:	
  5348                           ;PIDp.c: 29: USARTWriteChar('W');USARTWriteInt(SetPoint);USARTWriteString(strnw);
  5349  0CD1  3057               	movlw	(057h)
  5350  0CD2  160A  118A  2000   	fcall	_USARTWriteChar
              120A  158A         
  5351                           	
  5352  0CD7                     l11577:	
  5353  0CD7  1283               	bcf	status, 5	;RP0=0, select bank0
  5354  0CD8  1303               	bcf	status, 6	;RP1=0, select bank0
  5355  0CD9  0868               	movf	(_SetPoint),w
  5356  0CDA  00AF               	movwf	(?_USARTWriteInt)
  5357  0CDB  0869               	movf	(_SetPoint+1),w
  5358  0CDC  00B0               	movwf	((?_USARTWriteInt))+1
  5359  0CDD  01B1               	clrf	2+((?_USARTWriteInt))
  5360  0CDE  01B2               	clrf	3+((?_USARTWriteInt))
  5361  0CDF  160A  118A  247D   	fcall	_USARTWriteInt
              120A  158A         
  5362                           	
  5363  0CE4                     l11579:	
  5364  0CE4  3002               	movlw	((_strnw-__stringbase))&0ffh
  5365  0CE5  160A  158A  2390   	fcall	_USARTWriteString
              120A  158A         
  5366                           	line	31
  5367                           	
  5368  0CEA                     l11581:	
  5369                           ;PIDp.c: 31: DeadBand = ( BCurVal * SetPoint ) / 1000L;
  5370  0CEA  3000               	movlw	0
  5371  0CEB  1283               	bcf	status, 5	;RP0=0, select bank0
  5372  0CEC  1303               	bcf	status, 6	;RP1=0, select bank0
  5373  0CED  00B0               	movwf	(?___lldiv+3)
  5374  0CEE  3000               	movlw	0
  5375  0CEF  00AF               	movwf	(?___lldiv+2)
  5376  0CF0  3003               	movlw	03h
  5377  0CF1  00AE               	movwf	(?___lldiv+1)
  5378  0CF2  30E8               	movlw	0E8h
  5379  0CF3  00AD               	movwf	(?___lldiv)
  5380                           
  5381  0CF4  0868               	movf	(_SetPoint),w
  5382  0CF5  00A0               	movwf	(?___lmul)
  5383  0CF6  0869               	movf	(_SetPoint+1),w
  5384  0CF7  00A1               	movwf	((?___lmul))+1
  5385  0CF8  01A2               	clrf	2+((?___lmul))
  5386  0CF9  01A3               	clrf	3+((?___lmul))
  5387  0CFA  1683               	bsf	status, 5	;RP0=1, select bank1
  5388  0CFB  1303               	bcf	status, 6	;RP1=0, select bank1
  5389  0CFC  0827               	movf	(_BCurVal+3)^080h,w
  5390  0CFD  1283               	bcf	status, 5	;RP0=0, select bank0
  5391  0CFE  1303               	bcf	status, 6	;RP1=0, select bank0
  5392  0CFF  00A7               	movwf	3+(?___lmul)+04h
  5393  0D00  1683               	bsf	status, 5	;RP0=1, select bank1
  5394  0D01  1303               	bcf	status, 6	;RP1=0, select bank1
  5395  0D02  0826               	movf	(_BCurVal+2)^080h,w
  5396  0D03  1283               	bcf	status, 5	;RP0=0, select bank0
  5397  0D04  1303               	bcf	status, 6	;RP1=0, select bank0
  5398  0D05  00A6               	movwf	2+(?___lmul)+04h
  5399  0D06  1683               	bsf	status, 5	;RP0=1, select bank1
  5400  0D07  1303               	bcf	status, 6	;RP1=0, select bank1
  5401  0D08  0825               	movf	(_BCurVal+1)^080h,w
  5402  0D09  1283               	bcf	status, 5	;RP0=0, select bank0
  5403  0D0A  1303               	bcf	status, 6	;RP1=0, select bank0
  5404  0D0B  00A5               	movwf	1+(?___lmul)+04h
  5405  0D0C  1683               	bsf	status, 5	;RP0=1, select bank1
  5406  0D0D  1303               	bcf	status, 6	;RP1=0, select bank1
  5407  0D0E  0824               	movf	(_BCurVal)^080h,w
  5408  0D0F  1283               	bcf	status, 5	;RP0=0, select bank0
  5409  0D10  1303               	bcf	status, 6	;RP1=0, select bank0
  5410  0D11  00A4               	movwf	0+(?___lmul)+04h
  5411                           
  5412  0D12  160A  118A  2010   	fcall	___lmul
              120A  158A         
  5413  0D17  1283               	bcf	status, 5	;RP0=0, select bank0
  5414  0D18  1303               	bcf	status, 6	;RP1=0, select bank0
  5415  0D19  0823               	movf	(3+(?___lmul)),w
  5416  0D1A  00B4               	movwf	3+(?___lldiv)+04h
  5417  0D1B  0822               	movf	(2+(?___lmul)),w
  5418  0D1C  00B3               	movwf	2+(?___lldiv)+04h
  5419  0D1D  0821               	movf	(1+(?___lmul)),w
  5420  0D1E  00B2               	movwf	1+(?___lldiv)+04h
  5421  0D1F  0820               	movf	(0+(?___lmul)),w
  5422  0D20  00B1               	movwf	0+(?___lldiv)+04h
  5423                           
  5424  0D21  160A  158A  269D   	fcall	___lldiv
              120A  158A         
  5425  0D26  1283               	bcf	status, 5	;RP0=0, select bank0
  5426  0D27  1303               	bcf	status, 6	;RP1=0, select bank0
  5427  0D28  082E               	movf	1+(((0+(?___lldiv)))),w
  5428  0D29  1683               	bsf	status, 5	;RP0=1, select bank1
  5429  0D2A  1303               	bcf	status, 6	;RP1=0, select bank1
  5430  0D2B  01E4               	clrf	(_DeadBand+1)^080h
  5431  0D2C  07E4               	addwf	(_DeadBand+1)^080h
  5432  0D2D  1283               	bcf	status, 5	;RP0=0, select bank0
  5433  0D2E  1303               	bcf	status, 6	;RP1=0, select bank0
  5434  0D2F  082D               	movf	0+(((0+(?___lldiv)))),w
  5435  0D30  1683               	bsf	status, 5	;RP0=1, select bank1
  5436  0D31  1303               	bcf	status, 6	;RP1=0, select bank1
  5437  0D32  01E3               	clrf	(_DeadBand)^080h
  5438  0D33  07E3               	addwf	(_DeadBand)^080h
  5439                           
  5440                           	line	32
  5441                           	
  5442  0D34                     l3401:	
  5443  0D34  0008               	return
  5444                           	opt stack 0
  5445                           GLOBAL	__end_of_Calc_SetPoint
  5446  0D35                     	__end_of_Calc_SetPoint:
  5447 ;; =============== function _Calc_SetPoint ends ============
  5448                           
  5449                           	signat	_Calc_SetPoint,88
  5450                           	global	_Calc_PID_const
  5451                           psect	text1153,local,class=CODE,delta=2
  5452                           global __ptext1153
  5453  0E7B                     __ptext1153:
  5454                           
  5455 ;; *************** function _Calc_PID_const *****************
  5456 ;; Defined at:
  5457 ;;		line 4 in file "PIDp.c"
  5458 ;; Parameters:    Size  Location     Type
  5459 ;;		None
  5460 ;; Auto vars:     Size  Location     Type
  5461 ;;  Td1             3   57[BANK0 ] float 
  5462 ;;  Ti1             3   51[BANK0 ] float 
  5463 ;; Return value:  Size  Location     Type
  5464 ;;		None               void
  5465 ;; Registers used:
  5466 ;;		wreg, status,2, status,0, pclath, cstack
  5467 ;; Tracked objects:
  5468 ;;		On entry : 0/0
  5469 ;;		On exit  : 0/0
  5470 ;;		Unchanged: 0/0
  5471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5472 ;;      Params:         0       0       0       0       0
  5473 ;;      Locals:         0       9       0       0       0
  5474 ;;      Temps:          0       0       0       0       0
  5475 ;;      Totals:         0       9       0       0       0
  5476 ;;Total ram usage:        9 bytes
  5477 ;; Hardware stack levels used:    1
  5478 ;; Hardware stack levels required when called:    4
  5479 ;; This function calls:
  5480 ;;		___ftdiv
  5481 ;;		___lltoft
  5482 ;;		___ftmul
  5483 ;;		___ftadd
  5484 ;;		___ftneg
  5485 ;; This function is called by:
  5486 ;;		_initall
  5487 ;; This function uses a non-reentrant model
  5488 ;;
  5489                           psect	text1153
  5490                           	file	"PIDp.c"
  5491                           	line	4
  5492                           	global	__size_of_Calc_PID_const
  5493  0185                     	__size_of_Calc_PID_const	equ	__end_of_Calc_PID_const-_Calc_PID_const
  5494                           	
  5495  0E7B                     _Calc_PID_const:	
  5496                           	opt	stack 2
  5497                           ; Regs used in _Calc_PID_const: [wreg+status,2+status,0+pclath+cstack]
  5498                           	line	7
  5499                           	
  5500  0E7B                     l11559:	
  5501                           ;PIDp.c: 5: float Td1, Ti1;
  5502                           ;PIDp.c: 7: Td1 = Td/100.0;
  5503  0E7B  3000               	movlw	0x0
  5504  0E7C  1283               	bcf	status, 5	;RP0=0, select bank0
  5505  0E7D  1303               	bcf	status, 6	;RP1=0, select bank0
  5506  0E7E  00B6               	movwf	(?___ftdiv)
  5507  0E7F  30C8               	movlw	0xc8
  5508  0E80  00B7               	movwf	(?___ftdiv+1)
  5509  0E81  3042               	movlw	0x42
  5510  0E82  00B8               	movwf	(?___ftdiv+2)
  5511  0E83  1683               	bsf	status, 5	;RP0=1, select bank3
  5512  0E84  1703               	bsf	status, 6	;RP1=1, select bank3
  5513  0E85  082C               	movf	(_Td)^0180h,w
  5514  0E86  1283               	bcf	status, 5	;RP0=0, select bank0
  5515  0E87  1303               	bcf	status, 6	;RP1=0, select bank0
  5516  0E88  00B9               	movwf	0+(?___ftdiv)+03h
  5517  0E89  1683               	bsf	status, 5	;RP0=1, select bank3
  5518  0E8A  1703               	bsf	status, 6	;RP1=1, select bank3
  5519  0E8B  082D               	movf	(_Td+1)^0180h,w
  5520  0E8C  1283               	bcf	status, 5	;RP0=0, select bank0
  5521  0E8D  1303               	bcf	status, 6	;RP1=0, select bank0
  5522  0E8E  00BA               	movwf	1+(?___ftdiv)+03h
  5523  0E8F  1683               	bsf	status, 5	;RP0=1, select bank3
  5524  0E90  1703               	bsf	status, 6	;RP1=1, select bank3
  5525  0E91  082E               	movf	(_Td+2)^0180h,w
  5526  0E92  1283               	bcf	status, 5	;RP0=0, select bank0
  5527  0E93  1303               	bcf	status, 6	;RP1=0, select bank0
  5528  0E94  00BB               	movwf	2+(?___ftdiv)+03h
  5529  0E95  160A  118A  22ED   	fcall	___ftdiv
              120A  158A         
  5530  0E9A  1283               	bcf	status, 5	;RP0=0, select bank0
  5531  0E9B  1303               	bcf	status, 6	;RP1=0, select bank0
  5532  0E9C  0836               	movf	(0+(?___ftdiv)),w
  5533  0E9D  00D9               	movwf	(Calc_PID_const@Td1)
  5534  0E9E  0837               	movf	(1+(?___ftdiv)),w
  5535  0E9F  00DA               	movwf	(Calc_PID_const@Td1+1)
  5536  0EA0  0838               	movf	(2+(?___ftdiv)),w
  5537  0EA1  00DB               	movwf	(Calc_PID_const@Td1+2)
  5538                           	line	8
  5539                           ;PIDp.c: 8: Ti1 = Ti/100.0;
  5540  0EA2  3000               	movlw	0x0
  5541  0EA3  00B6               	movwf	(?___ftdiv)
  5542  0EA4  30C8               	movlw	0xc8
  5543  0EA5  00B7               	movwf	(?___ftdiv+1)
  5544  0EA6  3042               	movlw	0x42
  5545  0EA7  00B8               	movwf	(?___ftdiv+2)
  5546  0EA8  1683               	bsf	status, 5	;RP0=1, select bank3
  5547  0EA9  1703               	bsf	status, 6	;RP1=1, select bank3
  5548  0EAA  082B               	movf	(_Ti+3)^0180h,w
  5549  0EAB  1283               	bcf	status, 5	;RP0=0, select bank0
  5550  0EAC  1303               	bcf	status, 6	;RP1=0, select bank0
  5551  0EAD  00B0               	movwf	(?___lltoft+3)
  5552  0EAE  1683               	bsf	status, 5	;RP0=1, select bank3
  5553  0EAF  1703               	bsf	status, 6	;RP1=1, select bank3
  5554  0EB0  082A               	movf	(_Ti+2)^0180h,w
  5555  0EB1  1283               	bcf	status, 5	;RP0=0, select bank0
  5556  0EB2  1303               	bcf	status, 6	;RP1=0, select bank0
  5557  0EB3  00AF               	movwf	(?___lltoft+2)
  5558  0EB4  1683               	bsf	status, 5	;RP0=1, select bank3
  5559  0EB5  1703               	bsf	status, 6	;RP1=1, select bank3
  5560  0EB6  0829               	movf	(_Ti+1)^0180h,w
  5561  0EB7  1283               	bcf	status, 5	;RP0=0, select bank0
  5562  0EB8  1303               	bcf	status, 6	;RP1=0, select bank0
  5563  0EB9  00AE               	movwf	(?___lltoft+1)
  5564  0EBA  1683               	bsf	status, 5	;RP0=1, select bank3
  5565  0EBB  1703               	bsf	status, 6	;RP1=1, select bank3
  5566  0EBC  0828               	movf	(_Ti)^0180h,w
  5567  0EBD  1283               	bcf	status, 5	;RP0=0, select bank0
  5568  0EBE  1303               	bcf	status, 6	;RP1=0, select bank0
  5569  0EBF  00AD               	movwf	(?___lltoft)
  5570                           
  5571  0EC0  160A  158A  249D   	fcall	___lltoft
              120A  158A         
  5572  0EC5  1283               	bcf	status, 5	;RP0=0, select bank0
  5573  0EC6  1303               	bcf	status, 6	;RP1=0, select bank0
  5574  0EC7  082D               	movf	(0+(?___lltoft)),w
  5575  0EC8  00B9               	movwf	0+(?___ftdiv)+03h
  5576  0EC9  082E               	movf	(1+(?___lltoft)),w
  5577  0ECA  00BA               	movwf	1+(?___ftdiv)+03h
  5578  0ECB  082F               	movf	(2+(?___lltoft)),w
  5579  0ECC  00BB               	movwf	2+(?___ftdiv)+03h
  5580  0ECD  160A  118A  22ED   	fcall	___ftdiv
              120A  158A         
  5581  0ED2  1283               	bcf	status, 5	;RP0=0, select bank0
  5582  0ED3  1303               	bcf	status, 6	;RP1=0, select bank0
  5583  0ED4  0836               	movf	(0+(?___ftdiv)),w
  5584  0ED5  00D3               	movwf	(Calc_PID_const@Ti1)
  5585  0ED6  0837               	movf	(1+(?___ftdiv)),w
  5586  0ED7  00D4               	movwf	(Calc_PID_const@Ti1+1)
  5587  0ED8  0838               	movf	(2+(?___ftdiv)),w
  5588  0ED9  00D5               	movwf	(Calc_PID_const@Ti1+2)
  5589                           	line	10
  5590                           ;PIDp.c: 10: kc = 10000.0/Pb;
  5591  0EDA  1683               	bsf	status, 5	;RP0=1, select bank3
  5592  0EDB  1703               	bsf	status, 6	;RP1=1, select bank3
  5593  0EDC  084E               	movf	(_Pb+3)^0180h,w
  5594  0EDD  1283               	bcf	status, 5	;RP0=0, select bank0
  5595  0EDE  1303               	bcf	status, 6	;RP1=0, select bank0
  5596  0EDF  00B0               	movwf	(?___lltoft+3)
  5597  0EE0  1683               	bsf	status, 5	;RP0=1, select bank3
  5598  0EE1  1703               	bsf	status, 6	;RP1=1, select bank3
  5599  0EE2  084D               	movf	(_Pb+2)^0180h,w
  5600  0EE3  1283               	bcf	status, 5	;RP0=0, select bank0
  5601  0EE4  1303               	bcf	status, 6	;RP1=0, select bank0
  5602  0EE5  00AF               	movwf	(?___lltoft+2)
  5603  0EE6  1683               	bsf	status, 5	;RP0=1, select bank3
  5604  0EE7  1703               	bsf	status, 6	;RP1=1, select bank3
  5605  0EE8  084C               	movf	(_Pb+1)^0180h,w
  5606  0EE9  1283               	bcf	status, 5	;RP0=0, select bank0
  5607  0EEA  1303               	bcf	status, 6	;RP1=0, select bank0
  5608  0EEB  00AE               	movwf	(?___lltoft+1)
  5609  0EEC  1683               	bsf	status, 5	;RP0=1, select bank3
  5610  0EED  1703               	bsf	status, 6	;RP1=1, select bank3
  5611  0EEE  084B               	movf	(_Pb)^0180h,w
  5612  0EEF  1283               	bcf	status, 5	;RP0=0, select bank0
  5613  0EF0  1303               	bcf	status, 6	;RP1=0, select bank0
  5614  0EF1  00AD               	movwf	(?___lltoft)
  5615                           
  5616  0EF2  160A  158A  249D   	fcall	___lltoft
              120A  158A         
  5617  0EF7  1283               	bcf	status, 5	;RP0=0, select bank0
  5618  0EF8  1303               	bcf	status, 6	;RP1=0, select bank0
  5619  0EF9  082D               	movf	(0+(?___lltoft)),w
  5620  0EFA  00B6               	movwf	(?___ftdiv)
  5621  0EFB  082E               	movf	(1+(?___lltoft)),w
  5622  0EFC  00B7               	movwf	(?___ftdiv+1)
  5623  0EFD  082F               	movf	(2+(?___lltoft)),w
  5624  0EFE  00B8               	movwf	(?___ftdiv+2)
  5625  0EFF  3040               	movlw	0x40
  5626  0F00  00B9               	movwf	0+(?___ftdiv)+03h
  5627  0F01  301C               	movlw	0x1c
  5628  0F02  00BA               	movwf	1+(?___ftdiv)+03h
  5629  0F03  3046               	movlw	0x46
  5630  0F04  00BB               	movwf	2+(?___ftdiv)+03h
  5631  0F05  160A  118A  22ED   	fcall	___ftdiv
              120A  158A         
  5632  0F0A  1283               	bcf	status, 5	;RP0=0, select bank0
  5633  0F0B  1303               	bcf	status, 6	;RP1=0, select bank0
  5634  0F0C  0836               	movf	(0+(?___ftdiv)),w
  5635  0F0D  00E5               	movwf	(_kc)
  5636  0F0E  0837               	movf	(1+(?___ftdiv)),w
  5637  0F0F  00E6               	movwf	(_kc+1)
  5638  0F10  0838               	movf	(2+(?___ftdiv)),w
  5639  0F11  00E7               	movwf	(_kc+2)
  5640                           	line	11
  5641                           ;PIDp.c: 11: k1 = kc + (kc/Ti1) + (kc*Td1) ;
  5642  0F12  0859               	movf	(Calc_PID_const@Td1),w
  5643  0F13  00AB               	movwf	(?___ftmul)
  5644  0F14  085A               	movf	(Calc_PID_const@Td1+1),w
  5645  0F15  00AC               	movwf	(?___ftmul+1)
  5646  0F16  085B               	movf	(Calc_PID_const@Td1+2),w
  5647  0F17  00AD               	movwf	(?___ftmul+2)
  5648  0F18  0865               	movf	(_kc),w
  5649  0F19  00AE               	movwf	0+(?___ftmul)+03h
  5650  0F1A  0866               	movf	(_kc+1),w
  5651  0F1B  00AF               	movwf	1+(?___ftmul)+03h
  5652  0F1C  0867               	movf	(_kc+2),w
  5653  0F1D  00B0               	movwf	2+(?___ftmul)+03h
  5654  0F1E  160A  118A  2618   	fcall	___ftmul
              120A  158A         
  5655  0F23  1283               	bcf	status, 5	;RP0=0, select bank0
  5656  0F24  1303               	bcf	status, 6	;RP1=0, select bank0
  5657  0F25  082B               	movf	(0+(?___ftmul)),w
  5658  0F26  00C6               	movwf	(?___ftadd)
  5659  0F27  082C               	movf	(1+(?___ftmul)),w
  5660  0F28  00C7               	movwf	(?___ftadd+1)
  5661  0F29  082D               	movf	(2+(?___ftmul)),w
  5662  0F2A  00C8               	movwf	(?___ftadd+2)
  5663  0F2B  0853               	movf	(Calc_PID_const@Ti1),w
  5664  0F2C  00B6               	movwf	(?___ftdiv)
  5665  0F2D  0854               	movf	(Calc_PID_const@Ti1+1),w
  5666  0F2E  00B7               	movwf	(?___ftdiv+1)
  5667  0F2F  0855               	movf	(Calc_PID_const@Ti1+2),w
  5668  0F30  00B8               	movwf	(?___ftdiv+2)
  5669  0F31  0865               	movf	(_kc),w
  5670  0F32  00B9               	movwf	0+(?___ftdiv)+03h
  5671  0F33  0866               	movf	(_kc+1),w
  5672  0F34  00BA               	movwf	1+(?___ftdiv)+03h
  5673  0F35  0867               	movf	(_kc+2),w
  5674  0F36  00BB               	movwf	2+(?___ftdiv)+03h
  5675  0F37  160A  118A  22ED   	fcall	___ftdiv
              120A  158A         
  5676  0F3C  1283               	bcf	status, 5	;RP0=0, select bank0
  5677  0F3D  1303               	bcf	status, 6	;RP1=0, select bank0
  5678  0F3E  0836               	movf	(0+(?___ftdiv)),w
  5679  0F3F  00C9               	movwf	0+(?___ftadd)+03h
  5680  0F40  0837               	movf	(1+(?___ftdiv)),w
  5681  0F41  00CA               	movwf	1+(?___ftadd)+03h
  5682  0F42  0838               	movf	(2+(?___ftdiv)),w
  5683  0F43  00CB               	movwf	2+(?___ftadd)+03h
  5684  0F44  120A  158A  2535   	fcall	___ftadd
              120A  158A         
  5685  0F49  1283               	bcf	status, 5	;RP0=0, select bank0
  5686  0F4A  1303               	bcf	status, 6	;RP1=0, select bank0
  5687  0F4B  0846               	movf	(0+(?___ftadd)),w
  5688  0F4C  00D6               	movwf	(_Calc_PID_const$8869)
  5689  0F4D  0847               	movf	(1+(?___ftadd)),w
  5690  0F4E  00D7               	movwf	(_Calc_PID_const$8869+1)
  5691  0F4F  0848               	movf	(2+(?___ftadd)),w
  5692  0F50  00D8               	movwf	(_Calc_PID_const$8869+2)
  5693                           ;PIDp.c: 11: k1 = kc + (kc/Ti1) + (kc*Td1) ;
  5694  0F51  0865               	movf	(_kc),w
  5695  0F52  00C6               	movwf	(?___ftadd)
  5696  0F53  0866               	movf	(_kc+1),w
  5697  0F54  00C7               	movwf	(?___ftadd+1)
  5698  0F55  0867               	movf	(_kc+2),w
  5699  0F56  00C8               	movwf	(?___ftadd+2)
  5700  0F57  0856               	movf	(_Calc_PID_const$8869),w
  5701  0F58  00C9               	movwf	0+(?___ftadd)+03h
  5702  0F59  0857               	movf	(_Calc_PID_const$8869+1),w
  5703  0F5A  00CA               	movwf	1+(?___ftadd)+03h
  5704  0F5B  0858               	movf	(_Calc_PID_const$8869+2),w
  5705  0F5C  00CB               	movwf	2+(?___ftadd)+03h
  5706  0F5D  120A  158A  2535   	fcall	___ftadd
              120A  158A         
  5707  0F62  1283               	bcf	status, 5	;RP0=0, select bank0
  5708  0F63  1303               	bcf	status, 6	;RP1=0, select bank0
  5709  0F64  0846               	movf	(0+(?___ftadd)),w
  5710  0F65  1683               	bsf	status, 5	;RP0=1, select bank3
  5711  0F66  1703               	bsf	status, 6	;RP1=1, select bank3
  5712  0F67  00B2               	movwf	(_k1)^0180h
  5713  0F68  1283               	bcf	status, 5	;RP0=0, select bank0
  5714  0F69  1303               	bcf	status, 6	;RP1=0, select bank0
  5715  0F6A  0847               	movf	(1+(?___ftadd)),w
  5716  0F6B  1683               	bsf	status, 5	;RP0=1, select bank3
  5717  0F6C  1703               	bsf	status, 6	;RP1=1, select bank3
  5718  0F6D  00B3               	movwf	(_k1+1)^0180h
  5719  0F6E  1283               	bcf	status, 5	;RP0=0, select bank0
  5720  0F6F  1303               	bcf	status, 6	;RP1=0, select bank0
  5721  0F70  0848               	movf	(2+(?___ftadd)),w
  5722  0F71  1683               	bsf	status, 5	;RP0=1, select bank3
  5723  0F72  1703               	bsf	status, 6	;RP1=1, select bank3
  5724  0F73  00B4               	movwf	(_k1+2)^0180h
  5725                           	line	12
  5726                           ;PIDp.c: 12: k2 = -(kc +(2.0*kc*Td1 )) ;
  5727  0F74  1283               	bcf	status, 5	;RP0=0, select bank0
  5728  0F75  1303               	bcf	status, 6	;RP1=0, select bank0
  5729  0F76  0865               	movf	(_kc),w
  5730  0F77  00AE               	movwf	0+(?___ftmul)+03h
  5731  0F78  0866               	movf	(_kc+1),w
  5732  0F79  00AF               	movwf	1+(?___ftmul)+03h
  5733  0F7A  0867               	movf	(_kc+2),w
  5734  0F7B  00B0               	movwf	2+(?___ftmul)+03h
  5735  0F7C  0859               	movf	(Calc_PID_const@Td1),w
  5736  0F7D  00AB               	movwf	(?___ftmul)
  5737  0F7E  085A               	movf	(Calc_PID_const@Td1+1),w
  5738  0F7F  00AC               	movwf	(?___ftmul+1)
  5739  0F80  085B               	movf	(Calc_PID_const@Td1+2),w
  5740  0F81  00AD               	movwf	(?___ftmul+2)
  5741  0F82  160A  118A  2618   	fcall	___ftmul
              120A  158A         
  5742  0F87  1283               	bcf	status, 5	;RP0=0, select bank0
  5743  0F88  1303               	bcf	status, 6	;RP1=0, select bank0
  5744  0F89  082B               	movf	(0+(?___ftmul)),w
  5745  0F8A  00AE               	movwf	0+(?___ftmul)+03h
  5746  0F8B  082C               	movf	(1+(?___ftmul)),w
  5747  0F8C  00AF               	movwf	1+(?___ftmul)+03h
  5748  0F8D  082D               	movf	(2+(?___ftmul)),w
  5749  0F8E  00B0               	movwf	2+(?___ftmul)+03h
  5750  0F8F  3000               	movlw	0x0
  5751  0F90  00AB               	movwf	(?___ftmul)
  5752  0F91  3000               	movlw	0x0
  5753  0F92  00AC               	movwf	(?___ftmul+1)
  5754  0F93  3040               	movlw	0x40
  5755  0F94  00AD               	movwf	(?___ftmul+2)
  5756  0F95  160A  118A  2618   	fcall	___ftmul
              120A  158A         
  5757  0F9A  1283               	bcf	status, 5	;RP0=0, select bank0
  5758  0F9B  1303               	bcf	status, 6	;RP1=0, select bank0
  5759  0F9C  082B               	movf	(0+(?___ftmul)),w
  5760  0F9D  00C9               	movwf	0+(?___ftadd)+03h
  5761  0F9E  082C               	movf	(1+(?___ftmul)),w
  5762  0F9F  00CA               	movwf	1+(?___ftadd)+03h
  5763  0FA0  082D               	movf	(2+(?___ftmul)),w
  5764  0FA1  00CB               	movwf	2+(?___ftadd)+03h
  5765  0FA2  0865               	movf	(_kc),w
  5766  0FA3  00C6               	movwf	(?___ftadd)
  5767  0FA4  0866               	movf	(_kc+1),w
  5768  0FA5  00C7               	movwf	(?___ftadd+1)
  5769  0FA6  0867               	movf	(_kc+2),w
  5770  0FA7  00C8               	movwf	(?___ftadd+2)
  5771  0FA8  120A  158A  2535   	fcall	___ftadd
              120A  158A         
  5772  0FAD  1283               	bcf	status, 5	;RP0=0, select bank0
  5773  0FAE  1303               	bcf	status, 6	;RP1=0, select bank0
  5774  0FAF  0846               	movf	(0+(?___ftadd)),w
  5775  0FB0  00A8               	movwf	(?___ftneg)
  5776  0FB1  0847               	movf	(1+(?___ftadd)),w
  5777  0FB2  00A9               	movwf	(?___ftneg+1)
  5778  0FB3  0848               	movf	(2+(?___ftadd)),w
  5779  0FB4  00AA               	movwf	(?___ftneg+2)
  5780  0FB5  160A  158A  22F7   	fcall	___ftneg
              120A  158A         
  5781  0FBA  1283               	bcf	status, 5	;RP0=0, select bank0
  5782  0FBB  1303               	bcf	status, 6	;RP1=0, select bank0
  5783  0FBC  0828               	movf	(0+(?___ftneg)),w
  5784  0FBD  1683               	bsf	status, 5	;RP0=1, select bank3
  5785  0FBE  1703               	bsf	status, 6	;RP1=1, select bank3
  5786  0FBF  00B5               	movwf	(_k2)^0180h
  5787  0FC0  1283               	bcf	status, 5	;RP0=0, select bank0
  5788  0FC1  1303               	bcf	status, 6	;RP1=0, select bank0
  5789  0FC2  0829               	movf	(1+(?___ftneg)),w
  5790  0FC3  1683               	bsf	status, 5	;RP0=1, select bank3
  5791  0FC4  1703               	bsf	status, 6	;RP1=1, select bank3
  5792  0FC5  00B6               	movwf	(_k2+1)^0180h
  5793  0FC6  1283               	bcf	status, 5	;RP0=0, select bank0
  5794  0FC7  1303               	bcf	status, 6	;RP1=0, select bank0
  5795  0FC8  082A               	movf	(2+(?___ftneg)),w
  5796  0FC9  1683               	bsf	status, 5	;RP0=1, select bank3
  5797  0FCA  1703               	bsf	status, 6	;RP1=1, select bank3
  5798  0FCB  00B7               	movwf	(_k2+2)^0180h
  5799                           	line	13
  5800                           ;PIDp.c: 13: k3 = kc*Td1 ;
  5801  0FCC  1283               	bcf	status, 5	;RP0=0, select bank0
  5802  0FCD  1303               	bcf	status, 6	;RP1=0, select bank0
  5803  0FCE  0859               	movf	(Calc_PID_const@Td1),w
  5804  0FCF  00AB               	movwf	(?___ftmul)
  5805  0FD0  085A               	movf	(Calc_PID_const@Td1+1),w
  5806  0FD1  00AC               	movwf	(?___ftmul+1)
  5807  0FD2  085B               	movf	(Calc_PID_const@Td1+2),w
  5808  0FD3  00AD               	movwf	(?___ftmul+2)
  5809  0FD4  0865               	movf	(_kc),w
  5810  0FD5  00AE               	movwf	0+(?___ftmul)+03h
  5811  0FD6  0866               	movf	(_kc+1),w
  5812  0FD7  00AF               	movwf	1+(?___ftmul)+03h
  5813  0FD8  0867               	movf	(_kc+2),w
  5814  0FD9  00B0               	movwf	2+(?___ftmul)+03h
  5815  0FDA  160A  118A  2618   	fcall	___ftmul
              120A  158A         
  5816  0FDF  1283               	bcf	status, 5	;RP0=0, select bank0
  5817  0FE0  1303               	bcf	status, 6	;RP1=0, select bank0
  5818  0FE1  082B               	movf	(0+(?___ftmul)),w
  5819  0FE2  1683               	bsf	status, 5	;RP0=1, select bank3
  5820  0FE3  1703               	bsf	status, 6	;RP1=1, select bank3
  5821  0FE4  00B8               	movwf	(_k3)^0180h
  5822  0FE5  1283               	bcf	status, 5	;RP0=0, select bank0
  5823  0FE6  1303               	bcf	status, 6	;RP1=0, select bank0
  5824  0FE7  082C               	movf	(1+(?___ftmul)),w
  5825  0FE8  1683               	bsf	status, 5	;RP0=1, select bank3
  5826  0FE9  1703               	bsf	status, 6	;RP1=1, select bank3
  5827  0FEA  00B9               	movwf	(_k3+1)^0180h
  5828  0FEB  1283               	bcf	status, 5	;RP0=0, select bank0
  5829  0FEC  1303               	bcf	status, 6	;RP1=0, select bank0
  5830  0FED  082D               	movf	(2+(?___ftmul)),w
  5831  0FEE  1683               	bsf	status, 5	;RP0=1, select bank3
  5832  0FEF  1703               	bsf	status, 6	;RP1=1, select bank3
  5833  0FF0  00BA               	movwf	(_k3+2)^0180h
  5834                           	line	14
  5835                           	
  5836  0FF1                     l11561:	
  5837                           ;PIDp.c: 14: u = u1 = 900.0;
  5838  0FF1  3000               	movlw	0x0
  5839  0FF2  1683               	bsf	status, 5	;RP0=1, select bank1
  5840  0FF3  1303               	bcf	status, 6	;RP1=0, select bank1
  5841  0FF4  00D8               	movwf	(_u1)^080h
  5842  0FF5  3061               	movlw	0x61
  5843  0FF6  00D9               	movwf	(_u1+1)^080h
  5844  0FF7  3044               	movlw	0x44
  5845  0FF8  00DA               	movwf	(_u1+2)^080h
  5846  0FF9  0858               	movf	((_u1)^080h),w
  5847  0FFA  00D5               	movwf	(_u)^080h
  5848  0FFB  0859               	movf	((_u1+1)^080h),w
  5849  0FFC  00D6               	movwf	(_u+1)^080h
  5850  0FFD  085A               	movf	((_u1+2)^080h),w
  5851  0FFE  00D7               	movwf	(_u+2)^080h
  5852                           	line	16
  5853                           	
  5854  0FFF                     l3398:	
  5855  0FFF  0008               	return
  5856                           	opt stack 0
  5857                           GLOBAL	__end_of_Calc_PID_const
  5858  1000                     	__end_of_Calc_PID_const:
  5859 ;; =============== function _Calc_PID_const ends ============
  5860                           
  5861                           	signat	_Calc_PID_const,88
  5862                           	global	_Writeeeprom
  5863                           psect	text1154,local,class=CODE,delta=2
  5864                           global __ptext1154
  5865  0319                     __ptext1154:
  5866                           
  5867 ;; *************** function _Writeeeprom *****************
  5868 ;; Defined at:
  5869 ;;		line 95 in file "EEPRom.c"
  5870 ;; Parameters:    Size  Location     Type
  5871 ;;		None
  5872 ;; Auto vars:     Size  Location     Type
  5873 ;;  retval          1   17[BANK0 ] unsigned char 
  5874 ;; Return value:  Size  Location     Type
  5875 ;;		None               void
  5876 ;; Registers used:
  5877 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5878 ;; Tracked objects:
  5879 ;;		On entry : 0/0
  5880 ;;		On exit  : 0/0
  5881 ;;		Unchanged: 0/0
  5882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5883 ;;      Params:         0       0       0       0       0
  5884 ;;      Locals:         0       1       0       0       0
  5885 ;;      Temps:          0       6       0       0       0
  5886 ;;      Totals:         0       7       0       0       0
  5887 ;;Total ram usage:        7 bytes
  5888 ;; Hardware stack levels used:    1
  5889 ;; Hardware stack levels required when called:    4
  5890 ;; This function calls:
  5891 ;;		_WriteEEP
  5892 ;;		_USARTWriteChar
  5893 ;;		_USARTWriteString
  5894 ;; This function is called by:
  5895 ;;		_StoreCurVal
  5896 ;; This function uses a non-reentrant model
  5897 ;;
  5898                           psect	text1154
  5899                           	file	"EEPRom.c"
  5900                           	line	95
  5901                           	global	__size_of_Writeeeprom
  5902  01BF                     	__size_of_Writeeeprom	equ	__end_of_Writeeeprom-_Writeeeprom
  5903                           	
  5904  0319                     _Writeeeprom:	
  5905                           	opt	stack 1
  5906                           ; Regs used in _Writeeeprom: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5907                           	line	97
  5908                           	
  5909  0319                     l11523:	
  5910                           ;EEPRom.c: 96: unsigned char retval;
  5911                           ;EEPRom.c: 97: switch(Command)
  5912  0319  2C94               	goto	l11547
  5913                           	line	99
  5914                           ;EEPRom.c: 98: {
  5915                           ;EEPRom.c: 99: case 'Z': retval = WriteEEP(ZCurVal,0); break;
  5916                           	
  5917  031A                     l2297:	
  5918                           	
  5919  031A                     l11525:	
  5920  031A  1683               	bsf	status, 5	;RP0=1, select bank1
  5921  031B  1303               	bcf	status, 6	;RP1=0, select bank1
  5922  031C  084B               	movf	(_ZCurVal+3)^080h,w
  5923  031D  1283               	bcf	status, 5	;RP0=0, select bank0
  5924  031E  1303               	bcf	status, 6	;RP1=0, select bank0
  5925  031F  00A5               	movwf	(?_WriteEEP+3)
  5926  0320  1683               	bsf	status, 5	;RP0=1, select bank1
  5927  0321  1303               	bcf	status, 6	;RP1=0, select bank1
  5928  0322  084A               	movf	(_ZCurVal+2)^080h,w
  5929  0323  1283               	bcf	status, 5	;RP0=0, select bank0
  5930  0324  1303               	bcf	status, 6	;RP1=0, select bank0
  5931  0325  00A4               	movwf	(?_WriteEEP+2)
  5932  0326  1683               	bsf	status, 5	;RP0=1, select bank1
  5933  0327  1303               	bcf	status, 6	;RP1=0, select bank1
  5934  0328  0849               	movf	(_ZCurVal+1)^080h,w
  5935  0329  1283               	bcf	status, 5	;RP0=0, select bank0
  5936  032A  1303               	bcf	status, 6	;RP1=0, select bank0
  5937  032B  00A3               	movwf	(?_WriteEEP+1)
  5938  032C  1683               	bsf	status, 5	;RP0=1, select bank1
  5939  032D  1303               	bcf	status, 6	;RP1=0, select bank1
  5940  032E  0848               	movf	(_ZCurVal)^080h,w
  5941  032F  1283               	bcf	status, 5	;RP0=0, select bank0
  5942  0330  1303               	bcf	status, 6	;RP1=0, select bank0
  5943  0331  00A2               	movwf	(?_WriteEEP)
  5944                           
  5945  0332  01A6               	clrf	0+(?_WriteEEP)+04h
  5946  0333  160A  158A  24D3   	fcall	_WriteEEP
              120A  118A         
  5947  0338  1283               	bcf	status, 5	;RP0=0, select bank0
  5948  0339  1303               	bcf	status, 6	;RP1=0, select bank0
  5949  033A  00AB               	movwf	(??_Writeeeprom+0)+0
  5950  033B  082B               	movf	(??_Writeeeprom+0)+0,w
  5951  033C  00B1               	movwf	(Writeeeprom@retval)
  5952  033D  2CB9               	goto	l11549
  5953                           	line	100
  5954                           ;EEPRom.c: 100: case 'S': retval = WriteEEP(SCurVal,4); break;
  5955                           	
  5956  033E                     l2299:	
  5957                           	
  5958  033E                     l11527:	
  5959  033E  1683               	bsf	status, 5	;RP0=1, select bank1
  5960  033F  1303               	bcf	status, 6	;RP1=0, select bank1
  5961  0340  0843               	movf	(_SCurVal+3)^080h,w
  5962  0341  1283               	bcf	status, 5	;RP0=0, select bank0
  5963  0342  1303               	bcf	status, 6	;RP1=0, select bank0
  5964  0343  00A5               	movwf	(?_WriteEEP+3)
  5965  0344  1683               	bsf	status, 5	;RP0=1, select bank1
  5966  0345  1303               	bcf	status, 6	;RP1=0, select bank1
  5967  0346  0842               	movf	(_SCurVal+2)^080h,w
  5968  0347  1283               	bcf	status, 5	;RP0=0, select bank0
  5969  0348  1303               	bcf	status, 6	;RP1=0, select bank0
  5970  0349  00A4               	movwf	(?_WriteEEP+2)
  5971  034A  1683               	bsf	status, 5	;RP0=1, select bank1
  5972  034B  1303               	bcf	status, 6	;RP1=0, select bank1
  5973  034C  0841               	movf	(_SCurVal+1)^080h,w
  5974  034D  1283               	bcf	status, 5	;RP0=0, select bank0
  5975  034E  1303               	bcf	status, 6	;RP1=0, select bank0
  5976  034F  00A3               	movwf	(?_WriteEEP+1)
  5977  0350  1683               	bsf	status, 5	;RP0=1, select bank1
  5978  0351  1303               	bcf	status, 6	;RP1=0, select bank1
  5979  0352  0840               	movf	(_SCurVal)^080h,w
  5980  0353  1283               	bcf	status, 5	;RP0=0, select bank0
  5981  0354  1303               	bcf	status, 6	;RP1=0, select bank0
  5982  0355  00A2               	movwf	(?_WriteEEP)
  5983                           
  5984  0356  3004               	movlw	(04h)
  5985  0357  00AB               	movwf	(??_Writeeeprom+0)+0
  5986  0358  082B               	movf	(??_Writeeeprom+0)+0,w
  5987  0359  00A6               	movwf	0+(?_WriteEEP)+04h
  5988  035A  160A  158A  24D3   	fcall	_WriteEEP
              120A  118A         
  5989  035F  1283               	bcf	status, 5	;RP0=0, select bank0
  5990  0360  1303               	bcf	status, 6	;RP1=0, select bank0
  5991  0361  00AC               	movwf	(??_Writeeeprom+1)+0
  5992  0362  082C               	movf	(??_Writeeeprom+1)+0,w
  5993  0363  00B1               	movwf	(Writeeeprom@retval)
  5994  0364  2CB9               	goto	l11549
  5995                           	line	101
  5996                           ;EEPRom.c: 101: case 'T': retval = WriteEEP(NoTeeth,8); break;
  5997                           	
  5998  0365                     l2300:	
  5999                           	
  6000  0365                     l11529:	
  6001  0365  1683               	bsf	status, 5	;RP0=1, select bank1
  6002  0366  1303               	bcf	status, 6	;RP1=0, select bank1
  6003  0367  083B               	movf	(_NoTeeth+3)^080h,w
  6004  0368  1283               	bcf	status, 5	;RP0=0, select bank0
  6005  0369  1303               	bcf	status, 6	;RP1=0, select bank0
  6006  036A  00A5               	movwf	(?_WriteEEP+3)
  6007  036B  1683               	bsf	status, 5	;RP0=1, select bank1
  6008  036C  1303               	bcf	status, 6	;RP1=0, select bank1
  6009  036D  083A               	movf	(_NoTeeth+2)^080h,w
  6010  036E  1283               	bcf	status, 5	;RP0=0, select bank0
  6011  036F  1303               	bcf	status, 6	;RP1=0, select bank0
  6012  0370  00A4               	movwf	(?_WriteEEP+2)
  6013  0371  1683               	bsf	status, 5	;RP0=1, select bank1
  6014  0372  1303               	bcf	status, 6	;RP1=0, select bank1
  6015  0373  0839               	movf	(_NoTeeth+1)^080h,w
  6016  0374  1283               	bcf	status, 5	;RP0=0, select bank0
  6017  0375  1303               	bcf	status, 6	;RP1=0, select bank0
  6018  0376  00A3               	movwf	(?_WriteEEP+1)
  6019  0377  1683               	bsf	status, 5	;RP0=1, select bank1
  6020  0378  1303               	bcf	status, 6	;RP1=0, select bank1
  6021  0379  0838               	movf	(_NoTeeth)^080h,w
  6022  037A  1283               	bcf	status, 5	;RP0=0, select bank0
  6023  037B  1303               	bcf	status, 6	;RP1=0, select bank0
  6024  037C  00A2               	movwf	(?_WriteEEP)
  6025                           
  6026  037D  3008               	movlw	(08h)
  6027  037E  00AB               	movwf	(??_Writeeeprom+0)+0
  6028  037F  082B               	movf	(??_Writeeeprom+0)+0,w
  6029  0380  00A6               	movwf	0+(?_WriteEEP)+04h
  6030  0381  160A  158A  24D3   	fcall	_WriteEEP
              120A  118A         
  6031  0386  1283               	bcf	status, 5	;RP0=0, select bank0
  6032  0387  1303               	bcf	status, 6	;RP1=0, select bank0
  6033  0388  00AC               	movwf	(??_Writeeeprom+1)+0
  6034  0389  082C               	movf	(??_Writeeeprom+1)+0,w
  6035  038A  00B1               	movwf	(Writeeeprom@retval)
  6036  038B  2CB9               	goto	l11549
  6037                           	line	103
  6038                           ;EEPRom.c: 103: case 'P': retval = WriteEEP(PCurVal,12); break;
  6039                           	
  6040  038C                     l2301:	
  6041                           	
  6042  038C                     l11531:	
  6043  038C  1683               	bsf	status, 5	;RP0=1, select bank1
  6044  038D  1303               	bcf	status, 6	;RP1=0, select bank1
  6045  038E  083F               	movf	(_PCurVal+3)^080h,w
  6046  038F  1283               	bcf	status, 5	;RP0=0, select bank0
  6047  0390  1303               	bcf	status, 6	;RP1=0, select bank0
  6048  0391  00A5               	movwf	(?_WriteEEP+3)
  6049  0392  1683               	bsf	status, 5	;RP0=1, select bank1
  6050  0393  1303               	bcf	status, 6	;RP1=0, select bank1
  6051  0394  083E               	movf	(_PCurVal+2)^080h,w
  6052  0395  1283               	bcf	status, 5	;RP0=0, select bank0
  6053  0396  1303               	bcf	status, 6	;RP1=0, select bank0
  6054  0397  00A4               	movwf	(?_WriteEEP+2)
  6055  0398  1683               	bsf	status, 5	;RP0=1, select bank1
  6056  0399  1303               	bcf	status, 6	;RP1=0, select bank1
  6057  039A  083D               	movf	(_PCurVal+1)^080h,w
  6058  039B  1283               	bcf	status, 5	;RP0=0, select bank0
  6059  039C  1303               	bcf	status, 6	;RP1=0, select bank0
  6060  039D  00A3               	movwf	(?_WriteEEP+1)
  6061  039E  1683               	bsf	status, 5	;RP0=1, select bank1
  6062  039F  1303               	bcf	status, 6	;RP1=0, select bank1
  6063  03A0  083C               	movf	(_PCurVal)^080h,w
  6064  03A1  1283               	bcf	status, 5	;RP0=0, select bank0
  6065  03A2  1303               	bcf	status, 6	;RP1=0, select bank0
  6066  03A3  00A2               	movwf	(?_WriteEEP)
  6067                           
  6068  03A4  300C               	movlw	(0Ch)
  6069  03A5  00AB               	movwf	(??_Writeeeprom+0)+0
  6070  03A6  082B               	movf	(??_Writeeeprom+0)+0,w
  6071  03A7  00A6               	movwf	0+(?_WriteEEP)+04h
  6072  03A8  160A  158A  24D3   	fcall	_WriteEEP
              120A  118A         
  6073  03AD  1283               	bcf	status, 5	;RP0=0, select bank0
  6074  03AE  1303               	bcf	status, 6	;RP1=0, select bank0
  6075  03AF  00AC               	movwf	(??_Writeeeprom+1)+0
  6076  03B0  082C               	movf	(??_Writeeeprom+1)+0,w
  6077  03B1  00B1               	movwf	(Writeeeprom@retval)
  6078  03B2  2CB9               	goto	l11549
  6079                           	line	104
  6080                           ;EEPRom.c: 104: case 'I': retval = WriteEEP(ICurVal,16); break;
  6081                           	
  6082  03B3                     l2302:	
  6083                           	
  6084  03B3                     l11533:	
  6085  03B3  1683               	bsf	status, 5	;RP0=1, select bank1
  6086  03B4  1303               	bcf	status, 6	;RP1=0, select bank1
  6087  03B5  0837               	movf	(_ICurVal+3)^080h,w
  6088  03B6  1283               	bcf	status, 5	;RP0=0, select bank0
  6089  03B7  1303               	bcf	status, 6	;RP1=0, select bank0
  6090  03B8  00A5               	movwf	(?_WriteEEP+3)
  6091  03B9  1683               	bsf	status, 5	;RP0=1, select bank1
  6092  03BA  1303               	bcf	status, 6	;RP1=0, select bank1
  6093  03BB  0836               	movf	(_ICurVal+2)^080h,w
  6094  03BC  1283               	bcf	status, 5	;RP0=0, select bank0
  6095  03BD  1303               	bcf	status, 6	;RP1=0, select bank0
  6096  03BE  00A4               	movwf	(?_WriteEEP+2)
  6097  03BF  1683               	bsf	status, 5	;RP0=1, select bank1
  6098  03C0  1303               	bcf	status, 6	;RP1=0, select bank1
  6099  03C1  0835               	movf	(_ICurVal+1)^080h,w
  6100  03C2  1283               	bcf	status, 5	;RP0=0, select bank0
  6101  03C3  1303               	bcf	status, 6	;RP1=0, select bank0
  6102  03C4  00A3               	movwf	(?_WriteEEP+1)
  6103  03C5  1683               	bsf	status, 5	;RP0=1, select bank1
  6104  03C6  1303               	bcf	status, 6	;RP1=0, select bank1
  6105  03C7  0834               	movf	(_ICurVal)^080h,w
  6106  03C8  1283               	bcf	status, 5	;RP0=0, select bank0
  6107  03C9  1303               	bcf	status, 6	;RP1=0, select bank0
  6108  03CA  00A2               	movwf	(?_WriteEEP)
  6109                           
  6110  03CB  3010               	movlw	(010h)
  6111  03CC  00AB               	movwf	(??_Writeeeprom+0)+0
  6112  03CD  082B               	movf	(??_Writeeeprom+0)+0,w
  6113  03CE  00A6               	movwf	0+(?_WriteEEP)+04h
  6114  03CF  160A  158A  24D3   	fcall	_WriteEEP
              120A  118A         
  6115  03D4  1283               	bcf	status, 5	;RP0=0, select bank0
  6116  03D5  1303               	bcf	status, 6	;RP1=0, select bank0
  6117  03D6  00AC               	movwf	(??_Writeeeprom+1)+0
  6118  03D7  082C               	movf	(??_Writeeeprom+1)+0,w
  6119  03D8  00B1               	movwf	(Writeeeprom@retval)
  6120  03D9  2CB9               	goto	l11549
  6121                           	line	105
  6122                           ;EEPRom.c: 105: case 'D': retval = WriteEEP(DCurVal,20); break;
  6123                           	
  6124  03DA                     l2303:	
  6125                           	
  6126  03DA                     l11535:	
  6127  03DA  1683               	bsf	status, 5	;RP0=1, select bank1
  6128  03DB  1303               	bcf	status, 6	;RP1=0, select bank1
  6129  03DC  0833               	movf	(_DCurVal+3)^080h,w
  6130  03DD  1283               	bcf	status, 5	;RP0=0, select bank0
  6131  03DE  1303               	bcf	status, 6	;RP1=0, select bank0
  6132  03DF  00A5               	movwf	(?_WriteEEP+3)
  6133  03E0  1683               	bsf	status, 5	;RP0=1, select bank1
  6134  03E1  1303               	bcf	status, 6	;RP1=0, select bank1
  6135  03E2  0832               	movf	(_DCurVal+2)^080h,w
  6136  03E3  1283               	bcf	status, 5	;RP0=0, select bank0
  6137  03E4  1303               	bcf	status, 6	;RP1=0, select bank0
  6138  03E5  00A4               	movwf	(?_WriteEEP+2)
  6139  03E6  1683               	bsf	status, 5	;RP0=1, select bank1
  6140  03E7  1303               	bcf	status, 6	;RP1=0, select bank1
  6141  03E8  0831               	movf	(_DCurVal+1)^080h,w
  6142  03E9  1283               	bcf	status, 5	;RP0=0, select bank0
  6143  03EA  1303               	bcf	status, 6	;RP1=0, select bank0
  6144  03EB  00A3               	movwf	(?_WriteEEP+1)
  6145  03EC  1683               	bsf	status, 5	;RP0=1, select bank1
  6146  03ED  1303               	bcf	status, 6	;RP1=0, select bank1
  6147  03EE  0830               	movf	(_DCurVal)^080h,w
  6148  03EF  1283               	bcf	status, 5	;RP0=0, select bank0
  6149  03F0  1303               	bcf	status, 6	;RP1=0, select bank0
  6150  03F1  00A2               	movwf	(?_WriteEEP)
  6151                           
  6152  03F2  3014               	movlw	(014h)
  6153  03F3  00AB               	movwf	(??_Writeeeprom+0)+0
  6154  03F4  082B               	movf	(??_Writeeeprom+0)+0,w
  6155  03F5  00A6               	movwf	0+(?_WriteEEP)+04h
  6156  03F6  160A  158A  24D3   	fcall	_WriteEEP
              120A  118A         
  6157  03FB  1283               	bcf	status, 5	;RP0=0, select bank0
  6158  03FC  1303               	bcf	status, 6	;RP1=0, select bank0
  6159  03FD  00AC               	movwf	(??_Writeeeprom+1)+0
  6160  03FE  082C               	movf	(??_Writeeeprom+1)+0,w
  6161  03FF  00B1               	movwf	(Writeeeprom@retval)
  6162  0400  2CB9               	goto	l11549
  6163                           	line	106
  6164                           ;EEPRom.c: 106: case 'Q': break;
  6165                           	
  6166  0401                     l2304:	
  6167  0401  2CB9               	goto	l11549
  6168                           	line	107
  6169                           ;EEPRom.c: 107: case 'B': retval = WriteEEP(BCurVal,24); break;
  6170                           	
  6171  0402                     l2305:	
  6172                           	
  6173  0402                     l11537:	
  6174  0402  1683               	bsf	status, 5	;RP0=1, select bank1
  6175  0403  1303               	bcf	status, 6	;RP1=0, select bank1
  6176  0404  0827               	movf	(_BCurVal+3)^080h,w
  6177  0405  1283               	bcf	status, 5	;RP0=0, select bank0
  6178  0406  1303               	bcf	status, 6	;RP1=0, select bank0
  6179  0407  00A5               	movwf	(?_WriteEEP+3)
  6180  0408  1683               	bsf	status, 5	;RP0=1, select bank1
  6181  0409  1303               	bcf	status, 6	;RP1=0, select bank1
  6182  040A  0826               	movf	(_BCurVal+2)^080h,w
  6183  040B  1283               	bcf	status, 5	;RP0=0, select bank0
  6184  040C  1303               	bcf	status, 6	;RP1=0, select bank0
  6185  040D  00A4               	movwf	(?_WriteEEP+2)
  6186  040E  1683               	bsf	status, 5	;RP0=1, select bank1
  6187  040F  1303               	bcf	status, 6	;RP1=0, select bank1
  6188  0410  0825               	movf	(_BCurVal+1)^080h,w
  6189  0411  1283               	bcf	status, 5	;RP0=0, select bank0
  6190  0412  1303               	bcf	status, 6	;RP1=0, select bank0
  6191  0413  00A3               	movwf	(?_WriteEEP+1)
  6192  0414  1683               	bsf	status, 5	;RP0=1, select bank1
  6193  0415  1303               	bcf	status, 6	;RP1=0, select bank1
  6194  0416  0824               	movf	(_BCurVal)^080h,w
  6195  0417  1283               	bcf	status, 5	;RP0=0, select bank0
  6196  0418  1303               	bcf	status, 6	;RP1=0, select bank0
  6197  0419  00A2               	movwf	(?_WriteEEP)
  6198                           
  6199  041A  3018               	movlw	(018h)
  6200  041B  00AB               	movwf	(??_Writeeeprom+0)+0
  6201  041C  082B               	movf	(??_Writeeeprom+0)+0,w
  6202  041D  00A6               	movwf	0+(?_WriteEEP)+04h
  6203  041E  160A  158A  24D3   	fcall	_WriteEEP
              120A  118A         
  6204  0423  1283               	bcf	status, 5	;RP0=0, select bank0
  6205  0424  1303               	bcf	status, 6	;RP1=0, select bank0
  6206  0425  00AC               	movwf	(??_Writeeeprom+1)+0
  6207  0426  082C               	movf	(??_Writeeeprom+1)+0,w
  6208  0427  00B1               	movwf	(Writeeeprom@retval)
  6209  0428  2CB9               	goto	l11549
  6210                           	line	108
  6211                           ;EEPRom.c: 108: case 'R': retval = WriteEEP(CLKVIZ,28); break;
  6212                           	
  6213  0429                     l2306:	
  6214                           	
  6215  0429                     l11539:	
  6216  0429  086B               	movf	(_CLKVIZ),w
  6217  042A  00AB               	movwf	(??_Writeeeprom+0)+0
  6218  042B  01AC               	clrf	((??_Writeeeprom+0)+0+1)
  6219  042C  01AD               	clrf	((??_Writeeeprom+0)+0+2)
  6220  042D  01AE               	clrf	((??_Writeeeprom+0)+0+3)
  6221  042E  082E               	movf	3+(??_Writeeeprom+0)+0,w
  6222  042F  00A5               	movwf	(?_WriteEEP+3)
  6223  0430  082D               	movf	2+(??_Writeeeprom+0)+0,w
  6224  0431  00A4               	movwf	(?_WriteEEP+2)
  6225  0432  082C               	movf	1+(??_Writeeeprom+0)+0,w
  6226  0433  00A3               	movwf	(?_WriteEEP+1)
  6227  0434  082B               	movf	0+(??_Writeeeprom+0)+0,w
  6228  0435  00A2               	movwf	(?_WriteEEP)
  6229                           
  6230  0436  301C               	movlw	(01Ch)
  6231  0437  00AF               	movwf	(??_Writeeeprom+4)+0
  6232  0438  082F               	movf	(??_Writeeeprom+4)+0,w
  6233  0439  00A6               	movwf	0+(?_WriteEEP)+04h
  6234  043A  160A  158A  24D3   	fcall	_WriteEEP
              120A  118A         
  6235  043F  1283               	bcf	status, 5	;RP0=0, select bank0
  6236  0440  1303               	bcf	status, 6	;RP1=0, select bank0
  6237  0441  00B0               	movwf	(??_Writeeeprom+5)+0
  6238  0442  0830               	movf	(??_Writeeeprom+5)+0,w
  6239  0443  00B1               	movwf	(Writeeeprom@retval)
  6240  0444  2CB9               	goto	l11549
  6241                           	line	109
  6242                           ;EEPRom.c: 109: case 'F': retval = WriteEEP(BoardFreq,32); break;
  6243                           	
  6244  0445                     l2307:	
  6245                           	
  6246  0445                     l11541:	
  6247  0445  1683               	bsf	status, 5	;RP0=1, select bank1
  6248  0446  1303               	bcf	status, 6	;RP1=0, select bank1
  6249  0447  082B               	movf	(_BoardFreq+3)^080h,w
  6250  0448  1283               	bcf	status, 5	;RP0=0, select bank0
  6251  0449  1303               	bcf	status, 6	;RP1=0, select bank0
  6252  044A  00A5               	movwf	(?_WriteEEP+3)
  6253  044B  1683               	bsf	status, 5	;RP0=1, select bank1
  6254  044C  1303               	bcf	status, 6	;RP1=0, select bank1
  6255  044D  082A               	movf	(_BoardFreq+2)^080h,w
  6256  044E  1283               	bcf	status, 5	;RP0=0, select bank0
  6257  044F  1303               	bcf	status, 6	;RP1=0, select bank0
  6258  0450  00A4               	movwf	(?_WriteEEP+2)
  6259  0451  1683               	bsf	status, 5	;RP0=1, select bank1
  6260  0452  1303               	bcf	status, 6	;RP1=0, select bank1
  6261  0453  0829               	movf	(_BoardFreq+1)^080h,w
  6262  0454  1283               	bcf	status, 5	;RP0=0, select bank0
  6263  0455  1303               	bcf	status, 6	;RP1=0, select bank0
  6264  0456  00A3               	movwf	(?_WriteEEP+1)
  6265  0457  1683               	bsf	status, 5	;RP0=1, select bank1
  6266  0458  1303               	bcf	status, 6	;RP1=0, select bank1
  6267  0459  0828               	movf	(_BoardFreq)^080h,w
  6268  045A  1283               	bcf	status, 5	;RP0=0, select bank0
  6269  045B  1303               	bcf	status, 6	;RP1=0, select bank0
  6270  045C  00A2               	movwf	(?_WriteEEP)
  6271                           
  6272  045D  3020               	movlw	(020h)
  6273  045E  00AB               	movwf	(??_Writeeeprom+0)+0
  6274  045F  082B               	movf	(??_Writeeeprom+0)+0,w
  6275  0460  00A6               	movwf	0+(?_WriteEEP)+04h
  6276  0461  160A  158A  24D3   	fcall	_WriteEEP
              120A  118A         
  6277  0466  1283               	bcf	status, 5	;RP0=0, select bank0
  6278  0467  1303               	bcf	status, 6	;RP1=0, select bank0
  6279  0468  00AC               	movwf	(??_Writeeeprom+1)+0
  6280  0469  082C               	movf	(??_Writeeeprom+1)+0,w
  6281  046A  00B1               	movwf	(Writeeeprom@retval)
  6282  046B  2CB9               	goto	l11549
  6283                           	line	110
  6284                           ;EEPRom.c: 110: case 'A': retval = WriteEEP(ACurVal,36); break;
  6285                           	
  6286  046C                     l2308:	
  6287                           	
  6288  046C                     l11543:	
  6289  046C  1683               	bsf	status, 5	;RP0=1, select bank1
  6290  046D  1303               	bcf	status, 6	;RP1=0, select bank1
  6291  046E  0823               	movf	(_ACurVal+3)^080h,w
  6292  046F  1283               	bcf	status, 5	;RP0=0, select bank0
  6293  0470  1303               	bcf	status, 6	;RP1=0, select bank0
  6294  0471  00A5               	movwf	(?_WriteEEP+3)
  6295  0472  1683               	bsf	status, 5	;RP0=1, select bank1
  6296  0473  1303               	bcf	status, 6	;RP1=0, select bank1
  6297  0474  0822               	movf	(_ACurVal+2)^080h,w
  6298  0475  1283               	bcf	status, 5	;RP0=0, select bank0
  6299  0476  1303               	bcf	status, 6	;RP1=0, select bank0
  6300  0477  00A4               	movwf	(?_WriteEEP+2)
  6301  0478  1683               	bsf	status, 5	;RP0=1, select bank1
  6302  0479  1303               	bcf	status, 6	;RP1=0, select bank1
  6303  047A  0821               	movf	(_ACurVal+1)^080h,w
  6304  047B  1283               	bcf	status, 5	;RP0=0, select bank0
  6305  047C  1303               	bcf	status, 6	;RP1=0, select bank0
  6306  047D  00A3               	movwf	(?_WriteEEP+1)
  6307  047E  1683               	bsf	status, 5	;RP0=1, select bank1
  6308  047F  1303               	bcf	status, 6	;RP1=0, select bank1
  6309  0480  0820               	movf	(_ACurVal)^080h,w
  6310  0481  1283               	bcf	status, 5	;RP0=0, select bank0
  6311  0482  1303               	bcf	status, 6	;RP1=0, select bank0
  6312  0483  00A2               	movwf	(?_WriteEEP)
  6313                           
  6314  0484  3024               	movlw	(024h)
  6315  0485  00AB               	movwf	(??_Writeeeprom+0)+0
  6316  0486  082B               	movf	(??_Writeeeprom+0)+0,w
  6317  0487  00A6               	movwf	0+(?_WriteEEP)+04h
  6318  0488  160A  158A  24D3   	fcall	_WriteEEP
              120A  118A         
  6319  048D  1283               	bcf	status, 5	;RP0=0, select bank0
  6320  048E  1303               	bcf	status, 6	;RP1=0, select bank0
  6321  048F  00AC               	movwf	(??_Writeeeprom+1)+0
  6322  0490  082C               	movf	(??_Writeeeprom+1)+0,w
  6323  0491  00B1               	movwf	(Writeeeprom@retval)
  6324  0492  2CB9               	goto	l11549
  6325                           	line	111
  6326                           	
  6327  0493                     l11545:	
  6328                           ;EEPRom.c: 111: }
  6329  0493  2CB9               	goto	l11549
  6330                           	line	97
  6331                           	
  6332  0494                     l2296:	
  6333                           	
  6334  0494                     l11547:	
  6335  0494  1283               	bcf	status, 5	;RP0=0, select bank0
  6336  0495  1303               	bcf	status, 6	;RP1=0, select bank0
  6337  0496  086C               	movf	(_Command),w
  6338                           	; Switch size 1, requested type "space"
  6339                           ; Number of cases is 11, Range of values is 65 to 90
  6340                           ; switch strategies available:
  6341                           ; Name         Instructions Cycles
  6342                           ; simple_byte           34    18 (average)
  6343                           ; direct_byte           89    11 (fixed)
  6344                           ; jumptable            263     9 (fixed)
  6345                           ;	Chosen strategy is simple_byte
  6346                           
  6347                           	opt asmopt_off
  6348  0497  3A41               	xorlw	65^0	; case 65
  6349  0498  1903               	skipnz
  6350  0499  2C6C               	goto	l11543
  6351  049A  3A03               	xorlw	66^65	; case 66
  6352  049B  1903               	skipnz
  6353  049C  2C02               	goto	l11537
  6354  049D  3A06               	xorlw	68^66	; case 68
  6355  049E  1903               	skipnz
  6356  049F  2BDA               	goto	l11535
  6357  04A0  3A02               	xorlw	70^68	; case 70
  6358  04A1  1903               	skipnz
  6359  04A2  2C45               	goto	l11541
  6360  04A3  3A0F               	xorlw	73^70	; case 73
  6361  04A4  1903               	skipnz
  6362  04A5  2BB3               	goto	l11533
  6363  04A6  3A19               	xorlw	80^73	; case 80
  6364  04A7  1903               	skipnz
  6365  04A8  2B8C               	goto	l11531
  6366  04A9  3A01               	xorlw	81^80	; case 81
  6367  04AA  1903               	skipnz
  6368  04AB  2CB9               	goto	l11549
  6369  04AC  3A03               	xorlw	82^81	; case 82
  6370  04AD  1903               	skipnz
  6371  04AE  2C29               	goto	l11539
  6372  04AF  3A01               	xorlw	83^82	; case 83
  6373  04B0  1903               	skipnz
  6374  04B1  2B3E               	goto	l11527
  6375  04B2  3A07               	xorlw	84^83	; case 84
  6376  04B3  1903               	skipnz
  6377  04B4  2B65               	goto	l11529
  6378  04B5  3A0E               	xorlw	90^84	; case 90
  6379  04B6  1903               	skipnz
  6380  04B7  2B1A               	goto	l11525
  6381  04B8  2CB9               	goto	l11549
  6382                           	opt asmopt_on
  6383                           
  6384                           	line	111
  6385                           	
  6386  04B9                     l2298:	
  6387                           	line	112
  6388                           	
  6389  04B9                     l11549:	
  6390                           ;EEPRom.c: 112: if(retval)
  6391  04B9  0831               	movf	(Writeeeprom@retval),w
  6392  04BA  1D03               	skipz
  6393  04BB  2CBD               	goto	u4610
  6394  04BC  2CCA               	goto	l11555
  6395  04BD                     u4610:
  6396                           	line	114
  6397                           	
  6398  04BD                     l11551:	
  6399                           ;EEPRom.c: 113: {
  6400                           ;EEPRom.c: 114: USARTWriteChar('G');USARTWriteString(strnw);
  6401  04BD  3047               	movlw	(047h)
  6402  04BE  160A  118A  2000   	fcall	_USARTWriteChar
              120A  118A         
  6403                           	
  6404  04C3                     l11553:	
  6405  04C3  3002               	movlw	((_strnw-__stringbase))&0ffh
  6406  04C4  160A  158A  2390   	fcall	_USARTWriteString
              120A  118A         
  6407                           	line	116
  6408                           ;EEPRom.c: 116: }
  6409  04C9  2CD7               	goto	l2311
  6410                           	line	117
  6411                           	
  6412  04CA                     l2309:	
  6413                           	line	119
  6414                           	
  6415  04CA                     l11555:	
  6416                           ;EEPRom.c: 117: else
  6417                           ;EEPRom.c: 118: {
  6418                           ;EEPRom.c: 119: USARTWriteChar('H');USARTWriteString(strnw);
  6419  04CA  3048               	movlw	(048h)
  6420  04CB  160A  118A  2000   	fcall	_USARTWriteChar
              120A  118A         
  6421                           	
  6422  04D0                     l11557:	
  6423  04D0  3002               	movlw	((_strnw-__stringbase))&0ffh
  6424  04D1  160A  158A  2390   	fcall	_USARTWriteString
              120A  118A         
  6425  04D6  2CD7               	goto	l2311
  6426                           	line	121
  6427                           	
  6428  04D7                     l2310:	
  6429                           	line	122
  6430                           	
  6431  04D7                     l2311:	
  6432  04D7  0008               	return
  6433                           	opt stack 0
  6434                           GLOBAL	__end_of_Writeeeprom
  6435  04D8                     	__end_of_Writeeeprom:
  6436 ;; =============== function _Writeeeprom ends ============
  6437                           
  6438                           	signat	_Writeeeprom,88
  6439                           	global	_Readeeprom
  6440                           psect	text1155,local,class=CODE,delta=2
  6441                           global __ptext1155
  6442  066F                     __ptext1155:
  6443                           
  6444 ;; *************** function _Readeeprom *****************
  6445 ;; Defined at:
  6446 ;;		line 32 in file "EEPRom.c"
  6447 ;; Parameters:    Size  Location     Type
  6448 ;;		None
  6449 ;; Auto vars:     Size  Location     Type
  6450 ;;		None
  6451 ;; Return value:  Size  Location     Type
  6452 ;;		None               void
  6453 ;; Registers used:
  6454 ;;		wreg, status,2, status,0, pclath, cstack
  6455 ;; Tracked objects:
  6456 ;;		On entry : 0/0
  6457 ;;		On exit  : 0/0
  6458 ;;		Unchanged: 0/0
  6459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6460 ;;      Params:         0       0       0       0       0
  6461 ;;      Locals:         0       0       0       0       0
  6462 ;;      Temps:          0       1       0       0       0
  6463 ;;      Totals:         0       1       0       0       0
  6464 ;;Total ram usage:        1 bytes
  6465 ;; Hardware stack levels used:    1
  6466 ;; Hardware stack levels required when called:    4
  6467 ;; This function calls:
  6468 ;;		_ReadEEP
  6469 ;;		___lltoft
  6470 ;; This function is called by:
  6471 ;;		_DispallCur
  6472 ;;		_initall
  6473 ;; This function uses a non-reentrant model
  6474 ;;
  6475                           psect	text1155
  6476                           	file	"EEPRom.c"
  6477                           	line	32
  6478                           	global	__size_of_Readeeprom
  6479  0188                     	__size_of_Readeeprom	equ	__end_of_Readeeprom-_Readeeprom
  6480                           	
  6481  066F                     _Readeeprom:	
  6482                           	opt	stack 2
  6483                           ; Regs used in _Readeeprom: [wreg+status,2+status,0+pclath+cstack]
  6484                           	line	33
  6485                           	
  6486  066F                     l11509:	
  6487                           ;EEPRom.c: 33: ZCurVal = ReadEEP(0);
  6488  066F  3000               	movlw	(0)
  6489  0670  160A  158A  259A   	fcall	_ReadEEP
              120A  118A         
  6490  0675  1283               	bcf	status, 5	;RP0=0, select bank0
  6491  0676  1303               	bcf	status, 6	;RP1=0, select bank0
  6492  0677  0826               	movf	(3+(?_ReadEEP)),w
  6493  0678  1683               	bsf	status, 5	;RP0=1, select bank1
  6494  0679  1303               	bcf	status, 6	;RP1=0, select bank1
  6495  067A  00CB               	movwf	(_ZCurVal+3)^080h
  6496  067B  1283               	bcf	status, 5	;RP0=0, select bank0
  6497  067C  1303               	bcf	status, 6	;RP1=0, select bank0
  6498  067D  0825               	movf	(2+(?_ReadEEP)),w
  6499  067E  1683               	bsf	status, 5	;RP0=1, select bank1
  6500  067F  1303               	bcf	status, 6	;RP1=0, select bank1
  6501  0680  00CA               	movwf	(_ZCurVal+2)^080h
  6502  0681  1283               	bcf	status, 5	;RP0=0, select bank0
  6503  0682  1303               	bcf	status, 6	;RP1=0, select bank0
  6504  0683  0824               	movf	(1+(?_ReadEEP)),w
  6505  0684  1683               	bsf	status, 5	;RP0=1, select bank1
  6506  0685  1303               	bcf	status, 6	;RP1=0, select bank1
  6507  0686  00C9               	movwf	(_ZCurVal+1)^080h
  6508  0687  1283               	bcf	status, 5	;RP0=0, select bank0
  6509  0688  1303               	bcf	status, 6	;RP1=0, select bank0
  6510  0689  0823               	movf	(0+(?_ReadEEP)),w
  6511  068A  1683               	bsf	status, 5	;RP0=1, select bank1
  6512  068B  1303               	bcf	status, 6	;RP1=0, select bank1
  6513  068C  00C8               	movwf	(_ZCurVal)^080h
  6514                           
  6515                           	line	34
  6516                           ;EEPRom.c: 34: SCurVal = ReadEEP(4);
  6517  068D  3004               	movlw	(04h)
  6518  068E  160A  158A  259A   	fcall	_ReadEEP
              120A  118A         
  6519  0693  1283               	bcf	status, 5	;RP0=0, select bank0
  6520  0694  1303               	bcf	status, 6	;RP1=0, select bank0
  6521  0695  0826               	movf	(3+(?_ReadEEP)),w
  6522  0696  1683               	bsf	status, 5	;RP0=1, select bank1
  6523  0697  1303               	bcf	status, 6	;RP1=0, select bank1
  6524  0698  00C3               	movwf	(_SCurVal+3)^080h
  6525  0699  1283               	bcf	status, 5	;RP0=0, select bank0
  6526  069A  1303               	bcf	status, 6	;RP1=0, select bank0
  6527  069B  0825               	movf	(2+(?_ReadEEP)),w
  6528  069C  1683               	bsf	status, 5	;RP0=1, select bank1
  6529  069D  1303               	bcf	status, 6	;RP1=0, select bank1
  6530  069E  00C2               	movwf	(_SCurVal+2)^080h
  6531  069F  1283               	bcf	status, 5	;RP0=0, select bank0
  6532  06A0  1303               	bcf	status, 6	;RP1=0, select bank0
  6533  06A1  0824               	movf	(1+(?_ReadEEP)),w
  6534  06A2  1683               	bsf	status, 5	;RP0=1, select bank1
  6535  06A3  1303               	bcf	status, 6	;RP1=0, select bank1
  6536  06A4  00C1               	movwf	(_SCurVal+1)^080h
  6537  06A5  1283               	bcf	status, 5	;RP0=0, select bank0
  6538  06A6  1303               	bcf	status, 6	;RP1=0, select bank0
  6539  06A7  0823               	movf	(0+(?_ReadEEP)),w
  6540  06A8  1683               	bsf	status, 5	;RP0=1, select bank1
  6541  06A9  1303               	bcf	status, 6	;RP1=0, select bank1
  6542  06AA  00C0               	movwf	(_SCurVal)^080h
  6543                           
  6544                           	line	35
  6545                           ;EEPRom.c: 35: NoTeeth = ReadEEP(8);
  6546  06AB  3008               	movlw	(08h)
  6547  06AC  160A  158A  259A   	fcall	_ReadEEP
              120A  118A         
  6548  06B1  1283               	bcf	status, 5	;RP0=0, select bank0
  6549  06B2  1303               	bcf	status, 6	;RP1=0, select bank0
  6550  06B3  0826               	movf	(3+(?_ReadEEP)),w
  6551  06B4  1683               	bsf	status, 5	;RP0=1, select bank1
  6552  06B5  1303               	bcf	status, 6	;RP1=0, select bank1
  6553  06B6  00BB               	movwf	(_NoTeeth+3)^080h
  6554  06B7  1283               	bcf	status, 5	;RP0=0, select bank0
  6555  06B8  1303               	bcf	status, 6	;RP1=0, select bank0
  6556  06B9  0825               	movf	(2+(?_ReadEEP)),w
  6557  06BA  1683               	bsf	status, 5	;RP0=1, select bank1
  6558  06BB  1303               	bcf	status, 6	;RP1=0, select bank1
  6559  06BC  00BA               	movwf	(_NoTeeth+2)^080h
  6560  06BD  1283               	bcf	status, 5	;RP0=0, select bank0
  6561  06BE  1303               	bcf	status, 6	;RP1=0, select bank0
  6562  06BF  0824               	movf	(1+(?_ReadEEP)),w
  6563  06C0  1683               	bsf	status, 5	;RP0=1, select bank1
  6564  06C1  1303               	bcf	status, 6	;RP1=0, select bank1
  6565  06C2  00B9               	movwf	(_NoTeeth+1)^080h
  6566  06C3  1283               	bcf	status, 5	;RP0=0, select bank0
  6567  06C4  1303               	bcf	status, 6	;RP1=0, select bank0
  6568  06C5  0823               	movf	(0+(?_ReadEEP)),w
  6569  06C6  1683               	bsf	status, 5	;RP0=1, select bank1
  6570  06C7  1303               	bcf	status, 6	;RP1=0, select bank1
  6571  06C8  00B8               	movwf	(_NoTeeth)^080h
  6572                           
  6573                           	line	37
  6574                           ;EEPRom.c: 37: PCurVal = ReadEEP(12);
  6575  06C9  300C               	movlw	(0Ch)
  6576  06CA  160A  158A  259A   	fcall	_ReadEEP
              120A  118A         
  6577  06CF  1283               	bcf	status, 5	;RP0=0, select bank0
  6578  06D0  1303               	bcf	status, 6	;RP1=0, select bank0
  6579  06D1  0826               	movf	(3+(?_ReadEEP)),w
  6580  06D2  1683               	bsf	status, 5	;RP0=1, select bank1
  6581  06D3  1303               	bcf	status, 6	;RP1=0, select bank1
  6582  06D4  00BF               	movwf	(_PCurVal+3)^080h
  6583  06D5  1283               	bcf	status, 5	;RP0=0, select bank0
  6584  06D6  1303               	bcf	status, 6	;RP1=0, select bank0
  6585  06D7  0825               	movf	(2+(?_ReadEEP)),w
  6586  06D8  1683               	bsf	status, 5	;RP0=1, select bank1
  6587  06D9  1303               	bcf	status, 6	;RP1=0, select bank1
  6588  06DA  00BE               	movwf	(_PCurVal+2)^080h
  6589  06DB  1283               	bcf	status, 5	;RP0=0, select bank0
  6590  06DC  1303               	bcf	status, 6	;RP1=0, select bank0
  6591  06DD  0824               	movf	(1+(?_ReadEEP)),w
  6592  06DE  1683               	bsf	status, 5	;RP0=1, select bank1
  6593  06DF  1303               	bcf	status, 6	;RP1=0, select bank1
  6594  06E0  00BD               	movwf	(_PCurVal+1)^080h
  6595  06E1  1283               	bcf	status, 5	;RP0=0, select bank0
  6596  06E2  1303               	bcf	status, 6	;RP1=0, select bank0
  6597  06E3  0823               	movf	(0+(?_ReadEEP)),w
  6598  06E4  1683               	bsf	status, 5	;RP0=1, select bank1
  6599  06E5  1303               	bcf	status, 6	;RP1=0, select bank1
  6600  06E6  00BC               	movwf	(_PCurVal)^080h
  6601                           
  6602                           	line	38
  6603                           ;EEPRom.c: 38: ICurVal = ReadEEP(16);
  6604  06E7  3010               	movlw	(010h)
  6605  06E8  160A  158A  259A   	fcall	_ReadEEP
              120A  118A         
  6606  06ED  1283               	bcf	status, 5	;RP0=0, select bank0
  6607  06EE  1303               	bcf	status, 6	;RP1=0, select bank0
  6608  06EF  0826               	movf	(3+(?_ReadEEP)),w
  6609  06F0  1683               	bsf	status, 5	;RP0=1, select bank1
  6610  06F1  1303               	bcf	status, 6	;RP1=0, select bank1
  6611  06F2  00B7               	movwf	(_ICurVal+3)^080h
  6612  06F3  1283               	bcf	status, 5	;RP0=0, select bank0
  6613  06F4  1303               	bcf	status, 6	;RP1=0, select bank0
  6614  06F5  0825               	movf	(2+(?_ReadEEP)),w
  6615  06F6  1683               	bsf	status, 5	;RP0=1, select bank1
  6616  06F7  1303               	bcf	status, 6	;RP1=0, select bank1
  6617  06F8  00B6               	movwf	(_ICurVal+2)^080h
  6618  06F9  1283               	bcf	status, 5	;RP0=0, select bank0
  6619  06FA  1303               	bcf	status, 6	;RP1=0, select bank0
  6620  06FB  0824               	movf	(1+(?_ReadEEP)),w
  6621  06FC  1683               	bsf	status, 5	;RP0=1, select bank1
  6622  06FD  1303               	bcf	status, 6	;RP1=0, select bank1
  6623  06FE  00B5               	movwf	(_ICurVal+1)^080h
  6624  06FF  1283               	bcf	status, 5	;RP0=0, select bank0
  6625  0700  1303               	bcf	status, 6	;RP1=0, select bank0
  6626  0701  0823               	movf	(0+(?_ReadEEP)),w
  6627  0702  1683               	bsf	status, 5	;RP0=1, select bank1
  6628  0703  1303               	bcf	status, 6	;RP1=0, select bank1
  6629  0704  00B4               	movwf	(_ICurVal)^080h
  6630                           
  6631                           	line	39
  6632                           ;EEPRom.c: 39: DCurVal = ReadEEP(20);
  6633  0705  3014               	movlw	(014h)
  6634  0706  160A  158A  259A   	fcall	_ReadEEP
              120A  118A         
  6635  070B  1283               	bcf	status, 5	;RP0=0, select bank0
  6636  070C  1303               	bcf	status, 6	;RP1=0, select bank0
  6637  070D  0826               	movf	(3+(?_ReadEEP)),w
  6638  070E  1683               	bsf	status, 5	;RP0=1, select bank1
  6639  070F  1303               	bcf	status, 6	;RP1=0, select bank1
  6640  0710  00B3               	movwf	(_DCurVal+3)^080h
  6641  0711  1283               	bcf	status, 5	;RP0=0, select bank0
  6642  0712  1303               	bcf	status, 6	;RP1=0, select bank0
  6643  0713  0825               	movf	(2+(?_ReadEEP)),w
  6644  0714  1683               	bsf	status, 5	;RP0=1, select bank1
  6645  0715  1303               	bcf	status, 6	;RP1=0, select bank1
  6646  0716  00B2               	movwf	(_DCurVal+2)^080h
  6647  0717  1283               	bcf	status, 5	;RP0=0, select bank0
  6648  0718  1303               	bcf	status, 6	;RP1=0, select bank0
  6649  0719  0824               	movf	(1+(?_ReadEEP)),w
  6650  071A  1683               	bsf	status, 5	;RP0=1, select bank1
  6651  071B  1303               	bcf	status, 6	;RP1=0, select bank1
  6652  071C  00B1               	movwf	(_DCurVal+1)^080h
  6653  071D  1283               	bcf	status, 5	;RP0=0, select bank0
  6654  071E  1303               	bcf	status, 6	;RP1=0, select bank0
  6655  071F  0823               	movf	(0+(?_ReadEEP)),w
  6656  0720  1683               	bsf	status, 5	;RP0=1, select bank1
  6657  0721  1303               	bcf	status, 6	;RP1=0, select bank1
  6658  0722  00B0               	movwf	(_DCurVal)^080h
  6659                           
  6660                           	line	40
  6661                           ;EEPRom.c: 40: BCurVal= ReadEEP(24);
  6662  0723  3018               	movlw	(018h)
  6663  0724  160A  158A  259A   	fcall	_ReadEEP
              120A  118A         
  6664  0729  1283               	bcf	status, 5	;RP0=0, select bank0
  6665  072A  1303               	bcf	status, 6	;RP1=0, select bank0
  6666  072B  0826               	movf	(3+(?_ReadEEP)),w
  6667  072C  1683               	bsf	status, 5	;RP0=1, select bank1
  6668  072D  1303               	bcf	status, 6	;RP1=0, select bank1
  6669  072E  00A7               	movwf	(_BCurVal+3)^080h
  6670  072F  1283               	bcf	status, 5	;RP0=0, select bank0
  6671  0730  1303               	bcf	status, 6	;RP1=0, select bank0
  6672  0731  0825               	movf	(2+(?_ReadEEP)),w
  6673  0732  1683               	bsf	status, 5	;RP0=1, select bank1
  6674  0733  1303               	bcf	status, 6	;RP1=0, select bank1
  6675  0734  00A6               	movwf	(_BCurVal+2)^080h
  6676  0735  1283               	bcf	status, 5	;RP0=0, select bank0
  6677  0736  1303               	bcf	status, 6	;RP1=0, select bank0
  6678  0737  0824               	movf	(1+(?_ReadEEP)),w
  6679  0738  1683               	bsf	status, 5	;RP0=1, select bank1
  6680  0739  1303               	bcf	status, 6	;RP1=0, select bank1
  6681  073A  00A5               	movwf	(_BCurVal+1)^080h
  6682  073B  1283               	bcf	status, 5	;RP0=0, select bank0
  6683  073C  1303               	bcf	status, 6	;RP1=0, select bank0
  6684  073D  0823               	movf	(0+(?_ReadEEP)),w
  6685  073E  1683               	bsf	status, 5	;RP0=1, select bank1
  6686  073F  1303               	bcf	status, 6	;RP1=0, select bank1
  6687  0740  00A4               	movwf	(_BCurVal)^080h
  6688                           
  6689                           	line	41
  6690                           ;EEPRom.c: 41: CLKVIZ = ReadEEP(28);
  6691  0741  301C               	movlw	(01Ch)
  6692  0742  160A  158A  259A   	fcall	_ReadEEP
              120A  118A         
  6693  0747  1283               	bcf	status, 5	;RP0=0, select bank0
  6694  0748  1303               	bcf	status, 6	;RP1=0, select bank0
  6695  0749  0823               	movf	0+(((0+(?_ReadEEP)))),w
  6696  074A  00B3               	movwf	(??_Readeeprom+0)+0
  6697  074B  0833               	movf	(??_Readeeprom+0)+0,w
  6698  074C  00EB               	movwf	(_CLKVIZ)
  6699                           	line	42
  6700                           ;EEPRom.c: 42: BoardFreq =ReadEEP(32);
  6701  074D  3020               	movlw	(020h)
  6702  074E  160A  158A  259A   	fcall	_ReadEEP
              120A  118A         
  6703  0753  1283               	bcf	status, 5	;RP0=0, select bank0
  6704  0754  1303               	bcf	status, 6	;RP1=0, select bank0
  6705  0755  0826               	movf	(3+(?_ReadEEP)),w
  6706  0756  1683               	bsf	status, 5	;RP0=1, select bank1
  6707  0757  1303               	bcf	status, 6	;RP1=0, select bank1
  6708  0758  00AB               	movwf	(_BoardFreq+3)^080h
  6709  0759  1283               	bcf	status, 5	;RP0=0, select bank0
  6710  075A  1303               	bcf	status, 6	;RP1=0, select bank0
  6711  075B  0825               	movf	(2+(?_ReadEEP)),w
  6712  075C  1683               	bsf	status, 5	;RP0=1, select bank1
  6713  075D  1303               	bcf	status, 6	;RP1=0, select bank1
  6714  075E  00AA               	movwf	(_BoardFreq+2)^080h
  6715  075F  1283               	bcf	status, 5	;RP0=0, select bank0
  6716  0760  1303               	bcf	status, 6	;RP1=0, select bank0
  6717  0761  0824               	movf	(1+(?_ReadEEP)),w
  6718  0762  1683               	bsf	status, 5	;RP0=1, select bank1
  6719  0763  1303               	bcf	status, 6	;RP1=0, select bank1
  6720  0764  00A9               	movwf	(_BoardFreq+1)^080h
  6721  0765  1283               	bcf	status, 5	;RP0=0, select bank0
  6722  0766  1303               	bcf	status, 6	;RP1=0, select bank0
  6723  0767  0823               	movf	(0+(?_ReadEEP)),w
  6724  0768  1683               	bsf	status, 5	;RP0=1, select bank1
  6725  0769  1303               	bcf	status, 6	;RP1=0, select bank1
  6726  076A  00A8               	movwf	(_BoardFreq)^080h
  6727                           
  6728                           	line	43
  6729                           ;EEPRom.c: 43: ACurVal = ReadEEP(36);
  6730  076B  3024               	movlw	(024h)
  6731  076C  160A  158A  259A   	fcall	_ReadEEP
              120A  118A         
  6732  0771  1283               	bcf	status, 5	;RP0=0, select bank0
  6733  0772  1303               	bcf	status, 6	;RP1=0, select bank0
  6734  0773  0826               	movf	(3+(?_ReadEEP)),w
  6735  0774  1683               	bsf	status, 5	;RP0=1, select bank1
  6736  0775  1303               	bcf	status, 6	;RP1=0, select bank1
  6737  0776  00A3               	movwf	(_ACurVal+3)^080h
  6738  0777  1283               	bcf	status, 5	;RP0=0, select bank0
  6739  0778  1303               	bcf	status, 6	;RP1=0, select bank0
  6740  0779  0825               	movf	(2+(?_ReadEEP)),w
  6741  077A  1683               	bsf	status, 5	;RP0=1, select bank1
  6742  077B  1303               	bcf	status, 6	;RP1=0, select bank1
  6743  077C  00A2               	movwf	(_ACurVal+2)^080h
  6744  077D  1283               	bcf	status, 5	;RP0=0, select bank0
  6745  077E  1303               	bcf	status, 6	;RP1=0, select bank0
  6746  077F  0824               	movf	(1+(?_ReadEEP)),w
  6747  0780  1683               	bsf	status, 5	;RP0=1, select bank1
  6748  0781  1303               	bcf	status, 6	;RP1=0, select bank1
  6749  0782  00A1               	movwf	(_ACurVal+1)^080h
  6750  0783  1283               	bcf	status, 5	;RP0=0, select bank0
  6751  0784  1303               	bcf	status, 6	;RP1=0, select bank0
  6752  0785  0823               	movf	(0+(?_ReadEEP)),w
  6753  0786  1683               	bsf	status, 5	;RP0=1, select bank1
  6754  0787  1303               	bcf	status, 6	;RP1=0, select bank1
  6755  0788  00A0               	movwf	(_ACurVal)^080h
  6756                           
  6757                           	line	45
  6758                           	
  6759  0789                     l11511:	
  6760                           ;EEPRom.c: 45: if( CLKVIZ == 1 ) ANTICLKVIZ = 0;
  6761  0789  1283               	bcf	status, 5	;RP0=0, select bank0
  6762  078A  1303               	bcf	status, 6	;RP1=0, select bank0
  6763  078B  086B               	movf	(_CLKVIZ),w
  6764  078C  3A01               	xorlw	01h
  6765  078D  1D03               	skipz
  6766  078E  2F90               	goto	u4601
  6767  078F  2F91               	goto	u4600
  6768  0790                     u4601:
  6769  0790  2F93               	goto	l11515
  6770  0791                     u4600:
  6771                           	
  6772  0791                     l11513:	
  6773  0791  01EA               	clrf	(_ANTICLKVIZ)
  6774  0792  2F97               	goto	l11517
  6775                           	line	46
  6776                           	
  6777  0793                     l2275:	
  6778                           	
  6779  0793                     l11515:	
  6780                           ;EEPRom.c: 46: else ANTICLKVIZ = 1;
  6781  0793  01EA               	clrf	(_ANTICLKVIZ)
  6782  0794  1403               	bsf	status,0
  6783  0795  0DEA               	rlf	(_ANTICLKVIZ),f
  6784  0796  2F97               	goto	l11517
  6785                           	
  6786  0797                     l2276:	
  6787                           	line	48
  6788                           	
  6789  0797                     l11517:	
  6790                           ;EEPRom.c: 48: Ti = ICurVal;
  6791  0797  1683               	bsf	status, 5	;RP0=1, select bank1
  6792  0798  1303               	bcf	status, 6	;RP1=0, select bank1
  6793  0799  0837               	movf	(_ICurVal+3)^080h,w
  6794  079A  1683               	bsf	status, 5	;RP0=1, select bank3
  6795  079B  1703               	bsf	status, 6	;RP1=1, select bank3
  6796  079C  00AB               	movwf	(_Ti+3)^0180h
  6797  079D  1683               	bsf	status, 5	;RP0=1, select bank1
  6798  079E  1303               	bcf	status, 6	;RP1=0, select bank1
  6799  079F  0836               	movf	(_ICurVal+2)^080h,w
  6800  07A0  1683               	bsf	status, 5	;RP0=1, select bank3
  6801  07A1  1703               	bsf	status, 6	;RP1=1, select bank3
  6802  07A2  00AA               	movwf	(_Ti+2)^0180h
  6803  07A3  1683               	bsf	status, 5	;RP0=1, select bank1
  6804  07A4  1303               	bcf	status, 6	;RP1=0, select bank1
  6805  07A5  0835               	movf	(_ICurVal+1)^080h,w
  6806  07A6  1683               	bsf	status, 5	;RP0=1, select bank3
  6807  07A7  1703               	bsf	status, 6	;RP1=1, select bank3
  6808  07A8  00A9               	movwf	(_Ti+1)^0180h
  6809  07A9  1683               	bsf	status, 5	;RP0=1, select bank1
  6810  07AA  1303               	bcf	status, 6	;RP1=0, select bank1
  6811  07AB  0834               	movf	(_ICurVal)^080h,w
  6812  07AC  1683               	bsf	status, 5	;RP0=1, select bank3
  6813  07AD  1703               	bsf	status, 6	;RP1=1, select bank3
  6814  07AE  00A8               	movwf	(_Ti)^0180h
  6815                           
  6816                           	line	49
  6817                           	
  6818  07AF                     l11519:	
  6819                           ;EEPRom.c: 49: Td = DCurVal;
  6820  07AF  1683               	bsf	status, 5	;RP0=1, select bank1
  6821  07B0  1303               	bcf	status, 6	;RP1=0, select bank1
  6822  07B1  0833               	movf	(_DCurVal+3)^080h,w
  6823  07B2  1283               	bcf	status, 5	;RP0=0, select bank0
  6824  07B3  1303               	bcf	status, 6	;RP1=0, select bank0
  6825  07B4  00B0               	movwf	(?___lltoft+3)
  6826  07B5  1683               	bsf	status, 5	;RP0=1, select bank1
  6827  07B6  1303               	bcf	status, 6	;RP1=0, select bank1
  6828  07B7  0832               	movf	(_DCurVal+2)^080h,w
  6829  07B8  1283               	bcf	status, 5	;RP0=0, select bank0
  6830  07B9  1303               	bcf	status, 6	;RP1=0, select bank0
  6831  07BA  00AF               	movwf	(?___lltoft+2)
  6832  07BB  1683               	bsf	status, 5	;RP0=1, select bank1
  6833  07BC  1303               	bcf	status, 6	;RP1=0, select bank1
  6834  07BD  0831               	movf	(_DCurVal+1)^080h,w
  6835  07BE  1283               	bcf	status, 5	;RP0=0, select bank0
  6836  07BF  1303               	bcf	status, 6	;RP1=0, select bank0
  6837  07C0  00AE               	movwf	(?___lltoft+1)
  6838  07C1  1683               	bsf	status, 5	;RP0=1, select bank1
  6839  07C2  1303               	bcf	status, 6	;RP1=0, select bank1
  6840  07C3  0830               	movf	(_DCurVal)^080h,w
  6841  07C4  1283               	bcf	status, 5	;RP0=0, select bank0
  6842  07C5  1303               	bcf	status, 6	;RP1=0, select bank0
  6843  07C6  00AD               	movwf	(?___lltoft)
  6844                           
  6845  07C7  160A  158A  249D   	fcall	___lltoft
              120A  118A         
  6846  07CC  1283               	bcf	status, 5	;RP0=0, select bank0
  6847  07CD  1303               	bcf	status, 6	;RP1=0, select bank0
  6848  07CE  082D               	movf	(0+(?___lltoft)),w
  6849  07CF  1683               	bsf	status, 5	;RP0=1, select bank3
  6850  07D0  1703               	bsf	status, 6	;RP1=1, select bank3
  6851  07D1  00AC               	movwf	(_Td)^0180h
  6852  07D2  1283               	bcf	status, 5	;RP0=0, select bank0
  6853  07D3  1303               	bcf	status, 6	;RP1=0, select bank0
  6854  07D4  082E               	movf	(1+(?___lltoft)),w
  6855  07D5  1683               	bsf	status, 5	;RP0=1, select bank3
  6856  07D6  1703               	bsf	status, 6	;RP1=1, select bank3
  6857  07D7  00AD               	movwf	(_Td+1)^0180h
  6858  07D8  1283               	bcf	status, 5	;RP0=0, select bank0
  6859  07D9  1303               	bcf	status, 6	;RP1=0, select bank0
  6860  07DA  082F               	movf	(2+(?___lltoft)),w
  6861  07DB  1683               	bsf	status, 5	;RP0=1, select bank3
  6862  07DC  1703               	bsf	status, 6	;RP1=1, select bank3
  6863  07DD  00AE               	movwf	(_Td+2)^0180h
  6864                           	line	50
  6865                           	
  6866  07DE                     l11521:	
  6867                           ;EEPRom.c: 50: Pb = PCurVal;
  6868  07DE  1683               	bsf	status, 5	;RP0=1, select bank1
  6869  07DF  1303               	bcf	status, 6	;RP1=0, select bank1
  6870  07E0  083F               	movf	(_PCurVal+3)^080h,w
  6871  07E1  1683               	bsf	status, 5	;RP0=1, select bank3
  6872  07E2  1703               	bsf	status, 6	;RP1=1, select bank3
  6873  07E3  00CE               	movwf	(_Pb+3)^0180h
  6874  07E4  1683               	bsf	status, 5	;RP0=1, select bank1
  6875  07E5  1303               	bcf	status, 6	;RP1=0, select bank1
  6876  07E6  083E               	movf	(_PCurVal+2)^080h,w
  6877  07E7  1683               	bsf	status, 5	;RP0=1, select bank3
  6878  07E8  1703               	bsf	status, 6	;RP1=1, select bank3
  6879  07E9  00CD               	movwf	(_Pb+2)^0180h
  6880  07EA  1683               	bsf	status, 5	;RP0=1, select bank1
  6881  07EB  1303               	bcf	status, 6	;RP1=0, select bank1
  6882  07EC  083D               	movf	(_PCurVal+1)^080h,w
  6883  07ED  1683               	bsf	status, 5	;RP0=1, select bank3
  6884  07EE  1703               	bsf	status, 6	;RP1=1, select bank3
  6885  07EF  00CC               	movwf	(_Pb+1)^0180h
  6886  07F0  1683               	bsf	status, 5	;RP0=1, select bank1
  6887  07F1  1303               	bcf	status, 6	;RP1=0, select bank1
  6888  07F2  083C               	movf	(_PCurVal)^080h,w
  6889  07F3  1683               	bsf	status, 5	;RP0=1, select bank3
  6890  07F4  1703               	bsf	status, 6	;RP1=1, select bank3
  6891  07F5  00CB               	movwf	(_Pb)^0180h
  6892                           
  6893                           	line	51
  6894                           	
  6895  07F6                     l2277:	
  6896  07F6  0008               	return
  6897                           	opt stack 0
  6898                           GLOBAL	__end_of_Readeeprom
  6899  07F7                     	__end_of_Readeeprom:
  6900 ;; =============== function _Readeeprom ends ============
  6901                           
  6902                           	signat	_Readeeprom,88
  6903                           	global	___lltoft
  6904                           psect	text1156,local,class=CODE,delta=2
  6905                           global __ptext1156
  6906  1C9D                     __ptext1156:
  6907                           
  6908 ;; *************** function ___lltoft *****************
  6909 ;; Defined at:
  6910 ;;		line 36 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\lltoft.c"
  6911 ;; Parameters:    Size  Location     Type
  6912 ;;  c               4   13[BANK0 ] unsigned long 
  6913 ;; Auto vars:     Size  Location     Type
  6914 ;;  exp             1   18[BANK0 ] unsigned char 
  6915 ;; Return value:  Size  Location     Type
  6916 ;;                  3   13[BANK0 ] float 
  6917 ;; Registers used:
  6918 ;;		wreg, status,2, status,0, pclath, cstack
  6919 ;; Tracked objects:
  6920 ;;		On entry : 0/0
  6921 ;;		On exit  : 0/0
  6922 ;;		Unchanged: 0/0
  6923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6924 ;;      Params:         0       4       0       0       0
  6925 ;;      Locals:         0       1       0       0       0
  6926 ;;      Temps:          0       1       0       0       0
  6927 ;;      Totals:         0       6       0       0       0
  6928 ;;Total ram usage:        6 bytes
  6929 ;; Hardware stack levels used:    1
  6930 ;; Hardware stack levels required when called:    3
  6931 ;; This function calls:
  6932 ;;		___ftpack
  6933 ;; This function is called by:
  6934 ;;		_Readeeprom
  6935 ;;		_Calc_PID_const
  6936 ;;		_initall
  6937 ;; This function uses a non-reentrant model
  6938 ;;
  6939                           psect	text1156
  6940                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\lltoft.c"
  6941                           	line	36
  6942                           	global	__size_of___lltoft
  6943  0036                     	__size_of___lltoft	equ	__end_of___lltoft-___lltoft
  6944                           	
  6945  1C9D                     ___lltoft:	
  6946                           	opt	stack 3
  6947                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  6948                           	line	38
  6949                           	
  6950  1C9D                     l11499:	
  6951  1C9D  308E               	movlw	(08Eh)
  6952  1C9E  1283               	bcf	status, 5	;RP0=0, select bank0
  6953  1C9F  1303               	bcf	status, 6	;RP1=0, select bank0
  6954  1CA0  00B1               	movwf	(??___lltoft+0)+0
  6955  1CA1  0831               	movf	(??___lltoft+0)+0,w
  6956  1CA2  00B2               	movwf	(___lltoft@exp)
  6957                           	line	41
  6958  1CA3  2CB2               	goto	l11503
  6959                           	
  6960  1CA4                     l7931:	
  6961                           	line	42
  6962                           	
  6963  1CA4                     l11501:	
  6964  1CA4  3001               	movlw	01h
  6965  1CA5                     u4585:
  6966  1CA5  1003               	clrc
  6967  1CA6  0CB0               	rrf	(___lltoft@c+3),f
  6968  1CA7  0CAF               	rrf	(___lltoft@c+2),f
  6969  1CA8  0CAE               	rrf	(___lltoft@c+1),f
  6970  1CA9  0CAD               	rrf	(___lltoft@c),f
  6971  1CAA  3EFF               	addlw	-1
  6972  1CAB  1D03               	skipz
  6973  1CAC  2CA5               	goto	u4585
  6974                           
  6975                           	line	43
  6976  1CAD  3001               	movlw	(01h)
  6977  1CAE  00B1               	movwf	(??___lltoft+0)+0
  6978  1CAF  0831               	movf	(??___lltoft+0)+0,w
  6979  1CB0  07B2               	addwf	(___lltoft@exp),f
  6980  1CB1  2CB2               	goto	l11503
  6981                           	line	44
  6982                           	
  6983  1CB2                     l7930:	
  6984                           	line	41
  6985                           	
  6986  1CB2                     l11503:	
  6987  1CB2  30FF               	movlw	high highword(-16777216)
  6988  1CB3  0530               	andwf	(___lltoft@c+3),w
  6989  1CB4  1D03               	btfss	status,2
  6990  1CB5  2CB7               	goto	u4591
  6991  1CB6  2CB8               	goto	u4590
  6992  1CB7                     u4591:
  6993  1CB7  2CA4               	goto	l11501
  6994  1CB8                     u4590:
  6995  1CB8  2CB9               	goto	l11505
  6996                           	
  6997  1CB9                     l7932:	
  6998                           	line	45
  6999                           	
  7000  1CB9                     l11505:	
  7001  1CB9  082D               	movf	(___lltoft@c),w
  7002  1CBA  00A0               	movwf	(?___ftpack)
  7003  1CBB  082E               	movf	(___lltoft@c+1),w
  7004  1CBC  00A1               	movwf	(?___ftpack+1)
  7005  1CBD  082F               	movf	(___lltoft@c+2),w
  7006  1CBE  00A2               	movwf	(?___ftpack+2)
  7007  1CBF  0832               	movf	(___lltoft@exp),w
  7008  1CC0  00B1               	movwf	(??___lltoft+0)+0
  7009  1CC1  0831               	movf	(??___lltoft+0)+0,w
  7010  1CC2  00A3               	movwf	0+(?___ftpack)+03h
  7011  1CC3  01A4               	clrf	0+(?___ftpack)+04h
  7012  1CC4  160A  158A  2783   	fcall	___ftpack
              160A  158A         
  7013  1CC9  1283               	bcf	status, 5	;RP0=0, select bank0
  7014  1CCA  1303               	bcf	status, 6	;RP1=0, select bank0
  7015  1CCB  0820               	movf	(0+(?___ftpack)),w
  7016  1CCC  00AD               	movwf	(?___lltoft)
  7017  1CCD  0821               	movf	(1+(?___ftpack)),w
  7018  1CCE  00AE               	movwf	(?___lltoft+1)
  7019  1CCF  0822               	movf	(2+(?___ftpack)),w
  7020  1CD0  00AF               	movwf	(?___lltoft+2)
  7021  1CD1  2CD2               	goto	l7933
  7022                           	
  7023  1CD2                     l11507:	
  7024                           	line	46
  7025                           	
  7026  1CD2                     l7933:	
  7027  1CD2  0008               	return
  7028                           	opt stack 0
  7029                           GLOBAL	__end_of___lltoft
  7030  1CD3                     	__end_of___lltoft:
  7031 ;; =============== function ___lltoft ends ============
  7032                           
  7033                           	signat	___lltoft,4219
  7034                           	global	___awtoft
  7035                           psect	text1157,local,class=CODE,delta=2
  7036                           global __ptext1157
  7037  1BB5                     __ptext1157:
  7038                           
  7039 ;; *************** function ___awtoft *****************
  7040 ;; Defined at:
  7041 ;;		line 33 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\awtoft.c"
  7042 ;; Parameters:    Size  Location     Type
  7043 ;;  c               2    8[BANK0 ] int 
  7044 ;; Auto vars:     Size  Location     Type
  7045 ;;  sign            1   13[BANK0 ] unsigned char 
  7046 ;; Return value:  Size  Location     Type
  7047 ;;                  3    8[BANK0 ] float 
  7048 ;; Registers used:
  7049 ;;		wreg, status,2, status,0, pclath, cstack
  7050 ;; Tracked objects:
  7051 ;;		On entry : 0/0
  7052 ;;		On exit  : 0/0
  7053 ;;		Unchanged: 0/0
  7054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7055 ;;      Params:         0       3       0       0       0
  7056 ;;      Locals:         0       1       0       0       0
  7057 ;;      Temps:          0       2       0       0       0
  7058 ;;      Totals:         0       6       0       0       0
  7059 ;;Total ram usage:        6 bytes
  7060 ;; Hardware stack levels used:    1
  7061 ;; Hardware stack levels required when called:    3
  7062 ;; This function calls:
  7063 ;;		___ftpack
  7064 ;; This function is called by:
  7065 ;;		_Calc_Err
  7066 ;; This function uses a non-reentrant model
  7067 ;;
  7068                           psect	text1157
  7069                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\awtoft.c"
  7070                           	line	33
  7071                           	global	__size_of___awtoft
  7072  002C                     	__size_of___awtoft	equ	__end_of___awtoft-___awtoft
  7073                           	
  7074  1BB5                     ___awtoft:	
  7075                           	opt	stack 3
  7076                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  7077                           	line	36
  7078                           	
  7079  1BB5                     l11491:	
  7080  1BB5  1283               	bcf	status, 5	;RP0=0, select bank0
  7081  1BB6  1303               	bcf	status, 6	;RP1=0, select bank0
  7082  1BB7  01AD               	clrf	(___awtoft@sign)
  7083                           	line	37
  7084  1BB8  1FA9               	btfss	(___awtoft@c+1),7
  7085  1BB9  2BBB               	goto	u4571
  7086  1BBA  2BBC               	goto	u4570
  7087  1BBB                     u4571:
  7088  1BBB  2BC5               	goto	l11495
  7089  1BBC                     u4570:
  7090                           	line	38
  7091                           	
  7092  1BBC                     l11493:	
  7093  1BBC  09A8               	comf	(___awtoft@c),f
  7094  1BBD  09A9               	comf	(___awtoft@c+1),f
  7095  1BBE  0AA8               	incf	(___awtoft@c),f
  7096  1BBF  1903               	skipnz
  7097  1BC0  0AA9               	incf	(___awtoft@c+1),f
  7098                           	line	39
  7099  1BC1  01AD               	clrf	(___awtoft@sign)
  7100  1BC2  1403               	bsf	status,0
  7101  1BC3  0DAD               	rlf	(___awtoft@sign),f
  7102  1BC4  2BC5               	goto	l11495
  7103                           	line	40
  7104                           	
  7105  1BC5                     l7829:	
  7106                           	line	41
  7107                           	
  7108  1BC5                     l11495:	
  7109  1BC5  0828               	movf	(___awtoft@c),w
  7110  1BC6  00A0               	movwf	(?___ftpack)
  7111  1BC7  0829               	movf	(___awtoft@c+1),w
  7112  1BC8  00A1               	movwf	(?___ftpack+1)
  7113  1BC9  01A2               	clrf	(?___ftpack+2)
  7114  1BCA  308E               	movlw	(08Eh)
  7115  1BCB  00AB               	movwf	(??___awtoft+0)+0
  7116  1BCC  082B               	movf	(??___awtoft+0)+0,w
  7117  1BCD  00A3               	movwf	0+(?___ftpack)+03h
  7118  1BCE  082D               	movf	(___awtoft@sign),w
  7119  1BCF  00AC               	movwf	(??___awtoft+1)+0
  7120  1BD0  082C               	movf	(??___awtoft+1)+0,w
  7121  1BD1  00A4               	movwf	0+(?___ftpack)+04h
  7122  1BD2  160A  158A  2783   	fcall	___ftpack
              160A  158A         
  7123  1BD7  1283               	bcf	status, 5	;RP0=0, select bank0
  7124  1BD8  1303               	bcf	status, 6	;RP1=0, select bank0
  7125  1BD9  0820               	movf	(0+(?___ftpack)),w
  7126  1BDA  00A8               	movwf	(?___awtoft)
  7127  1BDB  0821               	movf	(1+(?___ftpack)),w
  7128  1BDC  00A9               	movwf	(?___awtoft+1)
  7129  1BDD  0822               	movf	(2+(?___ftpack)),w
  7130  1BDE  00AA               	movwf	(?___awtoft+2)
  7131  1BDF  2BE0               	goto	l7830
  7132                           	
  7133  1BE0                     l11497:	
  7134                           	line	42
  7135                           	
  7136  1BE0                     l7830:	
  7137  1BE0  0008               	return
  7138                           	opt stack 0
  7139                           GLOBAL	__end_of___awtoft
  7140  1BE1                     	__end_of___awtoft:
  7141 ;; =============== function ___awtoft ends ============
  7142                           
  7143                           	signat	___awtoft,4219
  7144                           	global	___ftmul
  7145                           psect	text1158,local,class=CODE,delta=2
  7146                           global __ptext1158
  7147  1618                     __ptext1158:
  7148                           
  7149 ;; *************** function ___ftmul *****************
  7150 ;; Defined at:
  7151 ;;		line 52 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\ftmul.c"
  7152 ;; Parameters:    Size  Location     Type
  7153 ;;  f1              3   11[BANK0 ] float 
  7154 ;;  f2              3   14[BANK0 ] float 
  7155 ;; Auto vars:     Size  Location     Type
  7156 ;;  f3_as_produc    3   22[BANK0 ] unsigned um
  7157 ;;  sign            1   26[BANK0 ] unsigned char 
  7158 ;;  cntr            1   25[BANK0 ] unsigned char 
  7159 ;;  exp             1   21[BANK0 ] unsigned char 
  7160 ;; Return value:  Size  Location     Type
  7161 ;;                  3   11[BANK0 ] float 
  7162 ;; Registers used:
  7163 ;;		wreg, status,2, status,0, pclath, cstack
  7164 ;; Tracked objects:
  7165 ;;		On entry : 0/0
  7166 ;;		On exit  : 0/0
  7167 ;;		Unchanged: 0/0
  7168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7169 ;;      Params:         0       6       0       0       0
  7170 ;;      Locals:         0       6       0       0       0
  7171 ;;      Temps:          0       4       0       0       0
  7172 ;;      Totals:         0      16       0       0       0
  7173 ;;Total ram usage:       16 bytes
  7174 ;; Hardware stack levels used:    1
  7175 ;; Hardware stack levels required when called:    3
  7176 ;; This function calls:
  7177 ;;		___ftpack
  7178 ;; This function is called by:
  7179 ;;		_Calc_PID_const
  7180 ;;		_Calc_PID_op
  7181 ;; This function uses a non-reentrant model
  7182 ;;
  7183                           psect	text1158
  7184                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\ftmul.c"
  7185                           	line	52
  7186                           	global	__size_of___ftmul
  7187  00EE                     	__size_of___ftmul	equ	__end_of___ftmul-___ftmul
  7188                           	
  7189  1618                     ___ftmul:	
  7190                           	opt	stack 3
  7191                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  7192                           	line	56
  7193                           	
  7194  1618                     l11441:	
  7195  1618  1283               	bcf	status, 5	;RP0=0, select bank0
  7196  1619  1303               	bcf	status, 6	;RP1=0, select bank0
  7197  161A  082B               	movf	(___ftmul@f1),w
  7198  161B  00B1               	movwf	((??___ftmul+0)+0)
  7199  161C  082C               	movf	(___ftmul@f1+1),w
  7200  161D  00B2               	movwf	((??___ftmul+0)+0+1)
  7201  161E  082D               	movf	(___ftmul@f1+2),w
  7202  161F  00B3               	movwf	((??___ftmul+0)+0+2)
  7203  1620  1003               	clrc
  7204  1621  0D32               	rlf	(??___ftmul+0)+1,w
  7205  1622  0D33               	rlf	(??___ftmul+0)+2,w
  7206  1623  00B4               	movwf	(??___ftmul+3)+0
  7207  1624  0834               	movf	(??___ftmul+3)+0,w
  7208  1625  00B5               	movwf	(___ftmul@exp)
  7209  1626  08B5               	movf	((___ftmul@exp)),f
  7210  1627  1D03               	skipz
  7211  1628  2E2A               	goto	u4431
  7212  1629  2E2B               	goto	u4430
  7213  162A                     u4431:
  7214  162A  2E33               	goto	l11447
  7215  162B                     u4430:
  7216                           	line	57
  7217                           	
  7218  162B                     l11443:	
  7219  162B  3000               	movlw	0x0
  7220  162C  00AB               	movwf	(?___ftmul)
  7221  162D  3000               	movlw	0x0
  7222  162E  00AC               	movwf	(?___ftmul+1)
  7223  162F  3000               	movlw	0x0
  7224  1630  00AD               	movwf	(?___ftmul+2)
  7225  1631  2F05               	goto	l7792
  7226                           	
  7227  1632                     l11445:	
  7228  1632  2F05               	goto	l7792
  7229                           	
  7230  1633                     l7791:	
  7231                           	line	58
  7232                           	
  7233  1633                     l11447:	
  7234  1633  082E               	movf	(___ftmul@f2),w
  7235  1634  00B1               	movwf	((??___ftmul+0)+0)
  7236  1635  082F               	movf	(___ftmul@f2+1),w
  7237  1636  00B2               	movwf	((??___ftmul+0)+0+1)
  7238  1637  0830               	movf	(___ftmul@f2+2),w
  7239  1638  00B3               	movwf	((??___ftmul+0)+0+2)
  7240  1639  1003               	clrc
  7241  163A  0D32               	rlf	(??___ftmul+0)+1,w
  7242  163B  0D33               	rlf	(??___ftmul+0)+2,w
  7243  163C  00B4               	movwf	(??___ftmul+3)+0
  7244  163D  0834               	movf	(??___ftmul+3)+0,w
  7245  163E  00BA               	movwf	(___ftmul@sign)
  7246  163F  08BA               	movf	((___ftmul@sign)),f
  7247  1640  1D03               	skipz
  7248  1641  2E43               	goto	u4441
  7249  1642  2E44               	goto	u4440
  7250  1643                     u4441:
  7251  1643  2E4C               	goto	l11453
  7252  1644                     u4440:
  7253                           	line	59
  7254                           	
  7255  1644                     l11449:	
  7256  1644  3000               	movlw	0x0
  7257  1645  00AB               	movwf	(?___ftmul)
  7258  1646  3000               	movlw	0x0
  7259  1647  00AC               	movwf	(?___ftmul+1)
  7260  1648  3000               	movlw	0x0
  7261  1649  00AD               	movwf	(?___ftmul+2)
  7262  164A  2F05               	goto	l7792
  7263                           	
  7264  164B                     l11451:	
  7265  164B  2F05               	goto	l7792
  7266                           	
  7267  164C                     l7793:	
  7268                           	line	60
  7269                           	
  7270  164C                     l11453:	
  7271  164C  083A               	movf	(___ftmul@sign),w
  7272  164D  3E7B               	addlw	07Bh
  7273  164E  00B1               	movwf	(??___ftmul+0)+0
  7274  164F  0831               	movf	(??___ftmul+0)+0,w
  7275  1650  07B5               	addwf	(___ftmul@exp),f
  7276                           	line	61
  7277  1651  082B               	movf	(___ftmul@f1),w
  7278  1652  00B1               	movwf	((??___ftmul+0)+0)
  7279  1653  082C               	movf	(___ftmul@f1+1),w
  7280  1654  00B2               	movwf	((??___ftmul+0)+0+1)
  7281  1655  082D               	movf	(___ftmul@f1+2),w
  7282  1656  00B3               	movwf	((??___ftmul+0)+0+2)
  7283  1657  3010               	movlw	010h
  7284  1658                     u4455:
  7285  1658  1003               	clrc
  7286  1659  0CB3               	rrf	(??___ftmul+0)+2,f
  7287  165A  0CB2               	rrf	(??___ftmul+0)+1,f
  7288  165B  0CB1               	rrf	(??___ftmul+0)+0,f
  7289  165C                     u4450:
  7290  165C  3EFF               	addlw	-1
  7291  165D  1D03               	skipz
  7292  165E  2E58               	goto	u4455
  7293  165F  0831               	movf	0+(??___ftmul+0)+0,w
  7294  1660  00B4               	movwf	(??___ftmul+3)+0
  7295  1661  0834               	movf	(??___ftmul+3)+0,w
  7296  1662  00BA               	movwf	(___ftmul@sign)
  7297                           	line	62
  7298  1663  082E               	movf	(___ftmul@f2),w
  7299  1664  00B1               	movwf	((??___ftmul+0)+0)
  7300  1665  082F               	movf	(___ftmul@f2+1),w
  7301  1666  00B2               	movwf	((??___ftmul+0)+0+1)
  7302  1667  0830               	movf	(___ftmul@f2+2),w
  7303  1668  00B3               	movwf	((??___ftmul+0)+0+2)
  7304  1669  3010               	movlw	010h
  7305  166A                     u4465:
  7306  166A  1003               	clrc
  7307  166B  0CB3               	rrf	(??___ftmul+0)+2,f
  7308  166C  0CB2               	rrf	(??___ftmul+0)+1,f
  7309  166D  0CB1               	rrf	(??___ftmul+0)+0,f
  7310  166E                     u4460:
  7311  166E  3EFF               	addlw	-1
  7312  166F  1D03               	skipz
  7313  1670  2E6A               	goto	u4465
  7314  1671  0831               	movf	0+(??___ftmul+0)+0,w
  7315  1672  00B4               	movwf	(??___ftmul+3)+0
  7316  1673  0834               	movf	(??___ftmul+3)+0,w
  7317  1674  06BA               	xorwf	(___ftmul@sign),f
  7318                           	line	63
  7319  1675  3080               	movlw	(080h)
  7320  1676  00B1               	movwf	(??___ftmul+0)+0
  7321  1677  0831               	movf	(??___ftmul+0)+0,w
  7322  1678  05BA               	andwf	(___ftmul@sign),f
  7323                           	line	64
  7324                           	
  7325  1679                     l11455:	
  7326  1679  17AC               	bsf	(___ftmul@f1)+(15/8),(15)&7
  7327                           	line	66
  7328                           	
  7329  167A                     l11457:	
  7330  167A  17AF               	bsf	(___ftmul@f2)+(15/8),(15)&7
  7331                           	line	67
  7332                           	
  7333  167B                     l11459:	
  7334  167B  30FF               	movlw	0FFh
  7335  167C  05AE               	andwf	(___ftmul@f2),f
  7336  167D  30FF               	movlw	0FFh
  7337  167E  05AF               	andwf	(___ftmul@f2+1),f
  7338  167F  3000               	movlw	0
  7339  1680  05B0               	andwf	(___ftmul@f2+2),f
  7340                           	line	68
  7341                           	
  7342  1681                     l11461:	
  7343  1681  3000               	movlw	0
  7344  1682  00B6               	movwf	(___ftmul@f3_as_product)
  7345  1683  3000               	movlw	0
  7346  1684  00B7               	movwf	(___ftmul@f3_as_product+1)
  7347  1685  3000               	movlw	0
  7348  1686  00B8               	movwf	(___ftmul@f3_as_product+2)
  7349                           	line	69
  7350                           	
  7351  1687                     l11463:	
  7352  1687  3007               	movlw	(07h)
  7353  1688  00B1               	movwf	(??___ftmul+0)+0
  7354  1689  0831               	movf	(??___ftmul+0)+0,w
  7355  168A  00B9               	movwf	(___ftmul@cntr)
  7356  168B  2E8C               	goto	l11465
  7357                           	line	70
  7358                           	
  7359  168C                     l7794:	
  7360                           	line	71
  7361                           	
  7362  168C                     l11465:	
  7363  168C  1C2B               	btfss	(___ftmul@f1),(0)&7
  7364  168D  2E8F               	goto	u4471
  7365  168E  2E90               	goto	u4470
  7366  168F                     u4471:
  7367  168F  2EA1               	goto	l11469
  7368  1690                     u4470:
  7369                           	line	72
  7370                           	
  7371  1690                     l11467:	
  7372  1690  082E               	movf	(___ftmul@f2),w
  7373  1691  07B6               	addwf	(___ftmul@f3_as_product),f
  7374  1692  082F               	movf	(___ftmul@f2+1),w
  7375  1693  1103               	clrz
  7376  1694  1803               	skipnc
  7377  1695  0A2F               	incf	(___ftmul@f2+1),w
  7378  1696  1903               	skipnz
  7379  1697  2E99               	goto	u4481
  7380  1698  07B7               	addwf	(___ftmul@f3_as_product+1),f
  7381  1699                     u4481:
  7382  1699  0830               	movf	(___ftmul@f2+2),w
  7383  169A  1103               	clrz
  7384  169B  1803               	skipnc
  7385  169C  0A30               	incf	(___ftmul@f2+2),w
  7386  169D  1903               	skipnz
  7387  169E  2EA0               	goto	u4482
  7388  169F  07B8               	addwf	(___ftmul@f3_as_product+2),f
  7389  16A0                     u4482:
  7390                           
  7391  16A0  2EA1               	goto	l11469
  7392                           	
  7393  16A1                     l7795:	
  7394                           	line	73
  7395                           	
  7396  16A1                     l11469:	
  7397  16A1  3001               	movlw	01h
  7398  16A2                     u4495:
  7399  16A2  1003               	clrc
  7400  16A3  0CAD               	rrf	(___ftmul@f1+2),f
  7401  16A4  0CAC               	rrf	(___ftmul@f1+1),f
  7402  16A5  0CAB               	rrf	(___ftmul@f1),f
  7403  16A6  3EFF               	addlw	-1
  7404  16A7  1D03               	skipz
  7405  16A8  2EA2               	goto	u4495
  7406                           
  7407                           	line	74
  7408                           	
  7409  16A9                     l11471:	
  7410  16A9  3001               	movlw	01h
  7411  16AA                     u4505:
  7412  16AA  1003               	clrc
  7413  16AB  0DAE               	rlf	(___ftmul@f2),f
  7414  16AC  0DAF               	rlf	(___ftmul@f2+1),f
  7415  16AD  0DB0               	rlf	(___ftmul@f2+2),f
  7416  16AE  3EFF               	addlw	-1
  7417  16AF  1D03               	skipz
  7418  16B0  2EAA               	goto	u4505
  7419                           	line	75
  7420                           	
  7421  16B1                     l11473:	
  7422  16B1  3001               	movlw	low(01h)
  7423  16B2  02B9               	subwf	(___ftmul@cntr),f
  7424  16B3  1D03               	btfss	status,2
  7425  16B4  2EB6               	goto	u4511
  7426  16B5  2EB7               	goto	u4510
  7427  16B6                     u4511:
  7428  16B6  2E8C               	goto	l11465
  7429  16B7                     u4510:
  7430  16B7  2EB8               	goto	l11475
  7431                           	
  7432  16B8                     l7796:	
  7433                           	line	76
  7434                           	
  7435  16B8                     l11475:	
  7436  16B8  3009               	movlw	(09h)
  7437  16B9  00B1               	movwf	(??___ftmul+0)+0
  7438  16BA  0831               	movf	(??___ftmul+0)+0,w
  7439  16BB  00B9               	movwf	(___ftmul@cntr)
  7440  16BC  2EBD               	goto	l11477
  7441                           	line	77
  7442                           	
  7443  16BD                     l7797:	
  7444                           	line	78
  7445                           	
  7446  16BD                     l11477:	
  7447  16BD  1C2B               	btfss	(___ftmul@f1),(0)&7
  7448  16BE  2EC0               	goto	u4521
  7449  16BF  2EC1               	goto	u4520
  7450  16C0                     u4521:
  7451  16C0  2ED2               	goto	l11481
  7452  16C1                     u4520:
  7453                           	line	79
  7454                           	
  7455  16C1                     l11479:	
  7456  16C1  082E               	movf	(___ftmul@f2),w
  7457  16C2  07B6               	addwf	(___ftmul@f3_as_product),f
  7458  16C3  082F               	movf	(___ftmul@f2+1),w
  7459  16C4  1103               	clrz
  7460  16C5  1803               	skipnc
  7461  16C6  0A2F               	incf	(___ftmul@f2+1),w
  7462  16C7  1903               	skipnz
  7463  16C8  2ECA               	goto	u4531
  7464  16C9  07B7               	addwf	(___ftmul@f3_as_product+1),f
  7465  16CA                     u4531:
  7466  16CA  0830               	movf	(___ftmul@f2+2),w
  7467  16CB  1103               	clrz
  7468  16CC  1803               	skipnc
  7469  16CD  0A30               	incf	(___ftmul@f2+2),w
  7470  16CE  1903               	skipnz
  7471  16CF  2ED1               	goto	u4532
  7472  16D0  07B8               	addwf	(___ftmul@f3_as_product+2),f
  7473  16D1                     u4532:
  7474                           
  7475  16D1  2ED2               	goto	l11481
  7476                           	
  7477  16D2                     l7798:	
  7478                           	line	80
  7479                           	
  7480  16D2                     l11481:	
  7481  16D2  3001               	movlw	01h
  7482  16D3                     u4545:
  7483  16D3  1003               	clrc
  7484  16D4  0CAD               	rrf	(___ftmul@f1+2),f
  7485  16D5  0CAC               	rrf	(___ftmul@f1+1),f
  7486  16D6  0CAB               	rrf	(___ftmul@f1),f
  7487  16D7  3EFF               	addlw	-1
  7488  16D8  1D03               	skipz
  7489  16D9  2ED3               	goto	u4545
  7490                           
  7491                           	line	81
  7492                           	
  7493  16DA                     l11483:	
  7494  16DA  3001               	movlw	01h
  7495  16DB                     u4555:
  7496  16DB  1003               	clrc
  7497  16DC  0CB8               	rrf	(___ftmul@f3_as_product+2),f
  7498  16DD  0CB7               	rrf	(___ftmul@f3_as_product+1),f
  7499  16DE  0CB6               	rrf	(___ftmul@f3_as_product),f
  7500  16DF  3EFF               	addlw	-1
  7501  16E0  1D03               	skipz
  7502  16E1  2EDB               	goto	u4555
  7503                           
  7504                           	line	82
  7505                           	
  7506  16E2                     l11485:	
  7507  16E2  3001               	movlw	low(01h)
  7508  16E3  02B9               	subwf	(___ftmul@cntr),f
  7509  16E4  1D03               	btfss	status,2
  7510  16E5  2EE7               	goto	u4561
  7511  16E6  2EE8               	goto	u4560
  7512  16E7                     u4561:
  7513  16E7  2EBD               	goto	l11477
  7514  16E8                     u4560:
  7515  16E8  2EE9               	goto	l11487
  7516                           	
  7517  16E9                     l7799:	
  7518                           	line	83
  7519                           	
  7520  16E9                     l11487:	
  7521  16E9  0836               	movf	(___ftmul@f3_as_product),w
  7522  16EA  00A0               	movwf	(?___ftpack)
  7523  16EB  0837               	movf	(___ftmul@f3_as_product+1),w
  7524  16EC  00A1               	movwf	(?___ftpack+1)
  7525  16ED  0838               	movf	(___ftmul@f3_as_product+2),w
  7526  16EE  00A2               	movwf	(?___ftpack+2)
  7527  16EF  0835               	movf	(___ftmul@exp),w
  7528  16F0  00B1               	movwf	(??___ftmul+0)+0
  7529  16F1  0831               	movf	(??___ftmul+0)+0,w
  7530  16F2  00A3               	movwf	0+(?___ftpack)+03h
  7531  16F3  083A               	movf	(___ftmul@sign),w
  7532  16F4  00B2               	movwf	(??___ftmul+1)+0
  7533  16F5  0832               	movf	(??___ftmul+1)+0,w
  7534  16F6  00A4               	movwf	0+(?___ftpack)+04h
  7535  16F7  160A  158A  2783   	fcall	___ftpack
              160A  118A         
  7536  16FC  1283               	bcf	status, 5	;RP0=0, select bank0
  7537  16FD  1303               	bcf	status, 6	;RP1=0, select bank0
  7538  16FE  0820               	movf	(0+(?___ftpack)),w
  7539  16FF  00AB               	movwf	(?___ftmul)
  7540  1700  0821               	movf	(1+(?___ftpack)),w
  7541  1701  00AC               	movwf	(?___ftmul+1)
  7542  1702  0822               	movf	(2+(?___ftpack)),w
  7543  1703  00AD               	movwf	(?___ftmul+2)
  7544  1704  2F05               	goto	l7792
  7545                           	
  7546  1705                     l11489:	
  7547                           	line	84
  7548                           	
  7549  1705                     l7792:	
  7550  1705  0008               	return
  7551                           	opt stack 0
  7552                           GLOBAL	__end_of___ftmul
  7553  1706                     	__end_of___ftmul:
  7554 ;; =============== function ___ftmul ends ============
  7555                           
  7556                           	signat	___ftmul,8315
  7557                           	global	___ftdiv
  7558                           psect	text1159,local,class=CODE,delta=2
  7559                           global __ptext1159
  7560  12ED                     __ptext1159:
  7561                           
  7562 ;; *************** function ___ftdiv *****************
  7563 ;; Defined at:
  7564 ;;		line 50 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\ftdiv.c"
  7565 ;; Parameters:    Size  Location     Type
  7566 ;;  f2              3   22[BANK0 ] float 
  7567 ;;  f1              3   25[BANK0 ] float 
  7568 ;; Auto vars:     Size  Location     Type
  7569 ;;  f3              3   33[BANK0 ] float 
  7570 ;;  sign            1   37[BANK0 ] unsigned char 
  7571 ;;  exp             1   36[BANK0 ] unsigned char 
  7572 ;;  cntr            1   32[BANK0 ] unsigned char 
  7573 ;; Return value:  Size  Location     Type
  7574 ;;                  3   22[BANK0 ] float 
  7575 ;; Registers used:
  7576 ;;		wreg, status,2, status,0, pclath, cstack
  7577 ;; Tracked objects:
  7578 ;;		On entry : 0/0
  7579 ;;		On exit  : 0/0
  7580 ;;		Unchanged: 0/0
  7581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7582 ;;      Params:         0       6       0       0       0
  7583 ;;      Locals:         0       6       0       0       0
  7584 ;;      Temps:          0       4       0       0       0
  7585 ;;      Totals:         0      16       0       0       0
  7586 ;;Total ram usage:       16 bytes
  7587 ;; Hardware stack levels used:    1
  7588 ;; Hardware stack levels required when called:    3
  7589 ;; This function calls:
  7590 ;;		___ftpack
  7591 ;; This function is called by:
  7592 ;;		_Calc_PID_const
  7593 ;;		_Calc_PID_op
  7594 ;; This function uses a non-reentrant model
  7595 ;;
  7596                           psect	text1159
  7597                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\ftdiv.c"
  7598                           	line	50
  7599                           	global	__size_of___ftdiv
  7600  00C8                     	__size_of___ftdiv	equ	__end_of___ftdiv-___ftdiv
  7601                           	
  7602  12ED                     ___ftdiv:	
  7603                           	opt	stack 3
  7604                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  7605                           	line	55
  7606                           	
  7607  12ED                     l11399:	
  7608  12ED  1283               	bcf	status, 5	;RP0=0, select bank0
  7609  12EE  1303               	bcf	status, 6	;RP1=0, select bank0
  7610  12EF  0839               	movf	(___ftdiv@f1),w
  7611  12F0  00BC               	movwf	((??___ftdiv+0)+0)
  7612  12F1  083A               	movf	(___ftdiv@f1+1),w
  7613  12F2  00BD               	movwf	((??___ftdiv+0)+0+1)
  7614  12F3  083B               	movf	(___ftdiv@f1+2),w
  7615  12F4  00BE               	movwf	((??___ftdiv+0)+0+2)
  7616  12F5  1003               	clrc
  7617  12F6  0D3D               	rlf	(??___ftdiv+0)+1,w
  7618  12F7  0D3E               	rlf	(??___ftdiv+0)+2,w
  7619  12F8  00BF               	movwf	(??___ftdiv+3)+0
  7620  12F9  083F               	movf	(??___ftdiv+3)+0,w
  7621  12FA  00C4               	movwf	(___ftdiv@exp)
  7622  12FB  08C4               	movf	((___ftdiv@exp)),f
  7623  12FC  1D03               	skipz
  7624  12FD  2AFF               	goto	u4351
  7625  12FE  2B00               	goto	u4350
  7626  12FF                     u4351:
  7627  12FF  2B08               	goto	l11405
  7628  1300                     u4350:
  7629                           	line	56
  7630                           	
  7631  1300                     l11401:	
  7632  1300  3000               	movlw	0x0
  7633  1301  00B6               	movwf	(?___ftdiv)
  7634  1302  3000               	movlw	0x0
  7635  1303  00B7               	movwf	(?___ftdiv+1)
  7636  1304  3000               	movlw	0x0
  7637  1305  00B8               	movwf	(?___ftdiv+2)
  7638  1306  2BB4               	goto	l7782
  7639                           	
  7640  1307                     l11403:	
  7641  1307  2BB4               	goto	l7782
  7642                           	
  7643  1308                     l7781:	
  7644                           	line	57
  7645                           	
  7646  1308                     l11405:	
  7647  1308  0836               	movf	(___ftdiv@f2),w
  7648  1309  00BC               	movwf	((??___ftdiv+0)+0)
  7649  130A  0837               	movf	(___ftdiv@f2+1),w
  7650  130B  00BD               	movwf	((??___ftdiv+0)+0+1)
  7651  130C  0838               	movf	(___ftdiv@f2+2),w
  7652  130D  00BE               	movwf	((??___ftdiv+0)+0+2)
  7653  130E  1003               	clrc
  7654  130F  0D3D               	rlf	(??___ftdiv+0)+1,w
  7655  1310  0D3E               	rlf	(??___ftdiv+0)+2,w
  7656  1311  00BF               	movwf	(??___ftdiv+3)+0
  7657  1312  083F               	movf	(??___ftdiv+3)+0,w
  7658  1313  00C5               	movwf	(___ftdiv@sign)
  7659  1314  08C5               	movf	((___ftdiv@sign)),f
  7660  1315  1D03               	skipz
  7661  1316  2B18               	goto	u4361
  7662  1317  2B19               	goto	u4360
  7663  1318                     u4361:
  7664  1318  2B21               	goto	l11411
  7665  1319                     u4360:
  7666                           	line	58
  7667                           	
  7668  1319                     l11407:	
  7669  1319  3000               	movlw	0x0
  7670  131A  00B6               	movwf	(?___ftdiv)
  7671  131B  3000               	movlw	0x0
  7672  131C  00B7               	movwf	(?___ftdiv+1)
  7673  131D  3000               	movlw	0x0
  7674  131E  00B8               	movwf	(?___ftdiv+2)
  7675  131F  2BB4               	goto	l7782
  7676                           	
  7677  1320                     l11409:	
  7678  1320  2BB4               	goto	l7782
  7679                           	
  7680  1321                     l7783:	
  7681                           	line	59
  7682                           	
  7683  1321                     l11411:	
  7684  1321  3000               	movlw	0
  7685  1322  00C1               	movwf	(___ftdiv@f3)
  7686  1323  3000               	movlw	0
  7687  1324  00C2               	movwf	(___ftdiv@f3+1)
  7688  1325  3000               	movlw	0
  7689  1326  00C3               	movwf	(___ftdiv@f3+2)
  7690                           	line	60
  7691                           	
  7692  1327                     l11413:	
  7693  1327  3089               	movlw	(089h)
  7694  1328  0745               	addwf	(___ftdiv@sign),w
  7695  1329  00BC               	movwf	(??___ftdiv+0)+0
  7696  132A  083C               	movf	0+(??___ftdiv+0)+0,w
  7697  132B  02C4               	subwf	(___ftdiv@exp),f
  7698                           	line	61
  7699                           	
  7700  132C                     l11415:	
  7701  132C  0839               	movf	(___ftdiv@f1),w
  7702  132D  00BC               	movwf	((??___ftdiv+0)+0)
  7703  132E  083A               	movf	(___ftdiv@f1+1),w
  7704  132F  00BD               	movwf	((??___ftdiv+0)+0+1)
  7705  1330  083B               	movf	(___ftdiv@f1+2),w
  7706  1331  00BE               	movwf	((??___ftdiv+0)+0+2)
  7707  1332  3010               	movlw	010h
  7708  1333                     u4375:
  7709  1333  1003               	clrc
  7710  1334  0CBE               	rrf	(??___ftdiv+0)+2,f
  7711  1335  0CBD               	rrf	(??___ftdiv+0)+1,f
  7712  1336  0CBC               	rrf	(??___ftdiv+0)+0,f
  7713  1337                     u4370:
  7714  1337  3EFF               	addlw	-1
  7715  1338  1D03               	skipz
  7716  1339  2B33               	goto	u4375
  7717  133A  083C               	movf	0+(??___ftdiv+0)+0,w
  7718  133B  00BF               	movwf	(??___ftdiv+3)+0
  7719  133C  083F               	movf	(??___ftdiv+3)+0,w
  7720  133D  00C5               	movwf	(___ftdiv@sign)
  7721                           	line	62
  7722                           	
  7723  133E                     l11417:	
  7724  133E  0836               	movf	(___ftdiv@f2),w
  7725  133F  00BC               	movwf	((??___ftdiv+0)+0)
  7726  1340  0837               	movf	(___ftdiv@f2+1),w
  7727  1341  00BD               	movwf	((??___ftdiv+0)+0+1)
  7728  1342  0838               	movf	(___ftdiv@f2+2),w
  7729  1343  00BE               	movwf	((??___ftdiv+0)+0+2)
  7730  1344  3010               	movlw	010h
  7731  1345                     u4385:
  7732  1345  1003               	clrc
  7733  1346  0CBE               	rrf	(??___ftdiv+0)+2,f
  7734  1347  0CBD               	rrf	(??___ftdiv+0)+1,f
  7735  1348  0CBC               	rrf	(??___ftdiv+0)+0,f
  7736  1349                     u4380:
  7737  1349  3EFF               	addlw	-1
  7738  134A  1D03               	skipz
  7739  134B  2B45               	goto	u4385
  7740  134C  083C               	movf	0+(??___ftdiv+0)+0,w
  7741  134D  00BF               	movwf	(??___ftdiv+3)+0
  7742  134E  083F               	movf	(??___ftdiv+3)+0,w
  7743  134F  06C5               	xorwf	(___ftdiv@sign),f
  7744                           	line	63
  7745                           	
  7746  1350                     l11419:	
  7747  1350  3080               	movlw	(080h)
  7748  1351  00BC               	movwf	(??___ftdiv+0)+0
  7749  1352  083C               	movf	(??___ftdiv+0)+0,w
  7750  1353  05C5               	andwf	(___ftdiv@sign),f
  7751                           	line	64
  7752                           	
  7753  1354                     l11421:	
  7754  1354  17BA               	bsf	(___ftdiv@f1)+(15/8),(15)&7
  7755                           	line	65
  7756  1355  30FF               	movlw	0FFh
  7757  1356  05B9               	andwf	(___ftdiv@f1),f
  7758  1357  30FF               	movlw	0FFh
  7759  1358  05BA               	andwf	(___ftdiv@f1+1),f
  7760  1359  3000               	movlw	0
  7761  135A  05BB               	andwf	(___ftdiv@f1+2),f
  7762                           	line	66
  7763                           	
  7764  135B                     l11423:	
  7765  135B  17B7               	bsf	(___ftdiv@f2)+(15/8),(15)&7
  7766                           	line	67
  7767  135C  30FF               	movlw	0FFh
  7768  135D  05B6               	andwf	(___ftdiv@f2),f
  7769  135E  30FF               	movlw	0FFh
  7770  135F  05B7               	andwf	(___ftdiv@f2+1),f
  7771  1360  3000               	movlw	0
  7772  1361  05B8               	andwf	(___ftdiv@f2+2),f
  7773                           	line	68
  7774  1362  3018               	movlw	(018h)
  7775  1363  00BC               	movwf	(??___ftdiv+0)+0
  7776  1364  083C               	movf	(??___ftdiv+0)+0,w
  7777  1365  00C0               	movwf	(___ftdiv@cntr)
  7778  1366  2B67               	goto	l11425
  7779                           	line	69
  7780                           	
  7781  1367                     l7784:	
  7782                           	line	70
  7783                           	
  7784  1367                     l11425:	
  7785  1367  3001               	movlw	01h
  7786  1368                     u4395:
  7787  1368  1003               	clrc
  7788  1369  0DC1               	rlf	(___ftdiv@f3),f
  7789  136A  0DC2               	rlf	(___ftdiv@f3+1),f
  7790  136B  0DC3               	rlf	(___ftdiv@f3+2),f
  7791  136C  3EFF               	addlw	-1
  7792  136D  1D03               	skipz
  7793  136E  2B68               	goto	u4395
  7794                           	line	71
  7795                           	
  7796  136F                     l11427:	
  7797  136F  0838               	movf	(___ftdiv@f2+2),w
  7798  1370  023B               	subwf	(___ftdiv@f1+2),w
  7799  1371  1D03               	skipz
  7800  1372  2B79               	goto	u4405
  7801  1373  0837               	movf	(___ftdiv@f2+1),w
  7802  1374  023A               	subwf	(___ftdiv@f1+1),w
  7803  1375  1D03               	skipz
  7804  1376  2B79               	goto	u4405
  7805  1377  0836               	movf	(___ftdiv@f2),w
  7806  1378  0239               	subwf	(___ftdiv@f1),w
  7807  1379                     u4405:
  7808  1379  1C03               	skipc
  7809  137A  2B7C               	goto	u4401
  7810  137B  2B7D               	goto	u4400
  7811  137C                     u4401:
  7812  137C  2B89               	goto	l11433
  7813  137D                     u4400:
  7814                           	line	72
  7815                           	
  7816  137D                     l11429:	
  7817  137D  0836               	movf	(___ftdiv@f2),w
  7818  137E  02B9               	subwf	(___ftdiv@f1),f
  7819  137F  0837               	movf	(___ftdiv@f2+1),w
  7820  1380  1C03               	skipc
  7821  1381  0F37               	incfsz	(___ftdiv@f2+1),w
  7822  1382  02BA               	subwf	(___ftdiv@f1+1),f
  7823  1383  0838               	movf	(___ftdiv@f2+2),w
  7824  1384  1C03               	skipc
  7825  1385  0A38               	incf	(___ftdiv@f2+2),w
  7826  1386  02BB               	subwf	(___ftdiv@f1+2),f
  7827                           	line	73
  7828                           	
  7829  1387                     l11431:	
  7830  1387  1441               	bsf	(___ftdiv@f3)+(0/8),(0)&7
  7831  1388  2B89               	goto	l11433
  7832                           	line	74
  7833                           	
  7834  1389                     l7785:	
  7835                           	line	75
  7836                           	
  7837  1389                     l11433:	
  7838  1389  3001               	movlw	01h
  7839  138A                     u4415:
  7840  138A  1003               	clrc
  7841  138B  0DB9               	rlf	(___ftdiv@f1),f
  7842  138C  0DBA               	rlf	(___ftdiv@f1+1),f
  7843  138D  0DBB               	rlf	(___ftdiv@f1+2),f
  7844  138E  3EFF               	addlw	-1
  7845  138F  1D03               	skipz
  7846  1390  2B8A               	goto	u4415
  7847                           	line	76
  7848                           	
  7849  1391                     l11435:	
  7850  1391  3001               	movlw	low(01h)
  7851  1392  02C0               	subwf	(___ftdiv@cntr),f
  7852  1393  1D03               	btfss	status,2
  7853  1394  2B96               	goto	u4421
  7854  1395  2B97               	goto	u4420
  7855  1396                     u4421:
  7856  1396  2B67               	goto	l11425
  7857  1397                     u4420:
  7858  1397  2B98               	goto	l11437
  7859                           	
  7860  1398                     l7786:	
  7861                           	line	77
  7862                           	
  7863  1398                     l11437:	
  7864  1398  0841               	movf	(___ftdiv@f3),w
  7865  1399  00A0               	movwf	(?___ftpack)
  7866  139A  0842               	movf	(___ftdiv@f3+1),w
  7867  139B  00A1               	movwf	(?___ftpack+1)
  7868  139C  0843               	movf	(___ftdiv@f3+2),w
  7869  139D  00A2               	movwf	(?___ftpack+2)
  7870  139E  0844               	movf	(___ftdiv@exp),w
  7871  139F  00BC               	movwf	(??___ftdiv+0)+0
  7872  13A0  083C               	movf	(??___ftdiv+0)+0,w
  7873  13A1  00A3               	movwf	0+(?___ftpack)+03h
  7874  13A2  0845               	movf	(___ftdiv@sign),w
  7875  13A3  00BD               	movwf	(??___ftdiv+1)+0
  7876  13A4  083D               	movf	(??___ftdiv+1)+0,w
  7877  13A5  00A4               	movwf	0+(?___ftpack)+04h
  7878  13A6  160A  158A  2783   	fcall	___ftpack
              160A  118A         
  7879  13AB  1283               	bcf	status, 5	;RP0=0, select bank0
  7880  13AC  1303               	bcf	status, 6	;RP1=0, select bank0
  7881  13AD  0820               	movf	(0+(?___ftpack)),w
  7882  13AE  00B6               	movwf	(?___ftdiv)
  7883  13AF  0821               	movf	(1+(?___ftpack)),w
  7884  13B0  00B7               	movwf	(?___ftdiv+1)
  7885  13B1  0822               	movf	(2+(?___ftpack)),w
  7886  13B2  00B8               	movwf	(?___ftdiv+2)
  7887  13B3  2BB4               	goto	l7782
  7888                           	
  7889  13B4                     l11439:	
  7890                           	line	78
  7891                           	
  7892  13B4                     l7782:	
  7893  13B4  0008               	return
  7894                           	opt stack 0
  7895                           GLOBAL	__end_of___ftdiv
  7896  13B5                     	__end_of___ftdiv:
  7897 ;; =============== function ___ftdiv ends ============
  7898                           
  7899                           	signat	___ftdiv,8315
  7900                           	global	___ftadd
  7901                           psect	text1160,local,class=CODE,delta=2
  7902                           global __ptext1160
  7903  0D35                     __ptext1160:
  7904                           
  7905 ;; *************** function ___ftadd *****************
  7906 ;; Defined at:
  7907 ;;		line 87 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\ftadd.c"
  7908 ;; Parameters:    Size  Location     Type
  7909 ;;  f1              3   38[BANK0 ] float 
  7910 ;;  f2              3   41[BANK0 ] float 
  7911 ;; Auto vars:     Size  Location     Type
  7912 ;;  exp1            1   50[BANK0 ] unsigned char 
  7913 ;;  exp2            1   49[BANK0 ] unsigned char 
  7914 ;;  sign            1   48[BANK0 ] unsigned char 
  7915 ;; Return value:  Size  Location     Type
  7916 ;;                  3   38[BANK0 ] float 
  7917 ;; Registers used:
  7918 ;;		wreg, status,2, status,0, pclath, cstack
  7919 ;; Tracked objects:
  7920 ;;		On entry : 0/0
  7921 ;;		On exit  : 0/0
  7922 ;;		Unchanged: 0/0
  7923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7924 ;;      Params:         0       6       0       0       0
  7925 ;;      Locals:         0       3       0       0       0
  7926 ;;      Temps:          0       4       0       0       0
  7927 ;;      Totals:         0      13       0       0       0
  7928 ;;Total ram usage:       13 bytes
  7929 ;; Hardware stack levels used:    1
  7930 ;; Hardware stack levels required when called:    3
  7931 ;; This function calls:
  7932 ;;		___ftpack
  7933 ;; This function is called by:
  7934 ;;		_Calc_PID_const
  7935 ;;		_Calc_PID_op
  7936 ;;		___ftsub
  7937 ;; This function uses a non-reentrant model
  7938 ;;
  7939                           psect	text1160
  7940                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\ftadd.c"
  7941                           	line	87
  7942                           	global	__size_of___ftadd
  7943  0146                     	__size_of___ftadd	equ	__end_of___ftadd-___ftadd
  7944                           	
  7945  0D35                     ___ftadd:	
  7946                           	opt	stack 3
  7947                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  7948                           	line	90
  7949                           	
  7950  0D35                     l11329:	
  7951  0D35  1283               	bcf	status, 5	;RP0=0, select bank0
  7952  0D36  1303               	bcf	status, 6	;RP1=0, select bank0
  7953  0D37  0846               	movf	(___ftadd@f1),w
  7954  0D38  00CC               	movwf	((??___ftadd+0)+0)
  7955  0D39  0847               	movf	(___ftadd@f1+1),w
  7956  0D3A  00CD               	movwf	((??___ftadd+0)+0+1)
  7957  0D3B  0848               	movf	(___ftadd@f1+2),w
  7958  0D3C  00CE               	movwf	((??___ftadd+0)+0+2)
  7959  0D3D  1003               	clrc
  7960  0D3E  0D4D               	rlf	(??___ftadd+0)+1,w
  7961  0D3F  0D4E               	rlf	(??___ftadd+0)+2,w
  7962  0D40  00CF               	movwf	(??___ftadd+3)+0
  7963  0D41  084F               	movf	(??___ftadd+3)+0,w
  7964  0D42  00D2               	movwf	(___ftadd@exp1)
  7965                           	line	91
  7966  0D43  0849               	movf	(___ftadd@f2),w
  7967  0D44  00CC               	movwf	((??___ftadd+0)+0)
  7968  0D45  084A               	movf	(___ftadd@f2+1),w
  7969  0D46  00CD               	movwf	((??___ftadd+0)+0+1)
  7970  0D47  084B               	movf	(___ftadd@f2+2),w
  7971  0D48  00CE               	movwf	((??___ftadd+0)+0+2)
  7972  0D49  1003               	clrc
  7973  0D4A  0D4D               	rlf	(??___ftadd+0)+1,w
  7974  0D4B  0D4E               	rlf	(??___ftadd+0)+2,w
  7975  0D4C  00CF               	movwf	(??___ftadd+3)+0
  7976  0D4D  084F               	movf	(??___ftadd+3)+0,w
  7977  0D4E  00D1               	movwf	(___ftadd@exp2)
  7978                           	line	92
  7979                           	
  7980  0D4F                     l11331:	
  7981  0D4F  0852               	movf	(___ftadd@exp1),w
  7982  0D50  1D03               	skipz
  7983  0D51  2D53               	goto	u4110
  7984  0D52  2D64               	goto	l11337
  7985  0D53                     u4110:
  7986                           	
  7987  0D53                     l11333:	
  7988  0D53  0851               	movf	(___ftadd@exp2),w
  7989  0D54  0252               	subwf	(___ftadd@exp1),w
  7990  0D55  1803               	skipnc
  7991  0D56  2D58               	goto	u4121
  7992  0D57  2D59               	goto	u4120
  7993  0D58                     u4121:
  7994  0D58  2D6C               	goto	l11341
  7995  0D59                     u4120:
  7996                           	
  7997  0D59                     l11335:	
  7998  0D59  0352               	decf	(___ftadd@exp1),w
  7999  0D5A  3AFF               	xorlw	0ffh
  8000  0D5B  0751               	addwf	(___ftadd@exp2),w
  8001  0D5C  00CC               	movwf	(??___ftadd+0)+0
  8002  0D5D  3019               	movlw	(019h)
  8003  0D5E  024C               	subwf	0+(??___ftadd+0)+0,w
  8004  0D5F  1C03               	skipc
  8005  0D60  2D62               	goto	u4131
  8006  0D61  2D63               	goto	u4130
  8007  0D62                     u4131:
  8008  0D62  2D6C               	goto	l11341
  8009  0D63                     u4130:
  8010  0D63  2D64               	goto	l11337
  8011                           	
  8012  0D64                     l7739:	
  8013                           	line	93
  8014                           	
  8015  0D64                     l11337:	
  8016  0D64  0849               	movf	(___ftadd@f2),w
  8017  0D65  00C6               	movwf	(?___ftadd)
  8018  0D66  084A               	movf	(___ftadd@f2+1),w
  8019  0D67  00C7               	movwf	(?___ftadd+1)
  8020  0D68  084B               	movf	(___ftadd@f2+2),w
  8021  0D69  00C8               	movwf	(?___ftadd+2)
  8022  0D6A  2E7A               	goto	l7740
  8023                           	
  8024  0D6B                     l11339:	
  8025  0D6B  2E7A               	goto	l7740
  8026                           	
  8027  0D6C                     l7737:	
  8028                           	line	94
  8029                           	
  8030  0D6C                     l11341:	
  8031  0D6C  0851               	movf	(___ftadd@exp2),w
  8032  0D6D  1D03               	skipz
  8033  0D6E  2D70               	goto	u4140
  8034  0D6F  2D80               	goto	l7743
  8035  0D70                     u4140:
  8036                           	
  8037  0D70                     l11343:	
  8038  0D70  0852               	movf	(___ftadd@exp1),w
  8039  0D71  0251               	subwf	(___ftadd@exp2),w
  8040  0D72  1803               	skipnc
  8041  0D73  2D75               	goto	u4151
  8042  0D74  2D76               	goto	u4150
  8043  0D75                     u4151:
  8044  0D75  2D81               	goto	l11347
  8045  0D76                     u4150:
  8046                           	
  8047  0D76                     l11345:	
  8048  0D76  0351               	decf	(___ftadd@exp2),w
  8049  0D77  3AFF               	xorlw	0ffh
  8050  0D78  0752               	addwf	(___ftadd@exp1),w
  8051  0D79  00CC               	movwf	(??___ftadd+0)+0
  8052  0D7A  3019               	movlw	(019h)
  8053  0D7B  024C               	subwf	0+(??___ftadd+0)+0,w
  8054  0D7C  1C03               	skipc
  8055  0D7D  2D7F               	goto	u4161
  8056  0D7E  2D80               	goto	u4160
  8057  0D7F                     u4161:
  8058  0D7F  2D81               	goto	l11347
  8059  0D80                     u4160:
  8060                           	
  8061  0D80                     l7743:	
  8062                           	line	95
  8063  0D80  2E7A               	goto	l7740
  8064                           	
  8065  0D81                     l7741:	
  8066                           	line	96
  8067                           	
  8068  0D81                     l11347:	
  8069  0D81  3006               	movlw	(06h)
  8070  0D82  00CC               	movwf	(??___ftadd+0)+0
  8071  0D83  084C               	movf	(??___ftadd+0)+0,w
  8072  0D84  00D0               	movwf	(___ftadd@sign)
  8073                           	line	97
  8074                           	
  8075  0D85                     l11349:	
  8076  0D85  1FC8               	btfss	(___ftadd@f1+2),(23)&7
  8077  0D86  2D88               	goto	u4171
  8078  0D87  2D89               	goto	u4170
  8079  0D88                     u4171:
  8080  0D88  2D8A               	goto	l7744
  8081  0D89                     u4170:
  8082                           	line	98
  8083                           	
  8084  0D89                     l11351:	
  8085  0D89  17D0               	bsf	(___ftadd@sign)+(7/8),(7)&7
  8086                           	
  8087  0D8A                     l7744:	
  8088                           	line	99
  8089  0D8A  1FCB               	btfss	(___ftadd@f2+2),(23)&7
  8090  0D8B  2D8D               	goto	u4181
  8091  0D8C  2D8E               	goto	u4180
  8092  0D8D                     u4181:
  8093  0D8D  2D8F               	goto	l7745
  8094  0D8E                     u4180:
  8095                           	line	100
  8096                           	
  8097  0D8E                     l11353:	
  8098  0D8E  1750               	bsf	(___ftadd@sign)+(6/8),(6)&7
  8099                           	
  8100  0D8F                     l7745:	
  8101                           	line	101
  8102  0D8F  17C7               	bsf	(___ftadd@f1)+(15/8),(15)&7
  8103                           	line	102
  8104                           	
  8105  0D90                     l11355:	
  8106  0D90  30FF               	movlw	0FFh
  8107  0D91  05C6               	andwf	(___ftadd@f1),f
  8108  0D92  30FF               	movlw	0FFh
  8109  0D93  05C7               	andwf	(___ftadd@f1+1),f
  8110  0D94  3000               	movlw	0
  8111  0D95  05C8               	andwf	(___ftadd@f1+2),f
  8112                           	line	103
  8113                           	
  8114  0D96                     l11357:	
  8115  0D96  17CA               	bsf	(___ftadd@f2)+(15/8),(15)&7
  8116                           	line	104
  8117  0D97  30FF               	movlw	0FFh
  8118  0D98  05C9               	andwf	(___ftadd@f2),f
  8119  0D99  30FF               	movlw	0FFh
  8120  0D9A  05CA               	andwf	(___ftadd@f2+1),f
  8121  0D9B  3000               	movlw	0
  8122  0D9C  05CB               	andwf	(___ftadd@f2+2),f
  8123                           	line	106
  8124  0D9D  0851               	movf	(___ftadd@exp2),w
  8125  0D9E  0252               	subwf	(___ftadd@exp1),w
  8126  0D9F  1803               	skipnc
  8127  0DA0  2DA2               	goto	u4191
  8128  0DA1  2DA3               	goto	u4190
  8129  0DA2                     u4191:
  8130  0DA2  2DD4               	goto	l11369
  8131  0DA3                     u4190:
  8132  0DA3  2DA4               	goto	l11359
  8133                           	line	109
  8134                           	
  8135  0DA4                     l7747:	
  8136                           	line	110
  8137                           	
  8138  0DA4                     l11359:	
  8139  0DA4  3001               	movlw	01h
  8140  0DA5                     u4205:
  8141  0DA5  1003               	clrc
  8142  0DA6  0DC9               	rlf	(___ftadd@f2),f
  8143  0DA7  0DCA               	rlf	(___ftadd@f2+1),f
  8144  0DA8  0DCB               	rlf	(___ftadd@f2+2),f
  8145  0DA9  3EFF               	addlw	-1
  8146  0DAA  1D03               	skipz
  8147  0DAB  2DA5               	goto	u4205
  8148                           	line	111
  8149  0DAC  3001               	movlw	low(01h)
  8150  0DAD  02D1               	subwf	(___ftadd@exp2),f
  8151                           	line	112
  8152                           	
  8153  0DAE                     l11361:	
  8154  0DAE  0851               	movf	(___ftadd@exp2),w
  8155  0DAF  0652               	xorwf	(___ftadd@exp1),w
  8156  0DB0  1903               	skipnz
  8157  0DB1  2DB3               	goto	u4211
  8158  0DB2  2DB4               	goto	u4210
  8159  0DB3                     u4211:
  8160  0DB3  2DCC               	goto	l11367
  8161  0DB4                     u4210:
  8162                           	
  8163  0DB4                     l11363:	
  8164  0DB4  3001               	movlw	low(01h)
  8165  0DB5  02D0               	subwf	(___ftadd@sign),f
  8166  0DB6  0850               	movf	((___ftadd@sign)),w
  8167  0DB7  3907               	andlw	07h
  8168  0DB8  1D03               	btfss	status,2
  8169  0DB9  2DBB               	goto	u4221
  8170  0DBA  2DBC               	goto	u4220
  8171  0DBB                     u4221:
  8172  0DBB  2DA4               	goto	l11359
  8173  0DBC                     u4220:
  8174  0DBC  2DCC               	goto	l11367
  8175                           	
  8176  0DBD                     l7749:	
  8177  0DBD  2DCC               	goto	l11367
  8178                           	
  8179  0DBE                     l7750:	
  8180                           	line	113
  8181  0DBE  2DCC               	goto	l11367
  8182                           	
  8183  0DBF                     l7752:	
  8184                           	line	114
  8185                           	
  8186  0DBF                     l11365:	
  8187  0DBF  3001               	movlw	01h
  8188  0DC0                     u4235:
  8189  0DC0  1003               	clrc
  8190  0DC1  0CC8               	rrf	(___ftadd@f1+2),f
  8191  0DC2  0CC7               	rrf	(___ftadd@f1+1),f
  8192  0DC3  0CC6               	rrf	(___ftadd@f1),f
  8193  0DC4  3EFF               	addlw	-1
  8194  0DC5  1D03               	skipz
  8195  0DC6  2DC0               	goto	u4235
  8196                           
  8197                           	line	115
  8198  0DC7  3001               	movlw	(01h)
  8199  0DC8  00CC               	movwf	(??___ftadd+0)+0
  8200  0DC9  084C               	movf	(??___ftadd+0)+0,w
  8201  0DCA  07D2               	addwf	(___ftadd@exp1),f
  8202  0DCB  2DCC               	goto	l11367
  8203                           	line	116
  8204                           	
  8205  0DCC                     l7751:	
  8206                           	line	113
  8207                           	
  8208  0DCC                     l11367:	
  8209  0DCC  0852               	movf	(___ftadd@exp1),w
  8210  0DCD  0651               	xorwf	(___ftadd@exp2),w
  8211  0DCE  1D03               	skipz
  8212  0DCF  2DD1               	goto	u4241
  8213  0DD0  2DD2               	goto	u4240
  8214  0DD1                     u4241:
  8215  0DD1  2DBF               	goto	l11365
  8216  0DD2                     u4240:
  8217  0DD2  2E0B               	goto	l7754
  8218                           	
  8219  0DD3                     l7753:	
  8220                           	line	117
  8221  0DD3  2E0B               	goto	l7754
  8222                           	
  8223  0DD4                     l7746:	
  8224                           	
  8225  0DD4                     l11369:	
  8226  0DD4  0852               	movf	(___ftadd@exp1),w
  8227  0DD5  0251               	subwf	(___ftadd@exp2),w
  8228  0DD6  1803               	skipnc
  8229  0DD7  2DD9               	goto	u4251
  8230  0DD8  2DDA               	goto	u4250
  8231  0DD9                     u4251:
  8232  0DD9  2E0B               	goto	l7754
  8233  0DDA                     u4250:
  8234  0DDA  2DDB               	goto	l11371
  8235                           	line	120
  8236                           	
  8237  0DDB                     l7756:	
  8238                           	line	121
  8239                           	
  8240  0DDB                     l11371:	
  8241  0DDB  3001               	movlw	01h
  8242  0DDC                     u4265:
  8243  0DDC  1003               	clrc
  8244  0DDD  0DC6               	rlf	(___ftadd@f1),f
  8245  0DDE  0DC7               	rlf	(___ftadd@f1+1),f
  8246  0DDF  0DC8               	rlf	(___ftadd@f1+2),f
  8247  0DE0  3EFF               	addlw	-1
  8248  0DE1  1D03               	skipz
  8249  0DE2  2DDC               	goto	u4265
  8250                           	line	122
  8251  0DE3  3001               	movlw	low(01h)
  8252  0DE4  02D2               	subwf	(___ftadd@exp1),f
  8253                           	line	123
  8254                           	
  8255  0DE5                     l11373:	
  8256  0DE5  0851               	movf	(___ftadd@exp2),w
  8257  0DE6  0652               	xorwf	(___ftadd@exp1),w
  8258  0DE7  1903               	skipnz
  8259  0DE8  2DEA               	goto	u4271
  8260  0DE9  2DEB               	goto	u4270
  8261  0DEA                     u4271:
  8262  0DEA  2E03               	goto	l11379
  8263  0DEB                     u4270:
  8264                           	
  8265  0DEB                     l11375:	
  8266  0DEB  3001               	movlw	low(01h)
  8267  0DEC  02D0               	subwf	(___ftadd@sign),f
  8268  0DED  0850               	movf	((___ftadd@sign)),w
  8269  0DEE  3907               	andlw	07h
  8270  0DEF  1D03               	btfss	status,2
  8271  0DF0  2DF2               	goto	u4281
  8272  0DF1  2DF3               	goto	u4280
  8273  0DF2                     u4281:
  8274  0DF2  2DDB               	goto	l11371
  8275  0DF3                     u4280:
  8276  0DF3  2E03               	goto	l11379
  8277                           	
  8278  0DF4                     l7758:	
  8279  0DF4  2E03               	goto	l11379
  8280                           	
  8281  0DF5                     l7759:	
  8282                           	line	124
  8283  0DF5  2E03               	goto	l11379
  8284                           	
  8285  0DF6                     l7761:	
  8286                           	line	125
  8287                           	
  8288  0DF6                     l11377:	
  8289  0DF6  3001               	movlw	01h
  8290  0DF7                     u4295:
  8291  0DF7  1003               	clrc
  8292  0DF8  0CCB               	rrf	(___ftadd@f2+2),f
  8293  0DF9  0CCA               	rrf	(___ftadd@f2+1),f
  8294  0DFA  0CC9               	rrf	(___ftadd@f2),f
  8295  0DFB  3EFF               	addlw	-1
  8296  0DFC  1D03               	skipz
  8297  0DFD  2DF7               	goto	u4295
  8298                           
  8299                           	line	126
  8300  0DFE  3001               	movlw	(01h)
  8301  0DFF  00CC               	movwf	(??___ftadd+0)+0
  8302  0E00  084C               	movf	(??___ftadd+0)+0,w
  8303  0E01  07D1               	addwf	(___ftadd@exp2),f
  8304  0E02  2E03               	goto	l11379
  8305                           	line	127
  8306                           	
  8307  0E03                     l7760:	
  8308                           	line	124
  8309                           	
  8310  0E03                     l11379:	
  8311  0E03  0852               	movf	(___ftadd@exp1),w
  8312  0E04  0651               	xorwf	(___ftadd@exp2),w
  8313  0E05  1D03               	skipz
  8314  0E06  2E08               	goto	u4301
  8315  0E07  2E09               	goto	u4300
  8316  0E08                     u4301:
  8317  0E08  2DF6               	goto	l11377
  8318  0E09                     u4300:
  8319  0E09  2E0B               	goto	l7754
  8320                           	
  8321  0E0A                     l7762:	
  8322  0E0A  2E0B               	goto	l7754
  8323                           	line	128
  8324                           	
  8325  0E0B                     l7755:	
  8326                           	line	129
  8327                           	
  8328  0E0B                     l7754:	
  8329  0E0B  1FD0               	btfss	(___ftadd@sign),(7)&7
  8330  0E0C  2E0E               	goto	u4311
  8331  0E0D  2E0F               	goto	u4310
  8332  0E0E                     u4311:
  8333  0E0E  2E20               	goto	l11383
  8334  0E0F                     u4310:
  8335                           	line	131
  8336                           	
  8337  0E0F                     l11381:	
  8338  0E0F  30FF               	movlw	0FFh
  8339  0E10  06C6               	xorwf	(___ftadd@f1),f
  8340  0E11  30FF               	movlw	0FFh
  8341  0E12  06C7               	xorwf	(___ftadd@f1+1),f
  8342  0E13  30FF               	movlw	0FFh
  8343  0E14  06C8               	xorwf	(___ftadd@f1+2),f
  8344                           	line	132
  8345  0E15  3001               	movlw	01h
  8346  0E16  07C6               	addwf	(___ftadd@f1),f
  8347  0E17  3000               	movlw	0
  8348  0E18  1803               	skipnc
  8349  0E19  3001               movlw 1
  8350  0E1A  07C7               	addwf	(___ftadd@f1+1),f
  8351  0E1B  3000               	movlw	0
  8352  0E1C  1803               	skipnc
  8353  0E1D  3001               movlw 1
  8354  0E1E  07C8               	addwf	(___ftadd@f1+2),f
  8355  0E1F  2E20               	goto	l11383
  8356                           	line	133
  8357                           	
  8358  0E20                     l7763:	
  8359                           	line	134
  8360                           	
  8361  0E20                     l11383:	
  8362  0E20  1F50               	btfss	(___ftadd@sign),(6)&7
  8363  0E21  2E23               	goto	u4321
  8364  0E22  2E24               	goto	u4320
  8365  0E23                     u4321:
  8366  0E23  2E35               	goto	l11387
  8367  0E24                     u4320:
  8368                           	line	136
  8369                           	
  8370  0E24                     l11385:	
  8371  0E24  30FF               	movlw	0FFh
  8372  0E25  06C9               	xorwf	(___ftadd@f2),f
  8373  0E26  30FF               	movlw	0FFh
  8374  0E27  06CA               	xorwf	(___ftadd@f2+1),f
  8375  0E28  30FF               	movlw	0FFh
  8376  0E29  06CB               	xorwf	(___ftadd@f2+2),f
  8377                           	line	137
  8378  0E2A  3001               	movlw	01h
  8379  0E2B  07C9               	addwf	(___ftadd@f2),f
  8380  0E2C  3000               	movlw	0
  8381  0E2D  1803               	skipnc
  8382  0E2E  3001               movlw 1
  8383  0E2F  07CA               	addwf	(___ftadd@f2+1),f
  8384  0E30  3000               	movlw	0
  8385  0E31  1803               	skipnc
  8386  0E32  3001               movlw 1
  8387  0E33  07CB               	addwf	(___ftadd@f2+2),f
  8388  0E34  2E35               	goto	l11387
  8389                           	line	138
  8390                           	
  8391  0E35                     l7764:	
  8392                           	line	139
  8393                           	
  8394  0E35                     l11387:	
  8395  0E35  01D0               	clrf	(___ftadd@sign)
  8396                           	line	140
  8397  0E36  0846               	movf	(___ftadd@f1),w
  8398  0E37  07C9               	addwf	(___ftadd@f2),f
  8399  0E38  0847               	movf	(___ftadd@f1+1),w
  8400  0E39  1103               	clrz
  8401  0E3A  1803               	skipnc
  8402  0E3B  0A47               	incf	(___ftadd@f1+1),w
  8403  0E3C  1903               	skipnz
  8404  0E3D  2E3F               	goto	u4331
  8405  0E3E  07CA               	addwf	(___ftadd@f2+1),f
  8406  0E3F                     u4331:
  8407  0E3F  0848               	movf	(___ftadd@f1+2),w
  8408  0E40  1103               	clrz
  8409  0E41  1803               	skipnc
  8410  0E42  0A48               	incf	(___ftadd@f1+2),w
  8411  0E43  1903               	skipnz
  8412  0E44  2E46               	goto	u4332
  8413  0E45  07CB               	addwf	(___ftadd@f2+2),f
  8414  0E46                     u4332:
  8415                           
  8416                           	line	141
  8417                           	
  8418  0E46                     l11389:	
  8419  0E46  1FCB               	btfss	(___ftadd@f2+2),(23)&7
  8420  0E47  2E49               	goto	u4341
  8421  0E48  2E4A               	goto	u4340
  8422  0E49                     u4341:
  8423  0E49  2E5E               	goto	l11395
  8424  0E4A                     u4340:
  8425                           	line	142
  8426                           	
  8427  0E4A                     l11391:	
  8428  0E4A  30FF               	movlw	0FFh
  8429  0E4B  06C9               	xorwf	(___ftadd@f2),f
  8430  0E4C  30FF               	movlw	0FFh
  8431  0E4D  06CA               	xorwf	(___ftadd@f2+1),f
  8432  0E4E  30FF               	movlw	0FFh
  8433  0E4F  06CB               	xorwf	(___ftadd@f2+2),f
  8434                           	line	143
  8435  0E50  3001               	movlw	01h
  8436  0E51  07C9               	addwf	(___ftadd@f2),f
  8437  0E52  3000               	movlw	0
  8438  0E53  1803               	skipnc
  8439  0E54  3001               movlw 1
  8440  0E55  07CA               	addwf	(___ftadd@f2+1),f
  8441  0E56  3000               	movlw	0
  8442  0E57  1803               	skipnc
  8443  0E58  3001               movlw 1
  8444  0E59  07CB               	addwf	(___ftadd@f2+2),f
  8445                           	line	144
  8446                           	
  8447  0E5A                     l11393:	
  8448  0E5A  01D0               	clrf	(___ftadd@sign)
  8449  0E5B  1403               	bsf	status,0
  8450  0E5C  0DD0               	rlf	(___ftadd@sign),f
  8451  0E5D  2E5E               	goto	l11395
  8452                           	line	145
  8453                           	
  8454  0E5E                     l7765:	
  8455                           	line	146
  8456                           	
  8457  0E5E                     l11395:	
  8458  0E5E  0849               	movf	(___ftadd@f2),w
  8459  0E5F  00A0               	movwf	(?___ftpack)
  8460  0E60  084A               	movf	(___ftadd@f2+1),w
  8461  0E61  00A1               	movwf	(?___ftpack+1)
  8462  0E62  084B               	movf	(___ftadd@f2+2),w
  8463  0E63  00A2               	movwf	(?___ftpack+2)
  8464  0E64  0852               	movf	(___ftadd@exp1),w
  8465  0E65  00CC               	movwf	(??___ftadd+0)+0
  8466  0E66  084C               	movf	(??___ftadd+0)+0,w
  8467  0E67  00A3               	movwf	0+(?___ftpack)+03h
  8468  0E68  0850               	movf	(___ftadd@sign),w
  8469  0E69  00CD               	movwf	(??___ftadd+1)+0
  8470  0E6A  084D               	movf	(??___ftadd+1)+0,w
  8471  0E6B  00A4               	movwf	0+(?___ftpack)+04h
  8472  0E6C  160A  158A  2783   	fcall	___ftpack
              120A  158A         
  8473  0E71  1283               	bcf	status, 5	;RP0=0, select bank0
  8474  0E72  1303               	bcf	status, 6	;RP1=0, select bank0
  8475  0E73  0820               	movf	(0+(?___ftpack)),w
  8476  0E74  00C6               	movwf	(?___ftadd)
  8477  0E75  0821               	movf	(1+(?___ftpack)),w
  8478  0E76  00C7               	movwf	(?___ftadd+1)
  8479  0E77  0822               	movf	(2+(?___ftpack)),w
  8480  0E78  00C8               	movwf	(?___ftadd+2)
  8481  0E79  2E7A               	goto	l7740
  8482                           	
  8483  0E7A                     l11397:	
  8484                           	line	148
  8485                           	
  8486  0E7A                     l7740:	
  8487  0E7A  0008               	return
  8488                           	opt stack 0
  8489                           GLOBAL	__end_of___ftadd
  8490  0E7B                     	__end_of___ftadd:
  8491 ;; =============== function ___ftadd ends ============
  8492                           
  8493                           	signat	___ftadd,8315
  8494                           	global	_Make_Table
  8495                           psect	text1161,local,class=CODE,delta=2
  8496                           global __ptext1161
  8497  1C6B                     __ptext1161:
  8498                           
  8499 ;; *************** function _Make_Table *****************
  8500 ;; Defined at:
  8501 ;;		line 41 in file "Motor.c"
  8502 ;; Parameters:    Size  Location     Type
  8503 ;;  TotNoStep       2    0[BANK0 ] unsigned int 
  8504 ;; Auto vars:     Size  Location     Type
  8505 ;;		None
  8506 ;; Return value:  Size  Location     Type
  8507 ;;		None               void
  8508 ;; Registers used:
  8509 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8510 ;; Tracked objects:
  8511 ;;		On entry : 0/0
  8512 ;;		On exit  : 0/0
  8513 ;;		Unchanged: 0/0
  8514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8515 ;;      Params:         0       2       0       0       0
  8516 ;;      Locals:         0       0       0       0       0
  8517 ;;      Temps:          0       2       0       0       0
  8518 ;;      Totals:         0       4       0       0       0
  8519 ;;Total ram usage:        4 bytes
  8520 ;; Hardware stack levels used:    1
  8521 ;; Hardware stack levels required when called:    3
  8522 ;; This function calls:
  8523 ;;		_SetMode
  8524 ;;		_SetDir
  8525 ;;		_SetTime
  8526 ;; This function is called by:
  8527 ;;		_Calc_PID_op
  8528 ;;		_main
  8529 ;; This function uses a non-reentrant model
  8530 ;;
  8531                           psect	text1161
  8532                           	file	"Motor.c"
  8533                           	line	41
  8534                           	global	__size_of_Make_Table
  8535  0032                     	__size_of_Make_Table	equ	__end_of_Make_Table-_Make_Table
  8536                           	
  8537  1C6B                     _Make_Table:	
  8538                           	opt	stack 3
  8539                           ; Regs used in _Make_Table: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8540                           	line	42
  8541                           	
  8542  1C6B                     l11317:	
  8543                           ;Motor.c: 42: CurNoStep = TotNoStep << 1;
  8544  1C6B  1283               	bcf	status, 5	;RP0=0, select bank0
  8545  1C6C  1303               	bcf	status, 6	;RP1=0, select bank0
  8546  1C6D  0821               	movf	(Make_Table@TotNoStep+1),w
  8547  1C6E  00A3               	movwf	(??_Make_Table+0)+0+1
  8548  1C6F  0820               	movf	(Make_Table@TotNoStep),w
  8549  1C70  00A2               	movwf	(??_Make_Table+0)+0
  8550  1C71  3001               	movlw	01h
  8551  1C72  00FF               	movwf	btemp+1
  8552  1C73                     u4105:
  8553  1C73  1003               	clrc
  8554  1C74  0DA2               	rlf	(??_Make_Table+0)+0,f
  8555  1C75  0DA3               	rlf	(??_Make_Table+0)+1,f
  8556  1C76  0BFF               	decfsz	btemp+1,f
  8557  1C77  2C73               	goto	u4105
  8558  1C78  0822               	movf	0+(??_Make_Table+0)+0,w
  8559  1C79  1683               	bsf	status, 5	;RP0=1, select bank1
  8560  1C7A  1303               	bcf	status, 6	;RP1=0, select bank1
  8561  1C7B  00DF               	movwf	(_CurNoStep)^080h
  8562  1C7C  1283               	bcf	status, 5	;RP0=0, select bank0
  8563  1C7D  1303               	bcf	status, 6	;RP1=0, select bank0
  8564  1C7E  0823               	movf	1+(??_Make_Table+0)+0,w
  8565  1C7F  1683               	bsf	status, 5	;RP0=1, select bank1
  8566  1C80  1303               	bcf	status, 6	;RP1=0, select bank1
  8567  1C81  00E0               	movwf	(_CurNoStep+1)^080h
  8568                           	line	43
  8569                           	
  8570  1C82                     l11319:	
  8571                           ;Motor.c: 43: CurStepTime = 200;
  8572  1C82  30C8               	movlw	(0C8h)
  8573  1C83  1283               	bcf	status, 5	;RP0=0, select bank0
  8574  1C84  1303               	bcf	status, 6	;RP1=0, select bank0
  8575  1C85  00A2               	movwf	(??_Make_Table+0)+0
  8576  1C86  0822               	movf	(??_Make_Table+0)+0,w
  8577  1C87  1683               	bsf	status, 5	;RP0=1, select bank1
  8578  1C88  1303               	bcf	status, 6	;RP1=0, select bank1
  8579  1C89  00EE               	movwf	(_CurStepTime)^080h
  8580                           	line	44
  8581                           	
  8582  1C8A                     l11321:	
  8583                           ;Motor.c: 44: SetMode();
  8584  1C8A  160A  158A  2317   	fcall	_SetMode
              160A  158A         
  8585                           	line	45
  8586                           	
  8587  1C8F                     l11323:	
  8588                           ;Motor.c: 45: SetDir();
  8589  1C8F  160A  158A  22C3   	fcall	_SetDir
              160A  158A         
  8590                           	line	46
  8591                           	
  8592  1C94                     l11325:	
  8593                           ;Motor.c: 46: SetTime();
  8594  1C94  160A  158A  22E9   	fcall	_SetTime
              160A  158A         
  8595                           	line	47
  8596                           	
  8597  1C99                     l11327:	
  8598                           ;Motor.c: 47: MotionComplete = 0;
  8599  1C99  1283               	bcf	status, 5	;RP0=0, select bank0
  8600  1C9A  1303               	bcf	status, 6	;RP1=0, select bank0
  8601  1C9B  01EE               	clrf	(_MotionComplete)
  8602                           	line	69
  8603                           	
  8604  1C9C                     l5610:	
  8605  1C9C  0008               	return
  8606                           	opt stack 0
  8607                           GLOBAL	__end_of_Make_Table
  8608  1C9D                     	__end_of_Make_Table:
  8609 ;; =============== function _Make_Table ends ============
  8610                           
  8611                           	signat	_Make_Table,4216
  8612                           	global	_WriteEEP
  8613                           psect	text1162,local,class=CODE,delta=2
  8614                           global __ptext1162
  8615  1CD3                     __ptext1162:
  8616                           
  8617 ;; *************** function _WriteEEP *****************
  8618 ;; Defined at:
  8619 ;;		line 80 in file "EEPRom.c"
  8620 ;; Parameters:    Size  Location     Type
  8621 ;;  Data            4    2[BANK0 ] unsigned long 
  8622 ;;  addr            1    6[BANK0 ] unsigned char 
  8623 ;; Auto vars:     Size  Location     Type
  8624 ;;  status          1   10[BANK0 ] unsigned char 
  8625 ;;  i               1    9[BANK0 ] unsigned char 
  8626 ;; Return value:  Size  Location     Type
  8627 ;;                  1    wreg      unsigned char 
  8628 ;; Registers used:
  8629 ;;		wreg, status,2, status,0, pclath, cstack
  8630 ;; Tracked objects:
  8631 ;;		On entry : 0/0
  8632 ;;		On exit  : 0/0
  8633 ;;		Unchanged: 0/0
  8634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8635 ;;      Params:         0       5       0       0       0
  8636 ;;      Locals:         0       2       0       0       0
  8637 ;;      Temps:          0       2       0       0       0
  8638 ;;      Totals:         0       9       0       0       0
  8639 ;;Total ram usage:        9 bytes
  8640 ;; Hardware stack levels used:    1
  8641 ;; Hardware stack levels required when called:    3
  8642 ;; This function calls:
  8643 ;;		_WrByte
  8644 ;; This function is called by:
  8645 ;;		_Writeeeprom
  8646 ;; This function uses a non-reentrant model
  8647 ;;
  8648                           psect	text1162
  8649                           	file	"EEPRom.c"
  8650                           	line	80
  8651                           	global	__size_of_WriteEEP
  8652  003A                     	__size_of_WriteEEP	equ	__end_of_WriteEEP-_WriteEEP
  8653                           	
  8654  1CD3                     _WriteEEP:	
  8655                           	opt	stack 1
  8656                           ; Regs used in _WriteEEP: [wreg+status,2+status,0+pclath+cstack]
  8657                           	line	81
  8658                           	
  8659  1CD3                     l11295:	
  8660                           ;EEPRom.c: 81: unsigned char i , status = 1 ;
  8661  1CD3  1283               	bcf	status, 5	;RP0=0, select bank0
  8662  1CD4  1303               	bcf	status, 6	;RP1=0, select bank0
  8663  1CD5  01AA               	clrf	(WriteEEP@status)
  8664  1CD6  1403               	bsf	status,0
  8665  1CD7  0DAA               	rlf	(WriteEEP@status),f
  8666                           	line	82
  8667                           	
  8668  1CD8                     l11297:	
  8669                           ;EEPRom.c: 82: addr += 3 ;
  8670  1CD8  3003               	movlw	(03h)
  8671  1CD9  00A7               	movwf	(??_WriteEEP+0)+0
  8672  1CDA  0827               	movf	(??_WriteEEP+0)+0,w
  8673  1CDB  07A6               	addwf	(WriteEEP@addr),f
  8674                           	line	83
  8675                           	
  8676  1CDC                     l11299:	
  8677                           ;EEPRom.c: 83: for ( i = 0 ; ( i < 4 ) && ( status ); i++ )
  8678  1CDC  01A9               	clrf	(WriteEEP@i)
  8679  1CDD  2CFD               	goto	l11309
  8680                           	line	84
  8681                           	
  8682  1CDE                     l2289:	
  8683                           	line	85
  8684                           	
  8685  1CDE                     l11301:	
  8686                           ;EEPRom.c: 84: {
  8687                           ;EEPRom.c: 85: status = WrByte( addr , Data & 0xff ) ;
  8688  1CDE  0822               	movf	(WriteEEP@Data),w
  8689  1CDF  00A7               	movwf	(??_WriteEEP+0)+0
  8690  1CE0  0827               	movf	(??_WriteEEP+0)+0,w
  8691  1CE1  00A0               	movwf	(?_WrByte)
  8692  1CE2  0826               	movf	(WriteEEP@addr),w
  8693  1CE3  160A  158A  23E1   	fcall	_WrByte
              160A  158A         
  8694  1CE8  1283               	bcf	status, 5	;RP0=0, select bank0
  8695  1CE9  1303               	bcf	status, 6	;RP1=0, select bank0
  8696  1CEA  00A8               	movwf	(??_WriteEEP+1)+0
  8697  1CEB  0828               	movf	(??_WriteEEP+1)+0,w
  8698  1CEC  00AA               	movwf	(WriteEEP@status)
  8699                           	line	86
  8700                           	
  8701  1CED                     l11303:	
  8702                           ;EEPRom.c: 86: addr-- ;
  8703  1CED  3001               	movlw	low(01h)
  8704  1CEE  02A6               	subwf	(WriteEEP@addr),f
  8705                           	line	87
  8706                           	
  8707  1CEF                     l11305:	
  8708                           ;EEPRom.c: 87: Data >>= 8 ;
  8709  1CEF  3008               	movlw	08h
  8710  1CF0                     u4075:
  8711  1CF0  1003               	clrc
  8712  1CF1  0CA5               	rrf	(WriteEEP@Data+3),f
  8713  1CF2  0CA4               	rrf	(WriteEEP@Data+2),f
  8714  1CF3  0CA3               	rrf	(WriteEEP@Data+1),f
  8715  1CF4  0CA2               	rrf	(WriteEEP@Data),f
  8716  1CF5  3EFF               	addlw	-1
  8717  1CF6  1D03               	skipz
  8718  1CF7  2CF0               	goto	u4075
  8719                           
  8720                           	line	83
  8721                           	
  8722  1CF8                     l11307:	
  8723  1CF8  3001               	movlw	(01h)
  8724  1CF9  00A7               	movwf	(??_WriteEEP+0)+0
  8725  1CFA  0827               	movf	(??_WriteEEP+0)+0,w
  8726  1CFB  07A9               	addwf	(WriteEEP@i),f
  8727  1CFC  2CFD               	goto	l11309
  8728                           	
  8729  1CFD                     l2288:	
  8730                           	
  8731  1CFD                     l11309:	
  8732  1CFD  3004               	movlw	(04h)
  8733  1CFE  0229               	subwf	(WriteEEP@i),w
  8734  1CFF  1803               	skipnc
  8735  1D00  2D02               	goto	u4081
  8736  1D01  2D03               	goto	u4080
  8737  1D02                     u4081:
  8738  1D02  2D0A               	goto	l11313
  8739  1D03                     u4080:
  8740                           	
  8741  1D03                     l11311:	
  8742  1D03  08AA               	movf	(WriteEEP@status),f
  8743  1D04  1D03               	skipz
  8744  1D05  2D07               	goto	u4091
  8745  1D06  2D08               	goto	u4090
  8746  1D07                     u4091:
  8747  1D07  2CDE               	goto	l11301
  8748  1D08                     u4090:
  8749  1D08  2D0A               	goto	l11313
  8750                           	
  8751  1D09                     l2291:	
  8752  1D09  2D0A               	goto	l11313
  8753                           	
  8754  1D0A                     l2292:	
  8755                           	line	90
  8756                           	
  8757  1D0A                     l11313:	
  8758                           ;EEPRom.c: 88: }
  8759                           ;EEPRom.c: 90: return status;
  8760  1D0A  082A               	movf	(WriteEEP@status),w
  8761  1D0B  2D0C               	goto	l2293
  8762                           	
  8763  1D0C                     l11315:	
  8764                           	line	91
  8765                           	
  8766  1D0C                     l2293:	
  8767  1D0C  0008               	return
  8768                           	opt stack 0
  8769                           GLOBAL	__end_of_WriteEEP
  8770  1D0D                     	__end_of_WriteEEP:
  8771 ;; =============== function _WriteEEP ends ============
  8772                           
  8773                           	signat	_WriteEEP,8313
  8774                           	global	_ReadEEP
  8775                           psect	text1163,local,class=CODE,delta=2
  8776                           global __ptext1163
  8777  1D9A                     __ptext1163:
  8778                           
  8779 ;; *************** function _ReadEEP *****************
  8780 ;; Defined at:
  8781 ;;		line 18 in file "EEPRom.c"
  8782 ;; Parameters:    Size  Location     Type
  8783 ;;  addr            1    wreg     unsigned char 
  8784 ;; Auto vars:     Size  Location     Type
  8785 ;;  addr            1   11[BANK0 ] unsigned char 
  8786 ;;  DataH           4   12[BANK0 ] unsigned long 
  8787 ;;  i               1   16[BANK0 ] unsigned char 
  8788 ;; Return value:  Size  Location     Type
  8789 ;;                  4    3[BANK0 ] unsigned long 
  8790 ;; Registers used:
  8791 ;;		wreg, status,2, status,0, pclath, cstack
  8792 ;; Tracked objects:
  8793 ;;		On entry : 0/0
  8794 ;;		On exit  : 0/0
  8795 ;;		Unchanged: 0/0
  8796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8797 ;;      Params:         0       4       0       0       0
  8798 ;;      Locals:         0       6       0       0       0
  8799 ;;      Temps:          0       4       0       0       0
  8800 ;;      Totals:         0      14       0       0       0
  8801 ;;Total ram usage:       14 bytes
  8802 ;; Hardware stack levels used:    1
  8803 ;; Hardware stack levels required when called:    3
  8804 ;; This function calls:
  8805 ;;		_RdByte
  8806 ;; This function is called by:
  8807 ;;		_Readeeprom
  8808 ;; This function uses a non-reentrant model
  8809 ;;
  8810                           psect	text1163
  8811                           	file	"EEPRom.c"
  8812                           	line	18
  8813                           	global	__size_of_ReadEEP
  8814  004A                     	__size_of_ReadEEP	equ	__end_of_ReadEEP-_ReadEEP
  8815                           	
  8816  1D9A                     _ReadEEP:	
  8817                           	opt	stack 2
  8818                           ; Regs used in _ReadEEP: [wreg+status,2+status,0+pclath+cstack]
  8819                           ;ReadEEP@addr stored from wreg
  8820  1D9A  1283               	bcf	status, 5	;RP0=0, select bank0
  8821  1D9B  1303               	bcf	status, 6	;RP1=0, select bank0
  8822  1D9C  00AB               	movwf	(ReadEEP@addr)
  8823                           	line	19
  8824                           	
  8825  1D9D                     l11275:	
  8826                           ;EEPRom.c: 19: unsigned long DataH = 0 ;
  8827  1D9D  3000               	movlw	0
  8828  1D9E  00AF               	movwf	(ReadEEP@DataH+3)
  8829  1D9F  3000               	movlw	0
  8830  1DA0  00AE               	movwf	(ReadEEP@DataH+2)
  8831  1DA1  3000               	movlw	0
  8832  1DA2  00AD               	movwf	(ReadEEP@DataH+1)
  8833  1DA3  3000               	movlw	0
  8834  1DA4  00AC               	movwf	(ReadEEP@DataH)
  8835                           
  8836                           	line	22
  8837                           	
  8838  1DA5                     l11277:	
  8839                           ;EEPRom.c: 20: unsigned char i ;
  8840                           ;EEPRom.c: 22: for ( i = 0 ; i < 4 ; i++ )
  8841  1DA5  01B0               	clrf	(ReadEEP@i)
  8842  1DA6  3004               	movlw	(04h)
  8843  1DA7  0230               	subwf	(ReadEEP@i),w
  8844  1DA8  1C03               	skipc
  8845  1DA9  2DAB               	goto	u4041
  8846  1DAA  2DAC               	goto	u4040
  8847  1DAB                     u4041:
  8848  1DAB  2DAE               	goto	l11281
  8849  1DAC                     u4040:
  8850  1DAC  2DDA               	goto	l11291
  8851                           	
  8852  1DAD                     l11279:	
  8853  1DAD  2DDA               	goto	l11291
  8854                           	line	23
  8855                           	
  8856  1DAE                     l2270:	
  8857                           	line	24
  8858                           	
  8859  1DAE                     l11281:	
  8860                           ;EEPRom.c: 23: {
  8861                           ;EEPRom.c: 24: DataH <<= 8 ;
  8862  1DAE  3008               	movlw	08h
  8863  1DAF  00A7               	movwf	(??_ReadEEP+0)+0
  8864  1DB0                     u4055:
  8865  1DB0  1003               	clrc
  8866  1DB1  0DAC               	rlf	(ReadEEP@DataH),f
  8867  1DB2  0DAD               	rlf	(ReadEEP@DataH+1),f
  8868  1DB3  0DAE               	rlf	(ReadEEP@DataH+2),f
  8869  1DB4  0DAF               	rlf	(ReadEEP@DataH+3),f
  8870  1DB5  0BA7               	decfsz	(??_ReadEEP+0)+0
  8871  1DB6  2DB0               	goto	u4055
  8872                           	line	25
  8873                           	
  8874  1DB7                     l11283:	
  8875                           ;EEPRom.c: 25: DataH |= RdByte( addr ) ;
  8876  1DB7  082B               	movf	(ReadEEP@addr),w
  8877  1DB8  160A  158A  236D   	fcall	_RdByte
              160A  158A         
  8878  1DBD  1283               	bcf	status, 5	;RP0=0, select bank0
  8879  1DBE  1303               	bcf	status, 6	;RP1=0, select bank0
  8880  1DBF  00A7               	movwf	(??_ReadEEP+0)+0
  8881  1DC0  01A8               	clrf	((??_ReadEEP+0)+0+1)
  8882  1DC1  01A9               	clrf	((??_ReadEEP+0)+0+2)
  8883  1DC2  01AA               	clrf	((??_ReadEEP+0)+0+3)
  8884  1DC3  0827               	movf	0+(??_ReadEEP+0)+0,w
  8885  1DC4  04AC               	iorwf	(ReadEEP@DataH),f
  8886  1DC5  0828               	movf	1+(??_ReadEEP+0)+0,w
  8887  1DC6  04AD               	iorwf	(ReadEEP@DataH+1),f
  8888  1DC7  0829               	movf	2+(??_ReadEEP+0)+0,w
  8889  1DC8  04AE               	iorwf	(ReadEEP@DataH+2),f
  8890  1DC9  082A               	movf	3+(??_ReadEEP+0)+0,w
  8891  1DCA  04AF               	iorwf	(ReadEEP@DataH+3),f
  8892                           	line	26
  8893                           	
  8894  1DCB                     l11285:	
  8895                           ;EEPRom.c: 26: addr++ ;
  8896  1DCB  3001               	movlw	(01h)
  8897  1DCC  00A7               	movwf	(??_ReadEEP+0)+0
  8898  1DCD  0827               	movf	(??_ReadEEP+0)+0,w
  8899  1DCE  07AB               	addwf	(ReadEEP@addr),f
  8900                           	line	22
  8901                           	
  8902  1DCF                     l11287:	
  8903  1DCF  3001               	movlw	(01h)
  8904  1DD0  00A7               	movwf	(??_ReadEEP+0)+0
  8905  1DD1  0827               	movf	(??_ReadEEP+0)+0,w
  8906  1DD2  07B0               	addwf	(ReadEEP@i),f
  8907                           	
  8908  1DD3                     l11289:	
  8909  1DD3  3004               	movlw	(04h)
  8910  1DD4  0230               	subwf	(ReadEEP@i),w
  8911  1DD5  1C03               	skipc
  8912  1DD6  2DD8               	goto	u4061
  8913  1DD7  2DD9               	goto	u4060
  8914  1DD8                     u4061:
  8915  1DD8  2DAE               	goto	l11281
  8916  1DD9                     u4060:
  8917  1DD9  2DDA               	goto	l11291
  8918                           	
  8919  1DDA                     l2271:	
  8920                           	line	28
  8921                           	
  8922  1DDA                     l11291:	
  8923                           ;EEPRom.c: 27: }
  8924                           ;EEPRom.c: 28: return DataH ;
  8925  1DDA  082F               	movf	(ReadEEP@DataH+3),w
  8926  1DDB  00A6               	movwf	(?_ReadEEP+3)
  8927  1DDC  082E               	movf	(ReadEEP@DataH+2),w
  8928  1DDD  00A5               	movwf	(?_ReadEEP+2)
  8929  1DDE  082D               	movf	(ReadEEP@DataH+1),w
  8930  1DDF  00A4               	movwf	(?_ReadEEP+1)
  8931  1DE0  082C               	movf	(ReadEEP@DataH),w
  8932  1DE1  00A3               	movwf	(?_ReadEEP)
  8933                           
  8934  1DE2  2DE3               	goto	l2272
  8935                           	
  8936  1DE3                     l11293:	
  8937                           	line	29
  8938                           	
  8939  1DE3                     l2272:	
  8940  1DE3  0008               	return
  8941                           	opt stack 0
  8942                           GLOBAL	__end_of_ReadEEP
  8943  1DE4                     	__end_of_ReadEEP:
  8944 ;; =============== function _ReadEEP ends ============
  8945                           
  8946                           	signat	_ReadEEP,4220
  8947                           	global	_str_to_num
  8948                           psect	text1164,local,class=CODE,delta=2
  8949                           global __ptext1164
  8950  123C                     __ptext1164:
  8951                           
  8952 ;; *************** function _str_to_num *****************
  8953 ;; Defined at:
  8954 ;;		line 138 in file "Serial.c"
  8955 ;; Parameters:    Size  Location     Type
  8956 ;;  String          1    wreg     PTR unsigned char 
  8957 ;;		 -> Commandstr(10), 
  8958 ;; Auto vars:     Size  Location     Type
  8959 ;;  String          1   29[BANK0 ] PTR unsigned char 
  8960 ;;		 -> Commandstr(10), 
  8961 ;;  Num             4   24[BANK0 ] long 
  8962 ;;  i               1   28[BANK0 ] unsigned char 
  8963 ;; Return value:  Size  Location     Type
  8964 ;;                  4   13[BANK0 ] long 
  8965 ;; Registers used:
  8966 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8967 ;; Tracked objects:
  8968 ;;		On entry : 0/0
  8969 ;;		On exit  : 0/0
  8970 ;;		Unchanged: 0/0
  8971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8972 ;;      Params:         0       4       0       0       0
  8973 ;;      Locals:         0       6       0       0       0
  8974 ;;      Temps:          0       7       0       0       0
  8975 ;;      Totals:         0      17       0       0       0
  8976 ;;Total ram usage:       17 bytes
  8977 ;; Hardware stack levels used:    1
  8978 ;; Hardware stack levels required when called:    3
  8979 ;; This function calls:
  8980 ;;		___lmul
  8981 ;; This function is called by:
  8982 ;;		_getData
  8983 ;; This function uses a non-reentrant model
  8984 ;;
  8985                           psect	text1164
  8986                           	file	"Serial.c"
  8987                           	line	138
  8988                           	global	__size_of_str_to_num
  8989  00B1                     	__size_of_str_to_num	equ	__end_of_str_to_num-_str_to_num
  8990                           	
  8991  123C                     _str_to_num:	
  8992                           	opt	stack 3
  8993                           ; Regs used in _str_to_num: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8994                           ;str_to_num@String stored from wreg
  8995  123C  1283               	bcf	status, 5	;RP0=0, select bank0
  8996  123D  1303               	bcf	status, 6	;RP1=0, select bank0
  8997  123E  00BD               	movwf	(str_to_num@String)
  8998                           	line	139
  8999                           	
  9000  123F                     l11251:	
  9001                           ;Serial.c: 139: signed long Num = 0 ;
  9002  123F  3000               	movlw	0
  9003  1240  00BB               	movwf	(str_to_num@Num+3)
  9004  1241  3000               	movlw	0
  9005  1242  00BA               	movwf	(str_to_num@Num+2)
  9006  1243  3000               	movlw	0
  9007  1244  00B9               	movwf	(str_to_num@Num+1)
  9008  1245  3000               	movlw	0
  9009  1246  00B8               	movwf	(str_to_num@Num)
  9010                           
  9011                           	line	140
  9012                           	
  9013  1247                     l11253:	
  9014                           ;Serial.c: 140: for( i = 0 ; String[ i ] != '\0' ; i++ )
  9015  1247  01BC               	clrf	(str_to_num@i)
  9016  1248  2AAF               	goto	l11265
  9017                           	line	141
  9018                           	
  9019  1249                     l1128:	
  9020                           	line	143
  9021                           	
  9022  1249                     l11255:	
  9023                           ;Serial.c: 141: {
  9024                           ;Serial.c: 143: if((String[ i ] >= '0')&&(String[ i ] <= '9'))
  9025  1249  083C               	movf	(str_to_num@i),w
  9026  124A  073D               	addwf	(str_to_num@String),w
  9027  124B  00B1               	movwf	(??_str_to_num+0)+0
  9028  124C  0831               	movf	0+(??_str_to_num+0)+0,w
  9029  124D  0084               	movwf	fsr0
  9030  124E  3030               	movlw	(030h)
  9031  124F  1783               	bsf	status, 7	;select IRP bank2
  9032  1250  0200               	subwf	indf,w
  9033  1251  1C03               	skipc
  9034  1252  2A54               	goto	u3991
  9035  1253  2A55               	goto	u3990
  9036  1254                     u3991:
  9037  1254  2AAA               	goto	l11263
  9038  1255                     u3990:
  9039                           	
  9040  1255                     l11257:	
  9041  1255  083C               	movf	(str_to_num@i),w
  9042  1256  073D               	addwf	(str_to_num@String),w
  9043  1257  00B1               	movwf	(??_str_to_num+0)+0
  9044  1258  0831               	movf	0+(??_str_to_num+0)+0,w
  9045  1259  0084               	movwf	fsr0
  9046  125A  303A               	movlw	(03Ah)
  9047  125B  0200               	subwf	indf,w
  9048  125C  1803               	skipnc
  9049  125D  2A5F               	goto	u4001
  9050  125E  2A60               	goto	u4000
  9051  125F                     u4001:
  9052  125F  2AAA               	goto	l11263
  9053  1260                     u4000:
  9054                           	line	145
  9055                           	
  9056  1260                     l11259:	
  9057                           ;Serial.c: 144: {
  9058                           ;Serial.c: 145: Num *= 10 ;
  9059  1260  3000               	movlw	0
  9060  1261  00A3               	movwf	(?___lmul+3)
  9061  1262  3000               	movlw	0
  9062  1263  00A2               	movwf	(?___lmul+2)
  9063  1264  3000               	movlw	0
  9064  1265  00A1               	movwf	(?___lmul+1)
  9065  1266  300A               	movlw	0Ah
  9066  1267  00A0               	movwf	(?___lmul)
  9067                           
  9068  1268  083B               	movf	(str_to_num@Num+3),w
  9069  1269  00A7               	movwf	3+(?___lmul)+04h
  9070  126A  083A               	movf	(str_to_num@Num+2),w
  9071  126B  00A6               	movwf	2+(?___lmul)+04h
  9072  126C  0839               	movf	(str_to_num@Num+1),w
  9073  126D  00A5               	movwf	1+(?___lmul)+04h
  9074  126E  0838               	movf	(str_to_num@Num),w
  9075  126F  00A4               	movwf	0+(?___lmul)+04h
  9076                           
  9077  1270  160A  118A  2010   	fcall	___lmul
              160A  118A         
  9078  1275  1283               	bcf	status, 5	;RP0=0, select bank0
  9079  1276  1303               	bcf	status, 6	;RP1=0, select bank0
  9080  1277  0823               	movf	(3+(?___lmul)),w
  9081  1278  00BB               	movwf	(str_to_num@Num+3)
  9082  1279  0822               	movf	(2+(?___lmul)),w
  9083  127A  00BA               	movwf	(str_to_num@Num+2)
  9084  127B  0821               	movf	(1+(?___lmul)),w
  9085  127C  00B9               	movwf	(str_to_num@Num+1)
  9086  127D  0820               	movf	(0+(?___lmul)),w
  9087  127E  00B8               	movwf	(str_to_num@Num)
  9088                           
  9089                           	line	146
  9090                           	
  9091  127F                     l11261:	
  9092                           ;Serial.c: 146: Num += String[ i ] - '0' ;
  9093  127F  083C               	movf	(str_to_num@i),w
  9094  1280  073D               	addwf	(str_to_num@String),w
  9095  1281  00B1               	movwf	(??_str_to_num+0)+0
  9096  1282  0831               	movf	0+(??_str_to_num+0)+0,w
  9097  1283  0084               	movwf	fsr0
  9098  1284  1783               	bsf	status, 7	;select IRP bank2
  9099  1285  0800               	movf	indf,w
  9100  1286  3ED0               	addlw	low(0FFD0h)
  9101  1287  00B2               	movwf	(??_str_to_num+1)+0
  9102  1288  30FF               	movlw	high(0FFD0h)
  9103  1289  1803               	skipnc
  9104  128A  3000               	movlw	(high(0FFD0h)+1)&0ffh
  9105  128B  00B3               	movwf	((??_str_to_num+1)+0)+1
  9106  128C  0832               	movf	0+(??_str_to_num+1)+0,w
  9107  128D  00B4               	movwf	((??_str_to_num+3)+0)
  9108  128E  0833               	movf	1+(??_str_to_num+1)+0,w
  9109  128F  00B5               	movwf	((??_str_to_num+3)+0+1)
  9110  1290  01B6               	clrf	((??_str_to_num+3)+0+2)
  9111  1291  01B7               	clrf	((??_str_to_num+3)+0+3)
  9112  1292  0834               	movf	0+(??_str_to_num+3)+0,w
  9113  1293  07B8               	addwf	(str_to_num@Num),f
  9114  1294  0835               	movf	1+(??_str_to_num+3)+0,w
  9115  1295  1103               	clrz
  9116  1296  1803               	skipnc
  9117  1297  3E01               	addlw	1
  9118  1298  1903               	skipnz
  9119  1299  2A9B               	goto	u4011
  9120  129A  07B9               	addwf	(str_to_num@Num+1),f
  9121  129B                     u4011:
  9122  129B  0836               	movf	2+(??_str_to_num+3)+0,w
  9123  129C  1103               	clrz
  9124  129D  1803               	skipnc
  9125  129E  3E01               	addlw	1
  9126  129F  1903               	skipnz
  9127  12A0  2AA2               	goto	u4012
  9128  12A1  07BA               	addwf	(str_to_num@Num+2),f
  9129  12A2                     u4012:
  9130  12A2  0837               	movf	3+(??_str_to_num+3)+0,w
  9131  12A3  1103               	clrz
  9132  12A4  1803               	skipnc
  9133  12A5  3E01               	addlw	1
  9134  12A6  1903               	skipnz
  9135  12A7  2AA9               	goto	u4013
  9136  12A8  07BB               	addwf	(str_to_num@Num+3),f
  9137  12A9                     u4013:
  9138                           
  9139  12A9  2AAA               	goto	l11263
  9140                           	line	147
  9141                           	
  9142  12AA                     l1129:	
  9143                           	line	140
  9144                           	
  9145  12AA                     l11263:	
  9146  12AA  3001               	movlw	(01h)
  9147  12AB  00B1               	movwf	(??_str_to_num+0)+0
  9148  12AC  0831               	movf	(??_str_to_num+0)+0,w
  9149  12AD  07BC               	addwf	(str_to_num@i),f
  9150  12AE  2AAF               	goto	l11265
  9151                           	
  9152  12AF                     l1127:	
  9153                           	
  9154  12AF                     l11265:	
  9155  12AF  083C               	movf	(str_to_num@i),w
  9156  12B0  073D               	addwf	(str_to_num@String),w
  9157  12B1  00B1               	movwf	(??_str_to_num+0)+0
  9158  12B2  0831               	movf	0+(??_str_to_num+0)+0,w
  9159  12B3  0084               	movwf	fsr0
  9160  12B4  1783               	bsf	status, 7	;select IRP bank2
  9161  12B5  0880               	movf	indf,f
  9162  12B6  1D03               	skipz
  9163  12B7  2AB9               	goto	u4021
  9164  12B8  2ABA               	goto	u4020
  9165  12B9                     u4021:
  9166  12B9  2A49               	goto	l11255
  9167  12BA                     u4020:
  9168  12BA  2ABB               	goto	l11267
  9169                           	
  9170  12BB                     l1130:	
  9171                           	line	149
  9172                           	
  9173  12BB                     l11267:	
  9174                           ;Serial.c: 147: }
  9175                           ;Serial.c: 148: }
  9176                           ;Serial.c: 149: if( String[ 0 ] == '-' ) Num *= -1 ;
  9177  12BB  083D               	movf	(str_to_num@String),w
  9178  12BC  0084               	movwf	fsr0
  9179  12BD  0800               	movf	indf,w
  9180  12BE  3A2D               	xorlw	02Dh
  9181  12BF  1D03               	skipz
  9182  12C0  2AC2               	goto	u4031
  9183  12C1  2AC3               	goto	u4030
  9184  12C2                     u4031:
  9185  12C2  2AE3               	goto	l11271
  9186  12C3                     u4030:
  9187                           	
  9188  12C3                     l11269:	
  9189  12C3  30FF               	movlw	0FFh
  9190  12C4  00A3               	movwf	(?___lmul+3)
  9191  12C5  30FF               	movlw	0FFh
  9192  12C6  00A2               	movwf	(?___lmul+2)
  9193  12C7  30FF               	movlw	0FFh
  9194  12C8  00A1               	movwf	(?___lmul+1)
  9195  12C9  30FF               	movlw	0FFh
  9196  12CA  00A0               	movwf	(?___lmul)
  9197                           
  9198  12CB  083B               	movf	(str_to_num@Num+3),w
  9199  12CC  00A7               	movwf	3+(?___lmul)+04h
  9200  12CD  083A               	movf	(str_to_num@Num+2),w
  9201  12CE  00A6               	movwf	2+(?___lmul)+04h
  9202  12CF  0839               	movf	(str_to_num@Num+1),w
  9203  12D0  00A5               	movwf	1+(?___lmul)+04h
  9204  12D1  0838               	movf	(str_to_num@Num),w
  9205  12D2  00A4               	movwf	0+(?___lmul)+04h
  9206                           
  9207  12D3  160A  118A  2010   	fcall	___lmul
              160A  118A         
  9208  12D8  1283               	bcf	status, 5	;RP0=0, select bank0
  9209  12D9  1303               	bcf	status, 6	;RP1=0, select bank0
  9210  12DA  0823               	movf	(3+(?___lmul)),w
  9211  12DB  00BB               	movwf	(str_to_num@Num+3)
  9212  12DC  0822               	movf	(2+(?___lmul)),w
  9213  12DD  00BA               	movwf	(str_to_num@Num+2)
  9214  12DE  0821               	movf	(1+(?___lmul)),w
  9215  12DF  00B9               	movwf	(str_to_num@Num+1)
  9216  12E0  0820               	movf	(0+(?___lmul)),w
  9217  12E1  00B8               	movwf	(str_to_num@Num)
  9218                           
  9219  12E2  2AE3               	goto	l11271
  9220                           	
  9221  12E3                     l1131:	
  9222                           	line	150
  9223                           	
  9224  12E3                     l11271:	
  9225                           ;Serial.c: 150: return Num ;
  9226  12E3  083B               	movf	(str_to_num@Num+3),w
  9227  12E4  00B0               	movwf	(?_str_to_num+3)
  9228  12E5  083A               	movf	(str_to_num@Num+2),w
  9229  12E6  00AF               	movwf	(?_str_to_num+2)
  9230  12E7  0839               	movf	(str_to_num@Num+1),w
  9231  12E8  00AE               	movwf	(?_str_to_num+1)
  9232  12E9  0838               	movf	(str_to_num@Num),w
  9233  12EA  00AD               	movwf	(?_str_to_num)
  9234                           
  9235  12EB  2AEC               	goto	l1132
  9236                           	
  9237  12EC                     l11273:	
  9238                           	line	151
  9239                           	
  9240  12EC                     l1132:	
  9241  12EC  0008               	return
  9242                           	opt stack 0
  9243                           GLOBAL	__end_of_str_to_num
  9244  12ED                     	__end_of_str_to_num:
  9245 ;; =============== function _str_to_num ends ============
  9246                           
  9247                           	signat	_str_to_num,4220
  9248                           	global	_USARTGetString
  9249                           psect	text1165,local,class=CODE,delta=2
  9250                           global __ptext1165
  9251  1D50                     __ptext1165:
  9252                           
  9253 ;; *************** function _USARTGetString *****************
  9254 ;; Defined at:
  9255 ;;		line 79 in file "Serial.c"
  9256 ;; Parameters:    Size  Location     Type
  9257 ;;		None
  9258 ;; Auto vars:     Size  Location     Type
  9259 ;;  charcur         1    4[BANK0 ] unsigned char 
  9260 ;;  i               1    3[BANK0 ] unsigned char 
  9261 ;; Return value:  Size  Location     Type
  9262 ;;                  1    wreg      unsigned char 
  9263 ;; Registers used:
  9264 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9265 ;; Tracked objects:
  9266 ;;		On entry : 0/0
  9267 ;;		On exit  : 0/0
  9268 ;;		Unchanged: 0/0
  9269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9270 ;;      Params:         0       0       0       0       0
  9271 ;;      Locals:         0       2       0       0       0
  9272 ;;      Temps:          0       1       0       0       0
  9273 ;;      Totals:         0       3       0       0       0
  9274 ;;Total ram usage:        3 bytes
  9275 ;; Hardware stack levels used:    1
  9276 ;; Hardware stack levels required when called:    3
  9277 ;; This function calls:
  9278 ;;		_UARTGetChar
  9279 ;; This function is called by:
  9280 ;;		_getData
  9281 ;; This function uses a non-reentrant model
  9282 ;;
  9283                           psect	text1165
  9284                           	file	"Serial.c"
  9285                           	line	79
  9286                           	global	__size_of_USARTGetString
  9287  004A                     	__size_of_USARTGetString	equ	__end_of_USARTGetString-_USARTGetString
  9288                           	
  9289  1D50                     _USARTGetString:	
  9290                           	opt	stack 3
  9291                           ; Regs used in _USARTGetString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9292                           	line	80
  9293                           	
  9294  1D50                     l11227:	
  9295                           ;Serial.c: 80: RCEN = 1;
  9296  1D50  1683               	bsf	status, 5	;RP0=1, select bank1
  9297  1D51  1303               	bcf	status, 6	;RP1=0, select bank1
  9298  1D52  1591               	bsf	(1163/8)^080h,(1163)&7
  9299                           	line	81
  9300                           	
  9301  1D53                     l11229:	
  9302                           ;Serial.c: 81: unsigned char charcur = '0';
  9303  1D53  3030               	movlw	(030h)
  9304  1D54  1283               	bcf	status, 5	;RP0=0, select bank0
  9305  1D55  1303               	bcf	status, 6	;RP1=0, select bank0
  9306  1D56  00A2               	movwf	(??_USARTGetString+0)+0
  9307  1D57  0822               	movf	(??_USARTGetString+0)+0,w
  9308  1D58  00A4               	movwf	(USARTGetString@charcur)
  9309                           	line	82
  9310                           	
  9311  1D59                     l11231:	
  9312                           ;Serial.c: 82: unsigned char i=0;
  9313  1D59  01A3               	clrf	(USARTGetString@i)
  9314                           	line	83
  9315                           	
  9316  1D5A                     l11233:	
  9317                           ;Serial.c: 83: charcur = UARTGetChar();
  9318  1D5A  160A  158A  2354   	fcall	_UARTGetChar
              160A  158A         
  9319  1D5F  1283               	bcf	status, 5	;RP0=0, select bank0
  9320  1D60  1303               	bcf	status, 6	;RP1=0, select bank0
  9321  1D61  00A2               	movwf	(??_USARTGetString+0)+0
  9322  1D62  0822               	movf	(??_USARTGetString+0)+0,w
  9323  1D63  00A4               	movwf	(USARTGetString@charcur)
  9324                           	line	85
  9325                           ;Serial.c: 85: while((charcur != '\n')&&(charcur != '\r'))
  9326  1D64  2D83               	goto	l11243
  9327                           	
  9328  1D65                     l1116:	
  9329                           	line	87
  9330                           	
  9331  1D65                     l11235:	
  9332                           ;Serial.c: 86: {
  9333                           ;Serial.c: 87: if( i < 10-1 )
  9334  1D65  3009               	movlw	(09h)
  9335  1D66  0223               	subwf	(USARTGetString@i),w
  9336  1D67  1803               	skipnc
  9337  1D68  2D6A               	goto	u3961
  9338  1D69  2D6B               	goto	u3960
  9339  1D6A                     u3961:
  9340  1D6A  2D78               	goto	l11241
  9341  1D6B                     u3960:
  9342                           	line	89
  9343                           	
  9344  1D6B                     l11237:	
  9345                           ;Serial.c: 88: {
  9346                           ;Serial.c: 89: Commandstr[i] = charcur;
  9347  1D6B  0824               	movf	(USARTGetString@charcur),w
  9348  1D6C  00A2               	movwf	(??_USARTGetString+0)+0
  9349  1D6D  0823               	movf	(USARTGetString@i),w
  9350  1D6E  3EC1               	addlw	_Commandstr&0ffh
  9351  1D6F  0084               	movwf	fsr0
  9352  1D70  0822               	movf	(??_USARTGetString+0)+0,w
  9353  1D71  1783               	bsf	status, 7	;select IRP bank3
  9354  1D72  0080               	movwf	indf
  9355                           	line	90
  9356                           	
  9357  1D73                     l11239:	
  9358                           ;Serial.c: 90: i++;
  9359  1D73  3001               	movlw	(01h)
  9360  1D74  00A2               	movwf	(??_USARTGetString+0)+0
  9361  1D75  0822               	movf	(??_USARTGetString+0)+0,w
  9362  1D76  07A3               	addwf	(USARTGetString@i),f
  9363  1D77  2D78               	goto	l11241
  9364                           	line	91
  9365                           	
  9366  1D78                     l1117:	
  9367                           	line	92
  9368                           	
  9369  1D78                     l11241:	
  9370                           ;Serial.c: 91: }
  9371                           ;Serial.c: 92: charcur = UARTGetChar();
  9372  1D78  160A  158A  2354   	fcall	_UARTGetChar
              160A  158A         
  9373  1D7D  1283               	bcf	status, 5	;RP0=0, select bank0
  9374  1D7E  1303               	bcf	status, 6	;RP1=0, select bank0
  9375  1D7F  00A2               	movwf	(??_USARTGetString+0)+0
  9376  1D80  0822               	movf	(??_USARTGetString+0)+0,w
  9377  1D81  00A4               	movwf	(USARTGetString@charcur)
  9378  1D82  2D83               	goto	l11243
  9379                           	line	93
  9380                           	
  9381  1D83                     l1115:	
  9382                           	line	85
  9383                           	
  9384  1D83                     l11243:	
  9385  1D83  0824               	movf	(USARTGetString@charcur),w
  9386  1D84  3A0A               	xorlw	0Ah
  9387  1D85  1903               	skipnz
  9388  1D86  2D88               	goto	u3971
  9389  1D87  2D89               	goto	u3970
  9390  1D88                     u3971:
  9391  1D88  2D91               	goto	l11247
  9392  1D89                     u3970:
  9393                           	
  9394  1D89                     l11245:	
  9395  1D89  0824               	movf	(USARTGetString@charcur),w
  9396  1D8A  3A0D               	xorlw	0Dh
  9397  1D8B  1D03               	skipz
  9398  1D8C  2D8E               	goto	u3981
  9399  1D8D  2D8F               	goto	u3980
  9400  1D8E                     u3981:
  9401  1D8E  2D65               	goto	l11235
  9402  1D8F                     u3980:
  9403  1D8F  2D91               	goto	l11247
  9404                           	
  9405  1D90                     l1119:	
  9406  1D90  2D91               	goto	l11247
  9407                           	
  9408  1D91                     l1120:	
  9409                           	line	94
  9410                           	
  9411  1D91                     l11247:	
  9412                           ;Serial.c: 93: }
  9413                           ;Serial.c: 94: Commandstr[i] = '\0';
  9414  1D91  0823               	movf	(USARTGetString@i),w
  9415  1D92  3EC1               	addlw	_Commandstr&0ffh
  9416  1D93  0084               	movwf	fsr0
  9417  1D94  1783               	bsf	status, 7	;select IRP bank3
  9418  1D95  0180               	clrf	indf
  9419                           	line	95
  9420                           	
  9421  1D96                     l11249:	
  9422                           ;Serial.c: 95: RCEN = 0;
  9423  1D96  1683               	bsf	status, 5	;RP0=1, select bank1
  9424  1D97  1303               	bcf	status, 6	;RP1=0, select bank1
  9425  1D98  1191               	bcf	(1163/8)^080h,(1163)&7
  9426                           	line	96
  9427                           	
  9428  1D99                     l1121:	
  9429  1D99  0008               	return
  9430                           	opt stack 0
  9431                           GLOBAL	__end_of_USARTGetString
  9432  1D9A                     	__end_of_USARTGetString:
  9433 ;; =============== function _USARTGetString ends ============
  9434                           
  9435                           	signat	_USARTGetString,89
  9436                           	global	_USARTWriteInt
  9437                           psect	text1166,local,class=CODE,delta=2
  9438                           global __ptext1166
  9439  147D                     __ptext1166:
  9440                           
  9441 ;; *************** function _USARTWriteInt *****************
  9442 ;; Defined at:
  9443 ;;		line 38 in file "Serial.c"
  9444 ;; Parameters:    Size  Location     Type
  9445 ;;  val             4   15[BANK0 ] long 
  9446 ;; Auto vars:     Size  Location     Type
  9447 ;;  str             8   23[BANK0 ] unsigned char [8]
  9448 ;;  i               2   31[BANK0 ] int 
  9449 ;; Return value:  Size  Location     Type
  9450 ;;		None               void
  9451 ;; Registers used:
  9452 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9453 ;; Tracked objects:
  9454 ;;		On entry : 0/0
  9455 ;;		On exit  : 0/0
  9456 ;;		Unchanged: 0/0
  9457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9458 ;;      Params:         0       4       0       0       0
  9459 ;;      Locals:         0      10       0       0       0
  9460 ;;      Temps:          0       4       0       0       0
  9461 ;;      Totals:         0      18       0       0       0
  9462 ;;Total ram usage:       18 bytes
  9463 ;; Hardware stack levels used:    1
  9464 ;; Hardware stack levels required when called:    3
  9465 ;; This function calls:
  9466 ;;		_USARTWriteChar
  9467 ;;		___almod
  9468 ;;		___aldiv
  9469 ;; This function is called by:
  9470 ;;		_DispallCur
  9471 ;;		_Calc_SetPoint
  9472 ;;		_get_Actrpm
  9473 ;;		_Calc_PID_op
  9474 ;; This function uses a non-reentrant model
  9475 ;;
  9476                           psect	text1166
  9477                           	file	"Serial.c"
  9478                           	line	38
  9479                           	global	__size_of_USARTWriteInt
  9480  00CB                     	__size_of_USARTWriteInt	equ	__end_of_USARTWriteInt-_USARTWriteInt
  9481                           	
  9482  147D                     _USARTWriteInt:	
  9483                           	opt	stack 3
  9484                           ; Regs used in _USARTWriteInt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9485                           	line	39
  9486                           	
  9487  147D                     l11191:	
  9488                           ;Serial.c: 39: char str[8]={'0','0','0','0','0','0','0','0'};
  9489  147D  3037               	movlw	(USARTWriteInt@str)&0ffh
  9490  147E  0084               	movwf	fsr0
  9491  147F  30CF               	movlw	low(USARTWriteInt@F1821)
  9492  1480  1283               	bcf	status, 5	;RP0=0, select bank0
  9493  1481  1303               	bcf	status, 6	;RP1=0, select bank0
  9494  1482  00B3               	movwf	(??_USARTWriteInt+0)+0
  9495  1483  0804               	movf	fsr0,w
  9496  1484  00B4               	movwf	((??_USARTWriteInt+0)+0+1)
  9497  1485  3008               	movlw	8
  9498  1486  00B5               	movwf	((??_USARTWriteInt+0)+0+2)
  9499  1487                     u3900:
  9500  1487  0833               	movf	(??_USARTWriteInt+0)+0,w
  9501  1488  0084               	movwf	fsr0
  9502  1489  1783               	bsf	status, 7	;select IRP bank3
  9503                           	
  9504  148A  0800               	movf	indf,w
  9505  148B  00B6               	movwf	((??_USARTWriteInt+0)+0+3)
  9506  148C  0AB3               	incf	(??_USARTWriteInt+0)+0,f
  9507  148D  0834               	movf	((??_USARTWriteInt+0)+0+1),w
  9508  148E  0084               	movwf	fsr0
  9509  148F  1383               	bcf	status, 7	;select IRP bank0
  9510                           	
  9511  1490  0836               	movf	((??_USARTWriteInt+0)+0+3),w
  9512  1491  0080               	movwf	indf
  9513  1492  0AB4               	incf	((??_USARTWriteInt+0)+0+1),f
  9514  1493  0BB5               	decfsz	((??_USARTWriteInt+0)+0+2),f
  9515  1494  2C87               	goto	u3900
  9516                           	line	40
  9517                           	
  9518  1495                     l11193:	
  9519                           ;Serial.c: 40: int i = 7;
  9520  1495  3007               	movlw	low(07h)
  9521  1496  00BF               	movwf	(USARTWriteInt@i)
  9522  1497  3000               	movlw	high(07h)
  9523  1498  00C0               	movwf	((USARTWriteInt@i))+1
  9524                           	line	42
  9525                           	
  9526  1499                     l11195:	
  9527                           ;Serial.c: 42: if( val < 0 )
  9528  1499  1FB2               	btfss	(USARTWriteInt@val+3),7
  9529  149A  2C9C               	goto	u3911
  9530  149B  2C9D               	goto	u3910
  9531  149C                     u3911:
  9532  149C  2CB1               	goto	l11201
  9533  149D                     u3910:
  9534                           	line	44
  9535                           	
  9536  149D                     l11197:	
  9537                           ;Serial.c: 43: {
  9538                           ;Serial.c: 44: USARTWriteChar('-');
  9539  149D  302D               	movlw	(02Dh)
  9540  149E  160A  118A  2000   	fcall	_USARTWriteChar
              160A  118A         
  9541                           	line	45
  9542                           	
  9543  14A3                     l11199:	
  9544                           ;Serial.c: 45: val = val * -1;
  9545  14A3  1283               	bcf	status, 5	;RP0=0, select bank0
  9546  14A4  1303               	bcf	status, 6	;RP1=0, select bank0
  9547  14A5  09AF               	comf	(USARTWriteInt@val),f
  9548  14A6  09B0               	comf	(USARTWriteInt@val+1),f
  9549  14A7  09B1               	comf	(USARTWriteInt@val+2),f
  9550  14A8  09B2               	comf	(USARTWriteInt@val+3),f
  9551  14A9  0AAF               	incf	(USARTWriteInt@val),f
  9552  14AA  1903               	skipnz
  9553  14AB  0AB0               	incf	(USARTWriteInt@val+1),f
  9554  14AC  1903               	skipnz
  9555  14AD  0AB1               	incf	(USARTWriteInt@val+2),f
  9556  14AE  1903               	skipnz
  9557  14AF  0AB2               	incf	(USARTWriteInt@val+3),f
  9558                           	line	46
  9559                           ;Serial.c: 46: }
  9560  14B0  2D09               	goto	l11213
  9561                           	line	47
  9562                           	
  9563  14B1                     l1098:	
  9564                           	line	49
  9565                           	
  9566  14B1                     l11201:	
  9567                           ;Serial.c: 47: else
  9568                           ;Serial.c: 48: {
  9569                           ;Serial.c: 49: USARTWriteChar('+');
  9570  14B1  302B               	movlw	(02Bh)
  9571  14B2  160A  118A  2000   	fcall	_USARTWriteChar
              160A  118A         
  9572  14B7  2D09               	goto	l11213
  9573                           	line	50
  9574                           	
  9575  14B8                     l1099:	
  9576                           	line	51
  9577                           ;Serial.c: 50: }
  9578                           ;Serial.c: 51: while(val)
  9579  14B8  2D09               	goto	l11213
  9580                           	
  9581  14B9                     l1101:	
  9582                           	line	53
  9583                           	
  9584  14B9                     l11203:	
  9585                           ;Serial.c: 52: {
  9586                           ;Serial.c: 53: str[i]=(val % 10)+'0';
  9587  14B9  3000               	movlw	0
  9588  14BA  1283               	bcf	status, 5	;RP0=0, select bank0
  9589  14BB  1303               	bcf	status, 6	;RP1=0, select bank0
  9590  14BC  00A3               	movwf	(?___almod+3)
  9591  14BD  3000               	movlw	0
  9592  14BE  00A2               	movwf	(?___almod+2)
  9593  14BF  3000               	movlw	0
  9594  14C0  00A1               	movwf	(?___almod+1)
  9595  14C1  300A               	movlw	0Ah
  9596  14C2  00A0               	movwf	(?___almod)
  9597                           
  9598  14C3  0832               	movf	(USARTWriteInt@val+3),w
  9599  14C4  00A7               	movwf	3+(?___almod)+04h
  9600  14C5  0831               	movf	(USARTWriteInt@val+2),w
  9601  14C6  00A6               	movwf	2+(?___almod)+04h
  9602  14C7  0830               	movf	(USARTWriteInt@val+1),w
  9603  14C8  00A5               	movwf	1+(?___almod)+04h
  9604  14C9  082F               	movf	(USARTWriteInt@val),w
  9605  14CA  00A4               	movwf	0+(?___almod)+04h
  9606                           
  9607  14CB  160A  118A  205C   	fcall	___almod
              160A  118A         
  9608  14D0  1283               	bcf	status, 5	;RP0=0, select bank0
  9609  14D1  1303               	bcf	status, 6	;RP1=0, select bank0
  9610  14D2  0820               	movf	0+(((0+(?___almod)))),w
  9611  14D3  3E30               	addlw	030h
  9612  14D4  00B3               	movwf	(??_USARTWriteInt+0)+0
  9613  14D5  083F               	movf	(USARTWriteInt@i),w
  9614  14D6  3E37               	addlw	USARTWriteInt@str&0ffh
  9615  14D7  0084               	movwf	fsr0
  9616  14D8  0833               	movf	(??_USARTWriteInt+0)+0,w
  9617  14D9  1383               	bcf	status, 7	;select IRP bank0
  9618  14DA  0080               	movwf	indf
  9619                           	line	54
  9620                           	
  9621  14DB                     l11205:	
  9622                           ;Serial.c: 54: val = val / 10;
  9623  14DB  3000               	movlw	0
  9624  14DC  00A3               	movwf	(?___aldiv+3)
  9625  14DD  3000               	movlw	0
  9626  14DE  00A2               	movwf	(?___aldiv+2)
  9627  14DF  3000               	movlw	0
  9628  14E0  00A1               	movwf	(?___aldiv+1)
  9629  14E1  300A               	movlw	0Ah
  9630  14E2  00A0               	movwf	(?___aldiv)
  9631                           
  9632  14E3  0832               	movf	(USARTWriteInt@val+3),w
  9633  14E4  00A7               	movwf	3+(?___aldiv)+04h
  9634  14E5  0831               	movf	(USARTWriteInt@val+2),w
  9635  14E6  00A6               	movwf	2+(?___aldiv)+04h
  9636  14E7  0830               	movf	(USARTWriteInt@val+1),w
  9637  14E8  00A5               	movwf	1+(?___aldiv)+04h
  9638  14E9  082F               	movf	(USARTWriteInt@val),w
  9639  14EA  00A4               	movwf	0+(?___aldiv)+04h
  9640                           
  9641  14EB  160A  118A  2194   	fcall	___aldiv
              160A  118A         
  9642  14F0  1283               	bcf	status, 5	;RP0=0, select bank0
  9643  14F1  1303               	bcf	status, 6	;RP1=0, select bank0
  9644  14F2  0823               	movf	(3+(?___aldiv)),w
  9645  14F3  00B2               	movwf	(USARTWriteInt@val+3)
  9646  14F4  0822               	movf	(2+(?___aldiv)),w
  9647  14F5  00B1               	movwf	(USARTWriteInt@val+2)
  9648  14F6  0821               	movf	(1+(?___aldiv)),w
  9649  14F7  00B0               	movwf	(USARTWriteInt@val+1)
  9650  14F8  0820               	movf	(0+(?___aldiv)),w
  9651  14F9  00AF               	movwf	(USARTWriteInt@val)
  9652                           
  9653                           	line	55
  9654                           	
  9655  14FA                     l11207:	
  9656                           ;Serial.c: 55: i--;
  9657  14FA  30FF               	movlw	low(-1)
  9658  14FB  07BF               	addwf	(USARTWriteInt@i),f
  9659  14FC  1803               	skipnc
  9660  14FD  0AC0               	incf	(USARTWriteInt@i+1),f
  9661  14FE  30FF               	movlw	high(-1)
  9662  14FF  07C0               	addwf	(USARTWriteInt@i+1),f
  9663                           	line	56
  9664                           	
  9665  1500                     l11209:	
  9666                           ;Serial.c: 56: if ( i == 0 ) break ;
  9667  1500  0840               	movf	((USARTWriteInt@i+1)),w
  9668  1501  043F               	iorwf	((USARTWriteInt@i)),w
  9669  1502  1D03               	skipz
  9670  1503  2D05               	goto	u3921
  9671  1504  2D06               	goto	u3920
  9672  1505                     u3921:
  9673  1505  2D09               	goto	l11213
  9674  1506                     u3920:
  9675  1506  2D14               	goto	l11215
  9676                           	
  9677  1507                     l11211:	
  9678  1507  2D14               	goto	l11215
  9679                           	
  9680  1508                     l1102:	
  9681  1508  2D09               	goto	l11213
  9682                           	line	57
  9683                           	
  9684  1509                     l1100:	
  9685                           	line	51
  9686                           	
  9687  1509                     l11213:	
  9688  1509  1283               	bcf	status, 5	;RP0=0, select bank0
  9689  150A  1303               	bcf	status, 6	;RP1=0, select bank0
  9690  150B  0832               	movf	(USARTWriteInt@val+3),w
  9691  150C  0431               	iorwf	(USARTWriteInt@val+2),w
  9692  150D  0430               	iorwf	(USARTWriteInt@val+1),w
  9693  150E  042F               	iorwf	(USARTWriteInt@val),w
  9694  150F  1D03               	skipz
  9695  1510  2D12               	goto	u3931
  9696  1511  2D13               	goto	u3930
  9697  1512                     u3931:
  9698  1512  2CB9               	goto	l11203
  9699  1513                     u3930:
  9700  1513  2D14               	goto	l11215
  9701                           	
  9702  1514                     l1103:	
  9703                           	line	58
  9704                           	
  9705  1514                     l11215:	
  9706                           ;Serial.c: 57: }
  9707                           ;Serial.c: 58: for( i = 0 ; i < 8 ; i++ )
  9708  1514  01BF               	clrf	(USARTWriteInt@i)
  9709  1515  01C0               	clrf	(USARTWriteInt@i+1)
  9710                           	
  9711  1516                     l11217:	
  9712  1516  0840               	movf	(USARTWriteInt@i+1),w
  9713  1517  3A80               	xorlw	80h
  9714  1518  00FF               	movwf	btemp+1
  9715  1519  3080               	movlw	(high(08h))^80h
  9716  151A  027F               	subwf	btemp+1,w
  9717  151B  1D03               	skipz
  9718  151C  2D1F               	goto	u3945
  9719  151D  3008               	movlw	low(08h)
  9720  151E  023F               	subwf	(USARTWriteInt@i),w
  9721  151F                     u3945:
  9722                           
  9723  151F  1C03               	skipc
  9724  1520  2D22               	goto	u3941
  9725  1521  2D23               	goto	u3940
  9726  1522                     u3941:
  9727  1522  2D25               	goto	l11221
  9728  1523                     u3940:
  9729  1523  2D47               	goto	l1106
  9730                           	
  9731  1524                     l11219:	
  9732  1524  2D47               	goto	l1106
  9733                           	line	59
  9734                           	
  9735  1525                     l1104:	
  9736                           	line	60
  9737                           	
  9738  1525                     l11221:	
  9739                           ;Serial.c: 59: {
  9740                           ;Serial.c: 60: USARTWriteChar(str[i]);
  9741  1525  1283               	bcf	status, 5	;RP0=0, select bank0
  9742  1526  1303               	bcf	status, 6	;RP1=0, select bank0
  9743  1527  083F               	movf	(USARTWriteInt@i),w
  9744  1528  3E37               	addlw	USARTWriteInt@str&0ffh
  9745  1529  0084               	movwf	fsr0
  9746  152A  1383               	bcf	status, 7	;select IRP bank0
  9747  152B  0800               	movf	indf,w
  9748  152C  160A  118A  2000   	fcall	_USARTWriteChar
              160A  118A         
  9749                           	line	58
  9750                           	
  9751  1531                     l11223:	
  9752  1531  3001               	movlw	low(01h)
  9753  1532  1283               	bcf	status, 5	;RP0=0, select bank0
  9754  1533  1303               	bcf	status, 6	;RP1=0, select bank0
  9755  1534  07BF               	addwf	(USARTWriteInt@i),f
  9756  1535  1803               	skipnc
  9757  1536  0AC0               	incf	(USARTWriteInt@i+1),f
  9758  1537  3000               	movlw	high(01h)
  9759  1538  07C0               	addwf	(USARTWriteInt@i+1),f
  9760                           	
  9761  1539                     l11225:	
  9762  1539  0840               	movf	(USARTWriteInt@i+1),w
  9763  153A  3A80               	xorlw	80h
  9764  153B  00FF               	movwf	btemp+1
  9765  153C  3080               	movlw	(high(08h))^80h
  9766  153D  027F               	subwf	btemp+1,w
  9767  153E  1D03               	skipz
  9768  153F  2D42               	goto	u3955
  9769  1540  3008               	movlw	low(08h)
  9770  1541  023F               	subwf	(USARTWriteInt@i),w
  9771  1542                     u3955:
  9772                           
  9773  1542  1C03               	skipc
  9774  1543  2D45               	goto	u3951
  9775  1544  2D46               	goto	u3950
  9776  1545                     u3951:
  9777  1545  2D25               	goto	l11221
  9778  1546                     u3950:
  9779  1546  2D47               	goto	l1106
  9780                           	
  9781  1547                     l1105:	
  9782                           	line	62
  9783                           	
  9784  1547                     l1106:	
  9785  1547  0008               	return
  9786                           	opt stack 0
  9787                           GLOBAL	__end_of_USARTWriteInt
  9788  1548                     	__end_of_USARTWriteInt:
  9789 ;; =============== function _USARTWriteInt ends ============
  9790                           
  9791                           	signat	_USARTWriteInt,4216
  9792                           	global	_USARTWriteString
  9793                           psect	text1167,local,class=CODE,delta=2
  9794                           global __ptext1167
  9795  1B90                     __ptext1167:
  9796                           
  9797 ;; *************** function _USARTWriteString *****************
  9798 ;; Defined at:
  9799 ;;		line 29 in file "Serial.c"
  9800 ;; Parameters:    Size  Location     Type
  9801 ;;  str             1    wreg     PTR const unsigned char 
  9802 ;;		 -> strnw(2), 
  9803 ;; Auto vars:     Size  Location     Type
  9804 ;;  str             1    2[BANK0 ] PTR const unsigned char 
  9805 ;;		 -> strnw(2), 
  9806 ;; Return value:  Size  Location     Type
  9807 ;;		None               void
  9808 ;; Registers used:
  9809 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9810 ;; Tracked objects:
  9811 ;;		On entry : 0/0
  9812 ;;		On exit  : 0/0
  9813 ;;		Unchanged: 0/0
  9814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9815 ;;      Params:         0       0       0       0       0
  9816 ;;      Locals:         0       1       0       0       0
  9817 ;;      Temps:          0       1       0       0       0
  9818 ;;      Totals:         0       2       0       0       0
  9819 ;;Total ram usage:        2 bytes
  9820 ;; Hardware stack levels used:    1
  9821 ;; Hardware stack levels required when called:    3
  9822 ;; This function calls:
  9823 ;;		_USARTWriteChar
  9824 ;; This function is called by:
  9825 ;;		_DispallCur
  9826 ;;		_getData
  9827 ;;		_Writeeeprom
  9828 ;;		_Calc_SetPoint
  9829 ;;		_get_Actrpm
  9830 ;;		_Calc_PID_op
  9831 ;;		_main
  9832 ;; This function uses a non-reentrant model
  9833 ;;
  9834                           psect	text1167
  9835                           	file	"Serial.c"
  9836                           	line	29
  9837                           	global	__size_of_USARTWriteString
  9838  0025                     	__size_of_USARTWriteString	equ	__end_of_USARTWriteString-_USARTWriteString
  9839                           	
  9840  1B90                     _USARTWriteString:	
  9841                           	opt	stack 3
  9842                           ; Regs used in _USARTWriteString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9843                           ;USARTWriteString@str stored from wreg
  9844  1B90  1283               	bcf	status, 5	;RP0=0, select bank0
  9845  1B91  1303               	bcf	status, 6	;RP1=0, select bank0
  9846  1B92  00A2               	movwf	(USARTWriteString@str)
  9847                           	line	30
  9848                           	
  9849  1B93                     l11183:	
  9850                           ;Serial.c: 30: while(*str!='\0')
  9851  1B93  2BA7               	goto	l11189
  9852                           	
  9853  1B94                     l1091:	
  9854                           	line	32
  9855                           	
  9856  1B94                     l11185:	
  9857                           ;Serial.c: 31: {
  9858                           ;Serial.c: 32: USARTWriteChar(*str);
  9859  1B94  0822               	movf	(USARTWriteString@str),w
  9860  1B95  0084               	movwf	fsr0
  9861  1B96  120A  118A  27F7   	fcall	stringdir
              160A  158A         
  9862  1B9B  160A  118A  2000   	fcall	_USARTWriteChar
              160A  158A         
  9863                           	line	33
  9864                           	
  9865  1BA0                     l11187:	
  9866                           ;Serial.c: 33: str++;
  9867  1BA0  3001               	movlw	(01h)
  9868  1BA1  1283               	bcf	status, 5	;RP0=0, select bank0
  9869  1BA2  1303               	bcf	status, 6	;RP1=0, select bank0
  9870  1BA3  00A1               	movwf	(??_USARTWriteString+0)+0
  9871  1BA4  0821               	movf	(??_USARTWriteString+0)+0,w
  9872  1BA5  07A2               	addwf	(USARTWriteString@str),f
  9873  1BA6  2BA7               	goto	l11189
  9874                           	line	34
  9875                           	
  9876  1BA7                     l1090:	
  9877                           	line	30
  9878                           	
  9879  1BA7                     l11189:	
  9880  1BA7  0822               	movf	(USARTWriteString@str),w
  9881  1BA8  0084               	movwf	fsr0
  9882  1BA9  120A  118A  27F7   	fcall	stringdir
              160A  158A         
  9883  1BAE  3800               	iorlw	0
  9884  1BAF  1D03               	skipz
  9885  1BB0  2BB2               	goto	u3891
  9886  1BB1  2BB3               	goto	u3890
  9887  1BB2                     u3891:
  9888  1BB2  2B94               	goto	l11185
  9889  1BB3                     u3890:
  9890  1BB3  2BB4               	goto	l1093
  9891                           	
  9892  1BB4                     l1092:	
  9893                           	line	35
  9894                           	
  9895  1BB4                     l1093:	
  9896  1BB4  0008               	return
  9897                           	opt stack 0
  9898                           GLOBAL	__end_of_USARTWriteString
  9899  1BB5                     	__end_of_USARTWriteString:
  9900 ;; =============== function _USARTWriteString ends ============
  9901                           
  9902                           	signat	_USARTWriteString,4216
  9903                           	global	___aldiv
  9904                           psect	text1168,local,class=CODE,delta=2
  9905                           global __ptext1168
  9906  1194                     __ptext1168:
  9907                           
  9908 ;; *************** function ___aldiv *****************
  9909 ;; Defined at:
  9910 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\aldiv.c"
  9911 ;; Parameters:    Size  Location     Type
  9912 ;;  divisor         4    0[BANK0 ] long 
  9913 ;;  dividend        4    4[BANK0 ] long 
  9914 ;; Auto vars:     Size  Location     Type
  9915 ;;  quotient        4   11[BANK0 ] long 
  9916 ;;  sign            1   10[BANK0 ] unsigned char 
  9917 ;;  counter         1    9[BANK0 ] unsigned char 
  9918 ;; Return value:  Size  Location     Type
  9919 ;;                  4    0[BANK0 ] long 
  9920 ;; Registers used:
  9921 ;;		wreg, status,2, status,0
  9922 ;; Tracked objects:
  9923 ;;		On entry : 0/0
  9924 ;;		On exit  : 0/0
  9925 ;;		Unchanged: 0/0
  9926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9927 ;;      Params:         0       8       0       0       0
  9928 ;;      Locals:         0       6       0       0       0
  9929 ;;      Temps:          0       1       0       0       0
  9930 ;;      Totals:         0      15       0       0       0
  9931 ;;Total ram usage:       15 bytes
  9932 ;; Hardware stack levels used:    1
  9933 ;; Hardware stack levels required when called:    2
  9934 ;; This function calls:
  9935 ;;		Nothing
  9936 ;; This function is called by:
  9937 ;;		_USARTWriteInt
  9938 ;; This function uses a non-reentrant model
  9939 ;;
  9940                           psect	text1168
  9941                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\aldiv.c"
  9942                           	line	5
  9943                           	global	__size_of___aldiv
  9944  00A8                     	__size_of___aldiv	equ	__end_of___aldiv-___aldiv
  9945                           	
  9946  1194                     ___aldiv:	
  9947                           	opt	stack 3
  9948                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  9949                           	line	9
  9950                           	
  9951  1194                     l11105:	
  9952  1194  1283               	bcf	status, 5	;RP0=0, select bank0
  9953  1195  1303               	bcf	status, 6	;RP1=0, select bank0
  9954  1196  01AA               	clrf	(___aldiv@sign)
  9955                           	line	10
  9956  1197  1FA3               	btfss	(___aldiv@divisor+3),7
  9957  1198  299A               	goto	u3751
  9958  1199  299B               	goto	u3750
  9959  119A                     u3751:
  9960  119A  29AA               	goto	l11111
  9961  119B                     u3750:
  9962                           	line	11
  9963                           	
  9964  119B                     l11107:	
  9965  119B  09A0               	comf	(___aldiv@divisor),f
  9966  119C  09A1               	comf	(___aldiv@divisor+1),f
  9967  119D  09A2               	comf	(___aldiv@divisor+2),f
  9968  119E  09A3               	comf	(___aldiv@divisor+3),f
  9969  119F  0AA0               	incf	(___aldiv@divisor),f
  9970  11A0  1903               	skipnz
  9971  11A1  0AA1               	incf	(___aldiv@divisor+1),f
  9972  11A2  1903               	skipnz
  9973  11A3  0AA2               	incf	(___aldiv@divisor+2),f
  9974  11A4  1903               	skipnz
  9975  11A5  0AA3               	incf	(___aldiv@divisor+3),f
  9976                           	line	12
  9977                           	
  9978  11A6                     l11109:	
  9979  11A6  01AA               	clrf	(___aldiv@sign)
  9980  11A7  1403               	bsf	status,0
  9981  11A8  0DAA               	rlf	(___aldiv@sign),f
  9982  11A9  29AA               	goto	l11111
  9983                           	line	13
  9984                           	
  9985  11AA                     l7888:	
  9986                           	line	14
  9987                           	
  9988  11AA                     l11111:	
  9989  11AA  1FA7               	btfss	(___aldiv@dividend+3),7
  9990  11AB  29AD               	goto	u3761
  9991  11AC  29AE               	goto	u3760
  9992  11AD                     u3761:
  9993  11AD  29BE               	goto	l11117
  9994  11AE                     u3760:
  9995                           	line	15
  9996                           	
  9997  11AE                     l11113:	
  9998  11AE  09A4               	comf	(___aldiv@dividend),f
  9999  11AF  09A5               	comf	(___aldiv@dividend+1),f
 10000  11B0  09A6               	comf	(___aldiv@dividend+2),f
 10001  11B1  09A7               	comf	(___aldiv@dividend+3),f
 10002  11B2  0AA4               	incf	(___aldiv@dividend),f
 10003  11B3  1903               	skipnz
 10004  11B4  0AA5               	incf	(___aldiv@dividend+1),f
 10005  11B5  1903               	skipnz
 10006  11B6  0AA6               	incf	(___aldiv@dividend+2),f
 10007  11B7  1903               	skipnz
 10008  11B8  0AA7               	incf	(___aldiv@dividend+3),f
 10009                           	line	16
 10010                           	
 10011  11B9                     l11115:	
 10012  11B9  3001               	movlw	(01h)
 10013  11BA  00A8               	movwf	(??___aldiv+0)+0
 10014  11BB  0828               	movf	(??___aldiv+0)+0,w
 10015  11BC  06AA               	xorwf	(___aldiv@sign),f
 10016  11BD  29BE               	goto	l11117
 10017                           	line	17
 10018                           	
 10019  11BE                     l7889:	
 10020                           	line	18
 10021                           	
 10022  11BE                     l11117:	
 10023  11BE  3000               	movlw	0
 10024  11BF  00AE               	movwf	(___aldiv@quotient+3)
 10025  11C0  3000               	movlw	0
 10026  11C1  00AD               	movwf	(___aldiv@quotient+2)
 10027  11C2  3000               	movlw	0
 10028  11C3  00AC               	movwf	(___aldiv@quotient+1)
 10029  11C4  3000               	movlw	0
 10030  11C5  00AB               	movwf	(___aldiv@quotient)
 10031                           
 10032                           	line	19
 10033                           	
 10034  11C6                     l11119:	
 10035  11C6  0823               	movf	(___aldiv@divisor+3),w
 10036  11C7  0422               	iorwf	(___aldiv@divisor+2),w
 10037  11C8  0421               	iorwf	(___aldiv@divisor+1),w
 10038  11C9  0420               	iorwf	(___aldiv@divisor),w
 10039  11CA  1903               	skipnz
 10040  11CB  29CD               	goto	u3771
 10041  11CC  29CE               	goto	u3770
 10042  11CD                     u3771:
 10043  11CD  2A22               	goto	l11139
 10044  11CE                     u3770:
 10045                           	line	20
 10046                           	
 10047  11CE                     l11121:	
 10048  11CE  01A9               	clrf	(___aldiv@counter)
 10049  11CF  1403               	bsf	status,0
 10050  11D0  0DA9               	rlf	(___aldiv@counter),f
 10051                           	line	21
 10052  11D1  29E0               	goto	l11125
 10053                           	
 10054  11D2                     l7892:	
 10055                           	line	22
 10056                           	
 10057  11D2                     l11123:	
 10058  11D2  3001               	movlw	01h
 10059  11D3  00A8               	movwf	(??___aldiv+0)+0
 10060  11D4                     u3785:
 10061  11D4  1003               	clrc
 10062  11D5  0DA0               	rlf	(___aldiv@divisor),f
 10063  11D6  0DA1               	rlf	(___aldiv@divisor+1),f
 10064  11D7  0DA2               	rlf	(___aldiv@divisor+2),f
 10065  11D8  0DA3               	rlf	(___aldiv@divisor+3),f
 10066  11D9  0BA8               	decfsz	(??___aldiv+0)+0
 10067  11DA  29D4               	goto	u3785
 10068                           	line	23
 10069  11DB  3001               	movlw	(01h)
 10070  11DC  00A8               	movwf	(??___aldiv+0)+0
 10071  11DD  0828               	movf	(??___aldiv+0)+0,w
 10072  11DE  07A9               	addwf	(___aldiv@counter),f
 10073  11DF  29E0               	goto	l11125
 10074                           	line	24
 10075                           	
 10076  11E0                     l7891:	
 10077                           	line	21
 10078                           	
 10079  11E0                     l11125:	
 10080  11E0  1FA3               	btfss	(___aldiv@divisor+3),(31)&7
 10081  11E1  29E3               	goto	u3791
 10082  11E2  29E4               	goto	u3790
 10083  11E3                     u3791:
 10084  11E3  29D2               	goto	l11123
 10085  11E4                     u3790:
 10086  11E4  29E6               	goto	l11127
 10087                           	
 10088  11E5                     l7893:	
 10089  11E5  29E6               	goto	l11127
 10090                           	line	25
 10091                           	
 10092  11E6                     l7894:	
 10093                           	line	26
 10094                           	
 10095  11E6                     l11127:	
 10096  11E6  3001               	movlw	01h
 10097  11E7  00A8               	movwf	(??___aldiv+0)+0
 10098  11E8                     u3805:
 10099  11E8  1003               	clrc
 10100  11E9  0DAB               	rlf	(___aldiv@quotient),f
 10101  11EA  0DAC               	rlf	(___aldiv@quotient+1),f
 10102  11EB  0DAD               	rlf	(___aldiv@quotient+2),f
 10103  11EC  0DAE               	rlf	(___aldiv@quotient+3),f
 10104  11ED  0BA8               	decfsz	(??___aldiv+0)+0
 10105  11EE  29E8               	goto	u3805
 10106                           	line	27
 10107                           	
 10108  11EF                     l11129:	
 10109  11EF  0823               	movf	(___aldiv@divisor+3),w
 10110  11F0  0227               	subwf	(___aldiv@dividend+3),w
 10111  11F1  1D03               	skipz
 10112  11F2  29FD               	goto	u3815
 10113  11F3  0822               	movf	(___aldiv@divisor+2),w
 10114  11F4  0226               	subwf	(___aldiv@dividend+2),w
 10115  11F5  1D03               	skipz
 10116  11F6  29FD               	goto	u3815
 10117  11F7  0821               	movf	(___aldiv@divisor+1),w
 10118  11F8  0225               	subwf	(___aldiv@dividend+1),w
 10119  11F9  1D03               	skipz
 10120  11FA  29FD               	goto	u3815
 10121  11FB  0820               	movf	(___aldiv@divisor),w
 10122  11FC  0224               	subwf	(___aldiv@dividend),w
 10123  11FD                     u3815:
 10124  11FD  1C03               	skipc
 10125  11FE  2A00               	goto	u3811
 10126  11FF  2A01               	goto	u3810
 10127  1200                     u3811:
 10128  1200  2A11               	goto	l11135
 10129  1201                     u3810:
 10130                           	line	28
 10131                           	
 10132  1201                     l11131:	
 10133  1201  0820               	movf	(___aldiv@divisor),w
 10134  1202  02A4               	subwf	(___aldiv@dividend),f
 10135  1203  0821               	movf	(___aldiv@divisor+1),w
 10136  1204  1C03               	skipc
 10137  1205  0F21               	incfsz	(___aldiv@divisor+1),w
 10138  1206  02A5               	subwf	(___aldiv@dividend+1),f
 10139  1207  0822               	movf	(___aldiv@divisor+2),w
 10140  1208  1C03               	skipc
 10141  1209  0F22               	incfsz	(___aldiv@divisor+2),w
 10142  120A  02A6               	subwf	(___aldiv@dividend+2),f
 10143  120B  0823               	movf	(___aldiv@divisor+3),w
 10144  120C  1C03               	skipc
 10145  120D  0F23               	incfsz	(___aldiv@divisor+3),w
 10146  120E  02A7               	subwf	(___aldiv@dividend+3),f
 10147                           	line	29
 10148                           	
 10149  120F                     l11133:	
 10150  120F  142B               	bsf	(___aldiv@quotient)+(0/8),(0)&7
 10151  1210  2A11               	goto	l11135
 10152                           	line	30
 10153                           	
 10154  1211                     l7895:	
 10155                           	line	31
 10156                           	
 10157  1211                     l11135:	
 10158  1211  3001               	movlw	01h
 10159  1212                     u3825:
 10160  1212  1003               	clrc
 10161  1213  0CA3               	rrf	(___aldiv@divisor+3),f
 10162  1214  0CA2               	rrf	(___aldiv@divisor+2),f
 10163  1215  0CA1               	rrf	(___aldiv@divisor+1),f
 10164  1216  0CA0               	rrf	(___aldiv@divisor),f
 10165  1217  3EFF               	addlw	-1
 10166  1218  1D03               	skipz
 10167  1219  2A12               	goto	u3825
 10168                           
 10169                           	line	32
 10170                           	
 10171  121A                     l11137:	
 10172  121A  3001               	movlw	low(01h)
 10173  121B  02A9               	subwf	(___aldiv@counter),f
 10174  121C  1D03               	btfss	status,2
 10175  121D  2A1F               	goto	u3831
 10176  121E  2A20               	goto	u3830
 10177  121F                     u3831:
 10178  121F  29E6               	goto	l11127
 10179  1220                     u3830:
 10180  1220  2A22               	goto	l11139
 10181                           	
 10182  1221                     l7896:	
 10183  1221  2A22               	goto	l11139
 10184                           	line	33
 10185                           	
 10186  1222                     l7890:	
 10187                           	line	34
 10188                           	
 10189  1222                     l11139:	
 10190  1222  082A               	movf	(___aldiv@sign),w
 10191  1223  1D03               	skipz
 10192  1224  2A26               	goto	u3840
 10193  1225  2A32               	goto	l11143
 10194  1226                     u3840:
 10195                           	line	35
 10196                           	
 10197  1226                     l11141:	
 10198  1226  09AB               	comf	(___aldiv@quotient),f
 10199  1227  09AC               	comf	(___aldiv@quotient+1),f
 10200  1228  09AD               	comf	(___aldiv@quotient+2),f
 10201  1229  09AE               	comf	(___aldiv@quotient+3),f
 10202  122A  0AAB               	incf	(___aldiv@quotient),f
 10203  122B  1903               	skipnz
 10204  122C  0AAC               	incf	(___aldiv@quotient+1),f
 10205  122D  1903               	skipnz
 10206  122E  0AAD               	incf	(___aldiv@quotient+2),f
 10207  122F  1903               	skipnz
 10208  1230  0AAE               	incf	(___aldiv@quotient+3),f
 10209  1231  2A32               	goto	l11143
 10210                           	
 10211  1232                     l7897:	
 10212                           	line	36
 10213                           	
 10214  1232                     l11143:	
 10215  1232  082E               	movf	(___aldiv@quotient+3),w
 10216  1233  00A3               	movwf	(?___aldiv+3)
 10217  1234  082D               	movf	(___aldiv@quotient+2),w
 10218  1235  00A2               	movwf	(?___aldiv+2)
 10219  1236  082C               	movf	(___aldiv@quotient+1),w
 10220  1237  00A1               	movwf	(?___aldiv+1)
 10221  1238  082B               	movf	(___aldiv@quotient),w
 10222  1239  00A0               	movwf	(?___aldiv)
 10223                           
 10224  123A  2A3B               	goto	l7898
 10225                           	
 10226  123B                     l11145:	
 10227                           	line	37
 10228                           	
 10229  123B                     l7898:	
 10230  123B  0008               	return
 10231                           	opt stack 0
 10232                           GLOBAL	__end_of___aldiv
 10233  123C                     	__end_of___aldiv:
 10234 ;; =============== function ___aldiv ends ============
 10235                           
 10236                           	signat	___aldiv,8316
 10237                           	global	___almod
 10238                           psect	text1169,local,class=CODE,delta=2
 10239                           global __ptext1169
 10240  105C                     __ptext1169:
 10241                           
 10242 ;; *************** function ___almod *****************
 10243 ;; Defined at:
 10244 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\almod.c"
 10245 ;; Parameters:    Size  Location     Type
 10246 ;;  divisor         4    0[BANK0 ] long 
 10247 ;;  dividend        4    4[BANK0 ] long 
 10248 ;; Auto vars:     Size  Location     Type
 10249 ;;  sign            1   10[BANK0 ] unsigned char 
 10250 ;;  counter         1    9[BANK0 ] unsigned char 
 10251 ;; Return value:  Size  Location     Type
 10252 ;;                  4    0[BANK0 ] long 
 10253 ;; Registers used:
 10254 ;;		wreg, status,2, status,0
 10255 ;; Tracked objects:
 10256 ;;		On entry : 0/0
 10257 ;;		On exit  : 0/0
 10258 ;;		Unchanged: 0/0
 10259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10260 ;;      Params:         0       8       0       0       0
 10261 ;;      Locals:         0       2       0       0       0
 10262 ;;      Temps:          0       1       0       0       0
 10263 ;;      Totals:         0      11       0       0       0
 10264 ;;Total ram usage:       11 bytes
 10265 ;; Hardware stack levels used:    1
 10266 ;; Hardware stack levels required when called:    2
 10267 ;; This function calls:
 10268 ;;		Nothing
 10269 ;; This function is called by:
 10270 ;;		_USARTWriteInt
 10271 ;; This function uses a non-reentrant model
 10272 ;;
 10273                           psect	text1169
 10274                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\almod.c"
 10275                           	line	5
 10276                           	global	__size_of___almod
 10277  0092                     	__size_of___almod	equ	__end_of___almod-___almod
 10278                           	
 10279  105C                     ___almod:	
 10280                           	opt	stack 3
 10281                           ; Regs used in ___almod: [wreg+status,2+status,0]
 10282                           	line	8
 10283                           	
 10284  105C                     l11071:	
 10285  105C  1283               	bcf	status, 5	;RP0=0, select bank0
 10286  105D  1303               	bcf	status, 6	;RP1=0, select bank0
 10287  105E  01AA               	clrf	(___almod@sign)
 10288                           	line	9
 10289  105F  1FA7               	btfss	(___almod@dividend+3),7
 10290  1060  2862               	goto	u3661
 10291  1061  2863               	goto	u3660
 10292  1062                     u3661:
 10293  1062  2872               	goto	l11077
 10294  1063                     u3660:
 10295                           	line	10
 10296                           	
 10297  1063                     l11073:	
 10298  1063  09A4               	comf	(___almod@dividend),f
 10299  1064  09A5               	comf	(___almod@dividend+1),f
 10300  1065  09A6               	comf	(___almod@dividend+2),f
 10301  1066  09A7               	comf	(___almod@dividend+3),f
 10302  1067  0AA4               	incf	(___almod@dividend),f
 10303  1068  1903               	skipnz
 10304  1069  0AA5               	incf	(___almod@dividend+1),f
 10305  106A  1903               	skipnz
 10306  106B  0AA6               	incf	(___almod@dividend+2),f
 10307  106C  1903               	skipnz
 10308  106D  0AA7               	incf	(___almod@dividend+3),f
 10309                           	line	11
 10310                           	
 10311  106E                     l11075:	
 10312  106E  01AA               	clrf	(___almod@sign)
 10313  106F  1403               	bsf	status,0
 10314  1070  0DAA               	rlf	(___almod@sign),f
 10315  1071  2872               	goto	l11077
 10316                           	line	12
 10317                           	
 10318  1072                     l7875:	
 10319                           	line	13
 10320                           	
 10321  1072                     l11077:	
 10322  1072  1FA3               	btfss	(___almod@divisor+3),7
 10323  1073  2875               	goto	u3671
 10324  1074  2876               	goto	u3670
 10325  1075                     u3671:
 10326  1075  2882               	goto	l11081
 10327  1076                     u3670:
 10328                           	line	14
 10329                           	
 10330  1076                     l11079:	
 10331  1076  09A0               	comf	(___almod@divisor),f
 10332  1077  09A1               	comf	(___almod@divisor+1),f
 10333  1078  09A2               	comf	(___almod@divisor+2),f
 10334  1079  09A3               	comf	(___almod@divisor+3),f
 10335  107A  0AA0               	incf	(___almod@divisor),f
 10336  107B  1903               	skipnz
 10337  107C  0AA1               	incf	(___almod@divisor+1),f
 10338  107D  1903               	skipnz
 10339  107E  0AA2               	incf	(___almod@divisor+2),f
 10340  107F  1903               	skipnz
 10341  1080  0AA3               	incf	(___almod@divisor+3),f
 10342  1081  2882               	goto	l11081
 10343                           	
 10344  1082                     l7876:	
 10345                           	line	15
 10346                           	
 10347  1082                     l11081:	
 10348  1082  0823               	movf	(___almod@divisor+3),w
 10349  1083  0422               	iorwf	(___almod@divisor+2),w
 10350  1084  0421               	iorwf	(___almod@divisor+1),w
 10351  1085  0420               	iorwf	(___almod@divisor),w
 10352  1086  1903               	skipnz
 10353  1087  2889               	goto	u3681
 10354  1088  288A               	goto	u3680
 10355  1089                     u3681:
 10356  1089  28D4               	goto	l11097
 10357  108A                     u3680:
 10358                           	line	16
 10359                           	
 10360  108A                     l11083:	
 10361  108A  01A9               	clrf	(___almod@counter)
 10362  108B  1403               	bsf	status,0
 10363  108C  0DA9               	rlf	(___almod@counter),f
 10364                           	line	17
 10365  108D  289C               	goto	l11087
 10366                           	
 10367  108E                     l7879:	
 10368                           	line	18
 10369                           	
 10370  108E                     l11085:	
 10371  108E  3001               	movlw	01h
 10372  108F  00A8               	movwf	(??___almod+0)+0
 10373  1090                     u3695:
 10374  1090  1003               	clrc
 10375  1091  0DA0               	rlf	(___almod@divisor),f
 10376  1092  0DA1               	rlf	(___almod@divisor+1),f
 10377  1093  0DA2               	rlf	(___almod@divisor+2),f
 10378  1094  0DA3               	rlf	(___almod@divisor+3),f
 10379  1095  0BA8               	decfsz	(??___almod+0)+0
 10380  1096  2890               	goto	u3695
 10381                           	line	19
 10382  1097  3001               	movlw	(01h)
 10383  1098  00A8               	movwf	(??___almod+0)+0
 10384  1099  0828               	movf	(??___almod+0)+0,w
 10385  109A  07A9               	addwf	(___almod@counter),f
 10386  109B  289C               	goto	l11087
 10387                           	line	20
 10388                           	
 10389  109C                     l7878:	
 10390                           	line	17
 10391                           	
 10392  109C                     l11087:	
 10393  109C  1FA3               	btfss	(___almod@divisor+3),(31)&7
 10394  109D  289F               	goto	u3701
 10395  109E  28A0               	goto	u3700
 10396  109F                     u3701:
 10397  109F  288E               	goto	l11085
 10398  10A0                     u3700:
 10399  10A0  28A2               	goto	l11089
 10400                           	
 10401  10A1                     l7880:	
 10402  10A1  28A2               	goto	l11089
 10403                           	line	21
 10404                           	
 10405  10A2                     l7881:	
 10406                           	line	22
 10407                           	
 10408  10A2                     l11089:	
 10409  10A2  0823               	movf	(___almod@divisor+3),w
 10410  10A3  0227               	subwf	(___almod@dividend+3),w
 10411  10A4  1D03               	skipz
 10412  10A5  28B0               	goto	u3715
 10413  10A6  0822               	movf	(___almod@divisor+2),w
 10414  10A7  0226               	subwf	(___almod@dividend+2),w
 10415  10A8  1D03               	skipz
 10416  10A9  28B0               	goto	u3715
 10417  10AA  0821               	movf	(___almod@divisor+1),w
 10418  10AB  0225               	subwf	(___almod@dividend+1),w
 10419  10AC  1D03               	skipz
 10420  10AD  28B0               	goto	u3715
 10421  10AE  0820               	movf	(___almod@divisor),w
 10422  10AF  0224               	subwf	(___almod@dividend),w
 10423  10B0                     u3715:
 10424  10B0  1C03               	skipc
 10425  10B1  28B3               	goto	u3711
 10426  10B2  28B4               	goto	u3710
 10427  10B3                     u3711:
 10428  10B3  28C3               	goto	l11093
 10429  10B4                     u3710:
 10430                           	line	23
 10431                           	
 10432  10B4                     l11091:	
 10433  10B4  0820               	movf	(___almod@divisor),w
 10434  10B5  02A4               	subwf	(___almod@dividend),f
 10435  10B6  0821               	movf	(___almod@divisor+1),w
 10436  10B7  1C03               	skipc
 10437  10B8  0F21               	incfsz	(___almod@divisor+1),w
 10438  10B9  02A5               	subwf	(___almod@dividend+1),f
 10439  10BA  0822               	movf	(___almod@divisor+2),w
 10440  10BB  1C03               	skipc
 10441  10BC  0F22               	incfsz	(___almod@divisor+2),w
 10442  10BD  02A6               	subwf	(___almod@dividend+2),f
 10443  10BE  0823               	movf	(___almod@divisor+3),w
 10444  10BF  1C03               	skipc
 10445  10C0  0F23               	incfsz	(___almod@divisor+3),w
 10446  10C1  02A7               	subwf	(___almod@dividend+3),f
 10447  10C2  28C3               	goto	l11093
 10448                           	
 10449  10C3                     l7882:	
 10450                           	line	24
 10451                           	
 10452  10C3                     l11093:	
 10453  10C3  3001               	movlw	01h
 10454  10C4                     u3725:
 10455  10C4  1003               	clrc
 10456  10C5  0CA3               	rrf	(___almod@divisor+3),f
 10457  10C6  0CA2               	rrf	(___almod@divisor+2),f
 10458  10C7  0CA1               	rrf	(___almod@divisor+1),f
 10459  10C8  0CA0               	rrf	(___almod@divisor),f
 10460  10C9  3EFF               	addlw	-1
 10461  10CA  1D03               	skipz
 10462  10CB  28C4               	goto	u3725
 10463                           
 10464                           	line	25
 10465                           	
 10466  10CC                     l11095:	
 10467  10CC  3001               	movlw	low(01h)
 10468  10CD  02A9               	subwf	(___almod@counter),f
 10469  10CE  1D03               	btfss	status,2
 10470  10CF  28D1               	goto	u3731
 10471  10D0  28D2               	goto	u3730
 10472  10D1                     u3731:
 10473  10D1  28A2               	goto	l11089
 10474  10D2                     u3730:
 10475  10D2  28D4               	goto	l11097
 10476                           	
 10477  10D3                     l7883:	
 10478  10D3  28D4               	goto	l11097
 10479                           	line	26
 10480                           	
 10481  10D4                     l7877:	
 10482                           	line	27
 10483                           	
 10484  10D4                     l11097:	
 10485  10D4  082A               	movf	(___almod@sign),w
 10486  10D5  1D03               	skipz
 10487  10D6  28D8               	goto	u3740
 10488  10D7  28E4               	goto	l11101
 10489  10D8                     u3740:
 10490                           	line	28
 10491                           	
 10492  10D8                     l11099:	
 10493  10D8  09A4               	comf	(___almod@dividend),f
 10494  10D9  09A5               	comf	(___almod@dividend+1),f
 10495  10DA  09A6               	comf	(___almod@dividend+2),f
 10496  10DB  09A7               	comf	(___almod@dividend+3),f
 10497  10DC  0AA4               	incf	(___almod@dividend),f
 10498  10DD  1903               	skipnz
 10499  10DE  0AA5               	incf	(___almod@dividend+1),f
 10500  10DF  1903               	skipnz
 10501  10E0  0AA6               	incf	(___almod@dividend+2),f
 10502  10E1  1903               	skipnz
 10503  10E2  0AA7               	incf	(___almod@dividend+3),f
 10504  10E3  28E4               	goto	l11101
 10505                           	
 10506  10E4                     l7884:	
 10507                           	line	29
 10508                           	
 10509  10E4                     l11101:	
 10510  10E4  0827               	movf	(___almod@dividend+3),w
 10511  10E5  00A3               	movwf	(?___almod+3)
 10512  10E6  0826               	movf	(___almod@dividend+2),w
 10513  10E7  00A2               	movwf	(?___almod+2)
 10514  10E8  0825               	movf	(___almod@dividend+1),w
 10515  10E9  00A1               	movwf	(?___almod+1)
 10516  10EA  0824               	movf	(___almod@dividend),w
 10517  10EB  00A0               	movwf	(?___almod)
 10518                           
 10519  10EC  28ED               	goto	l7885
 10520                           	
 10521  10ED                     l11103:	
 10522                           	line	30
 10523                           	
 10524  10ED                     l7885:	
 10525  10ED  0008               	return
 10526                           	opt stack 0
 10527                           GLOBAL	__end_of___almod
 10528  10EE                     	__end_of___almod:
 10529 ;; =============== function ___almod ends ============
 10530                           
 10531                           	signat	___almod,8316
 10532                           	global	___lldiv
 10533                           psect	text1170,local,class=CODE,delta=2
 10534                           global __ptext1170
 10535  1E9D                     __ptext1170:
 10536                           
 10537 ;; *************** function ___lldiv *****************
 10538 ;; Defined at:
 10539 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\lldiv.c"
 10540 ;; Parameters:    Size  Location     Type
 10541 ;;  divisor         4   13[BANK0 ] unsigned long 
 10542 ;;  dividend        4   17[BANK0 ] unsigned long 
 10543 ;; Auto vars:     Size  Location     Type
 10544 ;;  quotient        4   22[BANK0 ] unsigned long 
 10545 ;;  counter         1   26[BANK0 ] unsigned char 
 10546 ;; Return value:  Size  Location     Type
 10547 ;;                  4   13[BANK0 ] unsigned long 
 10548 ;; Registers used:
 10549 ;;		wreg, status,2, status,0
 10550 ;; Tracked objects:
 10551 ;;		On entry : 0/0
 10552 ;;		On exit  : 0/0
 10553 ;;		Unchanged: 0/0
 10554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10555 ;;      Params:         0       8       0       0       0
 10556 ;;      Locals:         0       5       0       0       0
 10557 ;;      Temps:          0       1       0       0       0
 10558 ;;      Totals:         0      14       0       0       0
 10559 ;;Total ram usage:       14 bytes
 10560 ;; Hardware stack levels used:    1
 10561 ;; Hardware stack levels required when called:    2
 10562 ;; This function calls:
 10563 ;;		Nothing
 10564 ;; This function is called by:
 10565 ;;		_Calc_SetPoint
 10566 ;;		_get_Actrpm
 10567 ;; This function uses a non-reentrant model
 10568 ;;
 10569                           psect	text1170
 10570                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\lldiv.c"
 10571                           	line	5
 10572                           	global	__size_of___lldiv
 10573  0070                     	__size_of___lldiv	equ	__end_of___lldiv-___lldiv
 10574                           	
 10575  1E9D                     ___lldiv:	
 10576                           	opt	stack 3
 10577                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
 10578                           	line	9
 10579                           	
 10580  1E9D                     l11047:	
 10581  1E9D  3000               	movlw	0
 10582  1E9E  1283               	bcf	status, 5	;RP0=0, select bank0
 10583  1E9F  1303               	bcf	status, 6	;RP1=0, select bank0
 10584  1EA0  00B9               	movwf	(___lldiv@quotient+3)
 10585  1EA1  3000               	movlw	0
 10586  1EA2  00B8               	movwf	(___lldiv@quotient+2)
 10587  1EA3  3000               	movlw	0
 10588  1EA4  00B7               	movwf	(___lldiv@quotient+1)
 10589  1EA5  3000               	movlw	0
 10590  1EA6  00B6               	movwf	(___lldiv@quotient)
 10591                           
 10592                           	line	10
 10593  1EA7  0830               	movf	(___lldiv@divisor+3),w
 10594  1EA8  042F               	iorwf	(___lldiv@divisor+2),w
 10595  1EA9  042E               	iorwf	(___lldiv@divisor+1),w
 10596  1EAA  042D               	iorwf	(___lldiv@divisor),w
 10597  1EAB  1903               	skipnz
 10598  1EAC  2EAE               	goto	u3591
 10599  1EAD  2EAF               	goto	u3590
 10600  1EAE                     u3591:
 10601  1EAE  2F03               	goto	l11067
 10602  1EAF                     u3590:
 10603                           	line	11
 10604                           	
 10605  1EAF                     l11049:	
 10606  1EAF  01BA               	clrf	(___lldiv@counter)
 10607  1EB0  1403               	bsf	status,0
 10608  1EB1  0DBA               	rlf	(___lldiv@counter),f
 10609                           	line	12
 10610  1EB2  2EC1               	goto	l11053
 10611                           	
 10612  1EB3                     l7867:	
 10613                           	line	13
 10614                           	
 10615  1EB3                     l11051:	
 10616  1EB3  3001               	movlw	01h
 10617  1EB4  00B5               	movwf	(??___lldiv+0)+0
 10618  1EB5                     u3605:
 10619  1EB5  1003               	clrc
 10620  1EB6  0DAD               	rlf	(___lldiv@divisor),f
 10621  1EB7  0DAE               	rlf	(___lldiv@divisor+1),f
 10622  1EB8  0DAF               	rlf	(___lldiv@divisor+2),f
 10623  1EB9  0DB0               	rlf	(___lldiv@divisor+3),f
 10624  1EBA  0BB5               	decfsz	(??___lldiv+0)+0
 10625  1EBB  2EB5               	goto	u3605
 10626                           	line	14
 10627  1EBC  3001               	movlw	(01h)
 10628  1EBD  00B5               	movwf	(??___lldiv+0)+0
 10629  1EBE  0835               	movf	(??___lldiv+0)+0,w
 10630  1EBF  07BA               	addwf	(___lldiv@counter),f
 10631  1EC0  2EC1               	goto	l11053
 10632                           	line	15
 10633                           	
 10634  1EC1                     l7866:	
 10635                           	line	12
 10636                           	
 10637  1EC1                     l11053:	
 10638  1EC1  1FB0               	btfss	(___lldiv@divisor+3),(31)&7
 10639  1EC2  2EC4               	goto	u3611
 10640  1EC3  2EC5               	goto	u3610
 10641  1EC4                     u3611:
 10642  1EC4  2EB3               	goto	l11051
 10643  1EC5                     u3610:
 10644  1EC5  2EC7               	goto	l11055
 10645                           	
 10646  1EC6                     l7868:	
 10647  1EC6  2EC7               	goto	l11055
 10648                           	line	16
 10649                           	
 10650  1EC7                     l7869:	
 10651                           	line	17
 10652                           	
 10653  1EC7                     l11055:	
 10654  1EC7  3001               	movlw	01h
 10655  1EC8  00B5               	movwf	(??___lldiv+0)+0
 10656  1EC9                     u3625:
 10657  1EC9  1003               	clrc
 10658  1ECA  0DB6               	rlf	(___lldiv@quotient),f
 10659  1ECB  0DB7               	rlf	(___lldiv@quotient+1),f
 10660  1ECC  0DB8               	rlf	(___lldiv@quotient+2),f
 10661  1ECD  0DB9               	rlf	(___lldiv@quotient+3),f
 10662  1ECE  0BB5               	decfsz	(??___lldiv+0)+0
 10663  1ECF  2EC9               	goto	u3625
 10664                           	line	18
 10665                           	
 10666  1ED0                     l11057:	
 10667  1ED0  0830               	movf	(___lldiv@divisor+3),w
 10668  1ED1  0234               	subwf	(___lldiv@dividend+3),w
 10669  1ED2  1D03               	skipz
 10670  1ED3  2EDE               	goto	u3635
 10671  1ED4  082F               	movf	(___lldiv@divisor+2),w
 10672  1ED5  0233               	subwf	(___lldiv@dividend+2),w
 10673  1ED6  1D03               	skipz
 10674  1ED7  2EDE               	goto	u3635
 10675  1ED8  082E               	movf	(___lldiv@divisor+1),w
 10676  1ED9  0232               	subwf	(___lldiv@dividend+1),w
 10677  1EDA  1D03               	skipz
 10678  1EDB  2EDE               	goto	u3635
 10679  1EDC  082D               	movf	(___lldiv@divisor),w
 10680  1EDD  0231               	subwf	(___lldiv@dividend),w
 10681  1EDE                     u3635:
 10682  1EDE  1C03               	skipc
 10683  1EDF  2EE1               	goto	u3631
 10684  1EE0  2EE2               	goto	u3630
 10685  1EE1                     u3631:
 10686  1EE1  2EF2               	goto	l11063
 10687  1EE2                     u3630:
 10688                           	line	19
 10689                           	
 10690  1EE2                     l11059:	
 10691  1EE2  082D               	movf	(___lldiv@divisor),w
 10692  1EE3  02B1               	subwf	(___lldiv@dividend),f
 10693  1EE4  082E               	movf	(___lldiv@divisor+1),w
 10694  1EE5  1C03               	skipc
 10695  1EE6  0F2E               	incfsz	(___lldiv@divisor+1),w
 10696  1EE7  02B2               	subwf	(___lldiv@dividend+1),f
 10697  1EE8  082F               	movf	(___lldiv@divisor+2),w
 10698  1EE9  1C03               	skipc
 10699  1EEA  0F2F               	incfsz	(___lldiv@divisor+2),w
 10700  1EEB  02B3               	subwf	(___lldiv@dividend+2),f
 10701  1EEC  0830               	movf	(___lldiv@divisor+3),w
 10702  1EED  1C03               	skipc
 10703  1EEE  0F30               	incfsz	(___lldiv@divisor+3),w
 10704  1EEF  02B4               	subwf	(___lldiv@dividend+3),f
 10705                           	line	20
 10706                           	
 10707  1EF0                     l11061:	
 10708  1EF0  1436               	bsf	(___lldiv@quotient)+(0/8),(0)&7
 10709  1EF1  2EF2               	goto	l11063
 10710                           	line	21
 10711                           	
 10712  1EF2                     l7870:	
 10713                           	line	22
 10714                           	
 10715  1EF2                     l11063:	
 10716  1EF2  3001               	movlw	01h
 10717  1EF3                     u3645:
 10718  1EF3  1003               	clrc
 10719  1EF4  0CB0               	rrf	(___lldiv@divisor+3),f
 10720  1EF5  0CAF               	rrf	(___lldiv@divisor+2),f
 10721  1EF6  0CAE               	rrf	(___lldiv@divisor+1),f
 10722  1EF7  0CAD               	rrf	(___lldiv@divisor),f
 10723  1EF8  3EFF               	addlw	-1
 10724  1EF9  1D03               	skipz
 10725  1EFA  2EF3               	goto	u3645
 10726                           
 10727                           	line	23
 10728                           	
 10729  1EFB                     l11065:	
 10730  1EFB  3001               	movlw	low(01h)
 10731  1EFC  02BA               	subwf	(___lldiv@counter),f
 10732  1EFD  1D03               	btfss	status,2
 10733  1EFE  2F00               	goto	u3651
 10734  1EFF  2F01               	goto	u3650
 10735  1F00                     u3651:
 10736  1F00  2EC7               	goto	l11055
 10737  1F01                     u3650:
 10738  1F01  2F03               	goto	l11067
 10739                           	
 10740  1F02                     l7871:	
 10741  1F02  2F03               	goto	l11067
 10742                           	line	24
 10743                           	
 10744  1F03                     l7865:	
 10745                           	line	25
 10746                           	
 10747  1F03                     l11067:	
 10748  1F03  0839               	movf	(___lldiv@quotient+3),w
 10749  1F04  00B0               	movwf	(?___lldiv+3)
 10750  1F05  0838               	movf	(___lldiv@quotient+2),w
 10751  1F06  00AF               	movwf	(?___lldiv+2)
 10752  1F07  0837               	movf	(___lldiv@quotient+1),w
 10753  1F08  00AE               	movwf	(?___lldiv+1)
 10754  1F09  0836               	movf	(___lldiv@quotient),w
 10755  1F0A  00AD               	movwf	(?___lldiv)
 10756                           
 10757  1F0B  2F0C               	goto	l7872
 10758                           	
 10759  1F0C                     l11069:	
 10760                           	line	26
 10761                           	
 10762  1F0C                     l7872:	
 10763  1F0C  0008               	return
 10764                           	opt stack 0
 10765                           GLOBAL	__end_of___lldiv
 10766  1F0D                     	__end_of___lldiv:
 10767 ;; =============== function ___lldiv ends ============
 10768                           
 10769                           	signat	___lldiv,8316
 10770                           	global	___ftge
 10771                           psect	text1171,local,class=CODE,delta=2
 10772                           global __ptext1171
 10773  1E2F                     __ptext1171:
 10774                           
 10775 ;; *************** function ___ftge *****************
 10776 ;; Defined at:
 10777 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\ftge.c"
 10778 ;; Parameters:    Size  Location     Type
 10779 ;;  ff1             3    8[BANK0 ] float 
 10780 ;;  ff2             3   11[BANK0 ] float 
 10781 ;; Auto vars:     Size  Location     Type
 10782 ;;		None
 10783 ;; Return value:  Size  Location     Type
 10784 ;;		None               void
 10785 ;; Registers used:
 10786 ;;		wreg, status,2, status,0
 10787 ;; Tracked objects:
 10788 ;;		On entry : 0/0
 10789 ;;		On exit  : 0/0
 10790 ;;		Unchanged: 0/0
 10791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10792 ;;      Params:         0       6       0       0       0
 10793 ;;      Locals:         0       0       0       0       0
 10794 ;;      Temps:          0       6       0       0       0
 10795 ;;      Totals:         0      12       0       0       0
 10796 ;;Total ram usage:       12 bytes
 10797 ;; Hardware stack levels used:    1
 10798 ;; Hardware stack levels required when called:    2
 10799 ;; This function calls:
 10800 ;;		Nothing
 10801 ;; This function is called by:
 10802 ;;		_Calc_PID_op
 10803 ;; This function uses a non-reentrant model
 10804 ;;
 10805                           psect	text1171
 10806                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\ftge.c"
 10807                           	line	5
 10808                           	global	__size_of___ftge
 10809  006E                     	__size_of___ftge	equ	__end_of___ftge-___ftge
 10810                           	
 10811  1E2F                     ___ftge:	
 10812                           	opt	stack 4
 10813                           ; Regs used in ___ftge: [wreg+status,2+status,0]
 10814                           	line	6
 10815                           	
 10816  1E2F                     l11027:	
 10817  1E2F  1283               	bcf	status, 5	;RP0=0, select bank0
 10818  1E30  1303               	bcf	status, 6	;RP1=0, select bank0
 10819  1E31  1FAA               	btfss	(___ftge@ff1+2),(23)&7
 10820  1E32  2E34               	goto	u3541
 10821  1E33  2E35               	goto	u3540
 10822  1E34                     u3541:
 10823  1E34  2E5B               	goto	l11031
 10824  1E35                     u3540:
 10825                           	line	7
 10826                           	
 10827  1E35                     l11029:	
 10828  1E35  3000               	movlw	0
 10829  1E36  00AE               	movwf	((??___ftge+0)+0)
 10830  1E37  3000               	movlw	0
 10831  1E38  00AF               	movwf	((??___ftge+0)+0+1)
 10832  1E39  3080               	movlw	080h
 10833  1E3A  00B0               	movwf	((??___ftge+0)+0+2)
 10834  1E3B  0928               	comf	(___ftge@ff1),w
 10835  1E3C  00B1               	movwf	(??___ftge+3)+0
 10836  1E3D  0929               	comf	(___ftge@ff1+1),w
 10837  1E3E  00B2               	movwf	((??___ftge+3)+0+1)
 10838  1E3F  092A               	comf	(___ftge@ff1+2),w
 10839  1E40  00B3               	movwf	((??___ftge+3)+0+2)
 10840  1E41  0AB1               	incf	(??___ftge+3)+0,f
 10841  1E42  1903               	skipnz
 10842  1E43  0AB2               	incf	((??___ftge+3)+0+1),f
 10843  1E44  1903               	skipnz
 10844  1E45  0AB3               	incf	((??___ftge+3)+0+2),f
 10845  1E46  0831               	movf	0+(??___ftge+3)+0,w
 10846  1E47  07AE               	addwf	(??___ftge+0)+0,f
 10847  1E48  0832               	movf	1+(??___ftge+3)+0,w
 10848  1E49  1803               	skipnc
 10849  1E4A  0F32               	incfsz	1+(??___ftge+3)+0,w
 10850  1E4B  2E4D               	goto	u3551
 10851  1E4C  2E4E               	goto	u3552
 10852  1E4D                     u3551:
 10853  1E4D  07AF               	addwf	(??___ftge+0)+1,f
 10854                           	
 10855  1E4E                     u3552:
 10856  1E4E  0833               	movf	2+(??___ftge+3)+0,w
 10857  1E4F  1803               	skipnc
 10858  1E50  0F33               	incfsz	2+(??___ftge+3)+0,w
 10859  1E51  2E53               	goto	u3553
 10860  1E52  2E54               	goto	u3554
 10861  1E53                     u3553:
 10862  1E53  07B0               	addwf	(??___ftge+0)+2,f
 10863                           	
 10864  1E54                     u3554:
 10865  1E54  082E               	movf	0+(??___ftge+0)+0,w
 10866  1E55  00A8               	movwf	(___ftge@ff1)
 10867  1E56  082F               	movf	1+(??___ftge+0)+0,w
 10868  1E57  00A9               	movwf	(___ftge@ff1+1)
 10869  1E58  0830               	movf	2+(??___ftge+0)+0,w
 10870  1E59  00AA               	movwf	(___ftge@ff1+2)
 10871  1E5A  2E5B               	goto	l11031
 10872                           	
 10873  1E5B                     l7860:	
 10874                           	line	8
 10875                           	
 10876  1E5B                     l11031:	
 10877  1E5B  1FAD               	btfss	(___ftge@ff2+2),(23)&7
 10878  1E5C  2E5E               	goto	u3561
 10879  1E5D  2E5F               	goto	u3560
 10880  1E5E                     u3561:
 10881  1E5E  2E85               	goto	l11035
 10882  1E5F                     u3560:
 10883                           	line	9
 10884                           	
 10885  1E5F                     l11033:	
 10886  1E5F  3000               	movlw	0
 10887  1E60  00AE               	movwf	((??___ftge+0)+0)
 10888  1E61  3000               	movlw	0
 10889  1E62  00AF               	movwf	((??___ftge+0)+0+1)
 10890  1E63  3080               	movlw	080h
 10891  1E64  00B0               	movwf	((??___ftge+0)+0+2)
 10892  1E65  092B               	comf	(___ftge@ff2),w
 10893  1E66  00B1               	movwf	(??___ftge+3)+0
 10894  1E67  092C               	comf	(___ftge@ff2+1),w
 10895  1E68  00B2               	movwf	((??___ftge+3)+0+1)
 10896  1E69  092D               	comf	(___ftge@ff2+2),w
 10897  1E6A  00B3               	movwf	((??___ftge+3)+0+2)
 10898  1E6B  0AB1               	incf	(??___ftge+3)+0,f
 10899  1E6C  1903               	skipnz
 10900  1E6D  0AB2               	incf	((??___ftge+3)+0+1),f
 10901  1E6E  1903               	skipnz
 10902  1E6F  0AB3               	incf	((??___ftge+3)+0+2),f
 10903  1E70  0831               	movf	0+(??___ftge+3)+0,w
 10904  1E71  07AE               	addwf	(??___ftge+0)+0,f
 10905  1E72  0832               	movf	1+(??___ftge+3)+0,w
 10906  1E73  1803               	skipnc
 10907  1E74  0F32               	incfsz	1+(??___ftge+3)+0,w
 10908  1E75  2E77               	goto	u3571
 10909  1E76  2E78               	goto	u3572
 10910  1E77                     u3571:
 10911  1E77  07AF               	addwf	(??___ftge+0)+1,f
 10912                           	
 10913  1E78                     u3572:
 10914  1E78  0833               	movf	2+(??___ftge+3)+0,w
 10915  1E79  1803               	skipnc
 10916  1E7A  0F33               	incfsz	2+(??___ftge+3)+0,w
 10917  1E7B  2E7D               	goto	u3573
 10918  1E7C  2E7E               	goto	u3574
 10919  1E7D                     u3573:
 10920  1E7D  07B0               	addwf	(??___ftge+0)+2,f
 10921                           	
 10922  1E7E                     u3574:
 10923  1E7E  082E               	movf	0+(??___ftge+0)+0,w
 10924  1E7F  00AB               	movwf	(___ftge@ff2)
 10925  1E80  082F               	movf	1+(??___ftge+0)+0,w
 10926  1E81  00AC               	movwf	(___ftge@ff2+1)
 10927  1E82  0830               	movf	2+(??___ftge+0)+0,w
 10928  1E83  00AD               	movwf	(___ftge@ff2+2)
 10929  1E84  2E85               	goto	l11035
 10930                           	
 10931  1E85                     l7861:	
 10932                           	line	10
 10933                           	
 10934  1E85                     l11035:	
 10935  1E85  3080               	movlw	080h
 10936  1E86  06AA               	xorwf	(___ftge@ff1+2),f
 10937                           	line	11
 10938                           	
 10939  1E87                     l11037:	
 10940  1E87  3080               	movlw	080h
 10941  1E88  06AD               	xorwf	(___ftge@ff2+2),f
 10942                           	line	12
 10943                           	
 10944  1E89                     l11039:	
 10945  1E89  082D               	movf	(___ftge@ff2+2),w
 10946  1E8A  022A               	subwf	(___ftge@ff1+2),w
 10947  1E8B  1D03               	skipz
 10948  1E8C  2E93               	goto	u3585
 10949  1E8D  082C               	movf	(___ftge@ff2+1),w
 10950  1E8E  0229               	subwf	(___ftge@ff1+1),w
 10951  1E8F  1D03               	skipz
 10952  1E90  2E93               	goto	u3585
 10953  1E91  082B               	movf	(___ftge@ff2),w
 10954  1E92  0228               	subwf	(___ftge@ff1),w
 10955  1E93                     u3585:
 10956  1E93  1803               	skipnc
 10957  1E94  2E96               	goto	u3581
 10958  1E95  2E97               	goto	u3580
 10959  1E96                     u3581:
 10960  1E96  2E99               	goto	l11043
 10961  1E97                     u3580:
 10962                           	
 10963  1E97                     l11041:	
 10964  1E97  1003               	clrc
 10965                           	
 10966  1E98  2E9C               	goto	l7862
 10967                           	
 10968  1E99                     l10657:	
 10969                           	
 10970  1E99                     l11043:	
 10971  1E99  1403               	setc
 10972                           	
 10973  1E9A  2E9C               	goto	l7862
 10974                           	
 10975  1E9B                     l10659:	
 10976  1E9B  2E9C               	goto	l7862
 10977                           	
 10978  1E9C                     l11045:	
 10979                           	line	13
 10980                           	
 10981  1E9C                     l7862:	
 10982  1E9C  0008               	return
 10983                           	opt stack 0
 10984                           GLOBAL	__end_of___ftge
 10985  1E9D                     	__end_of___ftge:
 10986 ;; =============== function ___ftge ends ============
 10987                           
 10988                           	signat	___ftge,8312
 10989                           	global	___ftneg
 10990                           psect	text1172,local,class=CODE,delta=2
 10991                           global __ptext1172
 10992  1AF7                     __ptext1172:
 10993                           
 10994 ;; *************** function ___ftneg *****************
 10995 ;; Defined at:
 10996 ;;		line 16 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\ftneg.c"
 10997 ;; Parameters:    Size  Location     Type
 10998 ;;  f1              3    8[BANK0 ] float 
 10999 ;; Auto vars:     Size  Location     Type
 11000 ;;		None
 11001 ;; Return value:  Size  Location     Type
 11002 ;;                  3    8[BANK0 ] float 
 11003 ;; Registers used:
 11004 ;;		wreg
 11005 ;; Tracked objects:
 11006 ;;		On entry : 0/0
 11007 ;;		On exit  : 0/0
 11008 ;;		Unchanged: 0/0
 11009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11010 ;;      Params:         0       3       0       0       0
 11011 ;;      Locals:         0       0       0       0       0
 11012 ;;      Temps:          0       0       0       0       0
 11013 ;;      Totals:         0       3       0       0       0
 11014 ;;Total ram usage:        3 bytes
 11015 ;; Hardware stack levels used:    1
 11016 ;; Hardware stack levels required when called:    2
 11017 ;; This function calls:
 11018 ;;		Nothing
 11019 ;; This function is called by:
 11020 ;;		_Calc_PID_const
 11021 ;;		_Calc_PID_op
 11022 ;; This function uses a non-reentrant model
 11023 ;;
 11024                           psect	text1172
 11025                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\ftneg.c"
 11026                           	line	16
 11027                           	global	__size_of___ftneg
 11028  000E                     	__size_of___ftneg	equ	__end_of___ftneg-___ftneg
 11029                           	
 11030  1AF7                     ___ftneg:	
 11031                           	opt	stack 4
 11032                           ; Regs used in ___ftneg: [wreg]
 11033                           	line	17
 11034                           	
 11035  1AF7                     l11019:	
 11036  1AF7  1283               	bcf	status, 5	;RP0=0, select bank0
 11037  1AF8  1303               	bcf	status, 6	;RP1=0, select bank0
 11038  1AF9  082A               	movf	(___ftneg@f1+2),w
 11039  1AFA  0429               	iorwf	(___ftneg@f1+1),w
 11040  1AFB  0428               	iorwf	(___ftneg@f1),w
 11041  1AFC  1903               	skipnz
 11042  1AFD  2AFF               	goto	u3531
 11043  1AFE  2B00               	goto	u3530
 11044  1AFF                     u3531:
 11045  1AFF  2B03               	goto	l11023
 11046  1B00                     u3530:
 11047                           	line	18
 11048                           	
 11049  1B00                     l11021:	
 11050  1B00  3080               	movlw	080h
 11051  1B01  06AA               	xorwf	(___ftneg@f1+2),f
 11052  1B02  2B03               	goto	l11023
 11053                           	
 11054  1B03                     l7856:	
 11055                           	line	19
 11056                           	
 11057  1B03                     l11023:	
 11058  1B03  2B04               	goto	l7857
 11059                           	
 11060  1B04                     l11025:	
 11061                           	line	20
 11062                           	
 11063  1B04                     l7857:	
 11064  1B04  0008               	return
 11065                           	opt stack 0
 11066                           GLOBAL	__end_of___ftneg
 11067  1B05                     	__end_of___ftneg:
 11068 ;; =============== function ___ftneg ends ============
 11069                           
 11070                           	signat	___ftneg,4219
 11071                           	global	___fttol
 11072                           psect	text1173,local,class=CODE,delta=2
 11073                           global __ptext1173
 11074  10EE                     __ptext1173:
 11075                           
 11076 ;; *************** function ___fttol *****************
 11077 ;; Defined at:
 11078 ;;		line 45 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\fttol.c"
 11079 ;; Parameters:    Size  Location     Type
 11080 ;;  f1              3    8[BANK0 ] float 
 11081 ;; Auto vars:     Size  Location     Type
 11082 ;;  lval            4   17[BANK0 ] unsigned long 
 11083 ;;  exp1            1   21[BANK0 ] unsigned char 
 11084 ;;  sign1           1   16[BANK0 ] unsigned char 
 11085 ;; Return value:  Size  Location     Type
 11086 ;;                  4    8[BANK0 ] long 
 11087 ;; Registers used:
 11088 ;;		wreg, status,2, status,0
 11089 ;; Tracked objects:
 11090 ;;		On entry : 0/0
 11091 ;;		On exit  : 0/0
 11092 ;;		Unchanged: 0/0
 11093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11094 ;;      Params:         0       4       0       0       0
 11095 ;;      Locals:         0       6       0       0       0
 11096 ;;      Temps:          0       4       0       0       0
 11097 ;;      Totals:         0      14       0       0       0
 11098 ;;Total ram usage:       14 bytes
 11099 ;; Hardware stack levels used:    1
 11100 ;; Hardware stack levels required when called:    2
 11101 ;; This function calls:
 11102 ;;		Nothing
 11103 ;; This function is called by:
 11104 ;;		_Calc_PID_op
 11105 ;; This function uses a non-reentrant model
 11106 ;;
 11107                           psect	text1173
 11108                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\fttol.c"
 11109                           	line	45
 11110                           	global	__size_of___fttol
 11111  00A6                     	__size_of___fttol	equ	__end_of___fttol-___fttol
 11112                           	
 11113  10EE                     ___fttol:	
 11114                           	opt	stack 4
 11115                           ; Regs used in ___fttol: [wreg+status,2+status,0]
 11116                           	line	49
 11117                           	
 11118  10EE                     l10963:	
 11119  10EE  1283               	bcf	status, 5	;RP0=0, select bank0
 11120  10EF  1303               	bcf	status, 6	;RP1=0, select bank0
 11121  10F0  0828               	movf	(___fttol@f1),w
 11122  10F1  00AC               	movwf	((??___fttol+0)+0)
 11123  10F2  0829               	movf	(___fttol@f1+1),w
 11124  10F3  00AD               	movwf	((??___fttol+0)+0+1)
 11125  10F4  082A               	movf	(___fttol@f1+2),w
 11126  10F5  00AE               	movwf	((??___fttol+0)+0+2)
 11127  10F6  1003               	clrc
 11128  10F7  0D2D               	rlf	(??___fttol+0)+1,w
 11129  10F8  0D2E               	rlf	(??___fttol+0)+2,w
 11130  10F9  00AF               	movwf	(??___fttol+3)+0
 11131  10FA  082F               	movf	(??___fttol+3)+0,w
 11132  10FB  00B5               	movwf	(___fttol@exp1)
 11133  10FC  08B5               	movf	((___fttol@exp1)),f
 11134  10FD  1D03               	skipz
 11135  10FE  2900               	goto	u3421
 11136  10FF  2901               	goto	u3420
 11137  1100                     u3421:
 11138  1100  290B               	goto	l10969
 11139  1101                     u3420:
 11140                           	line	50
 11141                           	
 11142  1101                     l10965:	
 11143  1101  3000               	movlw	0
 11144  1102  00AB               	movwf	(?___fttol+3)
 11145  1103  3000               	movlw	0
 11146  1104  00AA               	movwf	(?___fttol+2)
 11147  1105  3000               	movlw	0
 11148  1106  00A9               	movwf	(?___fttol+1)
 11149  1107  3000               	movlw	0
 11150  1108  00A8               	movwf	(?___fttol)
 11151                           
 11152  1109  2993               	goto	l7803
 11153                           	
 11154  110A                     l10967:	
 11155  110A  2993               	goto	l7803
 11156                           	
 11157  110B                     l7802:	
 11158                           	line	51
 11159                           	
 11160  110B                     l10969:	
 11161  110B  0828               	movf	(___fttol@f1),w
 11162  110C  00AC               	movwf	((??___fttol+0)+0)
 11163  110D  0829               	movf	(___fttol@f1+1),w
 11164  110E  00AD               	movwf	((??___fttol+0)+0+1)
 11165  110F  082A               	movf	(___fttol@f1+2),w
 11166  1110  00AE               	movwf	((??___fttol+0)+0+2)
 11167  1111  3017               	movlw	017h
 11168  1112                     u3435:
 11169  1112  1003               	clrc
 11170  1113  0CAE               	rrf	(??___fttol+0)+2,f
 11171  1114  0CAD               	rrf	(??___fttol+0)+1,f
 11172  1115  0CAC               	rrf	(??___fttol+0)+0,f
 11173  1116                     u3430:
 11174  1116  3EFF               	addlw	-1
 11175  1117  1D03               	skipz
 11176  1118  2912               	goto	u3435
 11177  1119  082C               	movf	0+(??___fttol+0)+0,w
 11178  111A  00AF               	movwf	(??___fttol+3)+0
 11179  111B  082F               	movf	(??___fttol+3)+0,w
 11180  111C  00B0               	movwf	(___fttol@sign1)
 11181                           	line	52
 11182                           	
 11183  111D                     l10971:	
 11184  111D  17A9               	bsf	(___fttol@f1)+(15/8),(15)&7
 11185                           	line	53
 11186                           	
 11187  111E                     l10973:	
 11188  111E  30FF               	movlw	0FFh
 11189  111F  05A8               	andwf	(___fttol@f1),f
 11190  1120  30FF               	movlw	0FFh
 11191  1121  05A9               	andwf	(___fttol@f1+1),f
 11192  1122  3000               	movlw	0
 11193  1123  05AA               	andwf	(___fttol@f1+2),f
 11194                           	line	54
 11195                           	
 11196  1124                     l10975:	
 11197  1124  0828               	movf	(___fttol@f1),w
 11198  1125  00B1               	movwf	(___fttol@lval)
 11199  1126  0829               	movf	(___fttol@f1+1),w
 11200  1127  00B2               	movwf	((___fttol@lval))+1
 11201  1128  082A               	movf	(___fttol@f1+2),w
 11202  1129  00B3               	movwf	((___fttol@lval))+2
 11203  112A  01B4               	clrf	((___fttol@lval))+3
 11204                           	line	55
 11205                           	
 11206  112B                     l10977:	
 11207  112B  308E               	movlw	low(08Eh)
 11208  112C  02B5               	subwf	(___fttol@exp1),f
 11209                           	line	56
 11210                           	
 11211  112D                     l10979:	
 11212  112D  1FB5               	btfss	(___fttol@exp1),7
 11213  112E  2930               	goto	u3441
 11214  112F  2931               	goto	u3440
 11215  1130                     u3441:
 11216  1130  2956               	goto	l10989
 11217  1131                     u3440:
 11218                           	line	57
 11219                           	
 11220  1131                     l10981:	
 11221  1131  0835               	movf	(___fttol@exp1),w
 11222  1132  3A80               	xorlw	80h
 11223  1133  3E8F               	addlw	-((-15)^80h)
 11224  1134  1803               	skipnc
 11225  1135  2937               	goto	u3451
 11226  1136  2938               	goto	u3450
 11227  1137                     u3451:
 11228  1137  2943               	goto	l10987
 11229  1138                     u3450:
 11230                           	line	58
 11231                           	
 11232  1138                     l10983:	
 11233  1138  3000               	movlw	0
 11234  1139  00AB               	movwf	(?___fttol+3)
 11235  113A  3000               	movlw	0
 11236  113B  00AA               	movwf	(?___fttol+2)
 11237  113C  3000               	movlw	0
 11238  113D  00A9               	movwf	(?___fttol+1)
 11239  113E  3000               	movlw	0
 11240  113F  00A8               	movwf	(?___fttol)
 11241                           
 11242  1140  2993               	goto	l7803
 11243                           	
 11244  1141                     l10985:	
 11245  1141  2993               	goto	l7803
 11246                           	
 11247  1142                     l7805:	
 11248  1142  2943               	goto	l10987
 11249                           	line	59
 11250                           	
 11251  1143                     l7806:	
 11252                           	line	60
 11253                           	
 11254  1143                     l10987:	
 11255  1143  3001               	movlw	01h
 11256  1144                     u3465:
 11257  1144  1003               	clrc
 11258  1145  0CB4               	rrf	(___fttol@lval+3),f
 11259  1146  0CB3               	rrf	(___fttol@lval+2),f
 11260  1147  0CB2               	rrf	(___fttol@lval+1),f
 11261  1148  0CB1               	rrf	(___fttol@lval),f
 11262  1149  3EFF               	addlw	-1
 11263  114A  1D03               	skipz
 11264  114B  2944               	goto	u3465
 11265                           
 11266                           	line	61
 11267  114C  3001               	movlw	(01h)
 11268  114D  00AC               	movwf	(??___fttol+0)+0
 11269  114E  082C               	movf	(??___fttol+0)+0,w
 11270  114F  07B5               	addwf	(___fttol@exp1),f
 11271  1150  1D03               	btfss	status,2
 11272  1151  2953               	goto	u3471
 11273  1152  2954               	goto	u3470
 11274  1153                     u3471:
 11275  1153  2943               	goto	l10987
 11276  1154                     u3470:
 11277  1154  297A               	goto	l10999
 11278                           	
 11279  1155                     l7807:	
 11280                           	line	62
 11281  1155  297A               	goto	l10999
 11282                           	
 11283  1156                     l7804:	
 11284                           	line	63
 11285                           	
 11286  1156                     l10989:	
 11287  1156  3018               	movlw	(018h)
 11288  1157  0235               	subwf	(___fttol@exp1),w
 11289  1158  1C03               	skipc
 11290  1159  295B               	goto	u3481
 11291  115A  295C               	goto	u3480
 11292  115B                     u3481:
 11293  115B  2973               	goto	l10997
 11294  115C                     u3480:
 11295                           	line	64
 11296                           	
 11297  115C                     l10991:	
 11298  115C  3000               	movlw	0
 11299  115D  00AB               	movwf	(?___fttol+3)
 11300  115E  3000               	movlw	0
 11301  115F  00AA               	movwf	(?___fttol+2)
 11302  1160  3000               	movlw	0
 11303  1161  00A9               	movwf	(?___fttol+1)
 11304  1162  3000               	movlw	0
 11305  1163  00A8               	movwf	(?___fttol)
 11306                           
 11307  1164  2993               	goto	l7803
 11308                           	
 11309  1165                     l10993:	
 11310  1165  2993               	goto	l7803
 11311                           	
 11312  1166                     l7809:	
 11313                           	line	65
 11314  1166  2973               	goto	l10997
 11315                           	
 11316  1167                     l7811:	
 11317                           	line	66
 11318                           	
 11319  1167                     l10995:	
 11320  1167  3001               	movlw	01h
 11321  1168  00AC               	movwf	(??___fttol+0)+0
 11322  1169                     u3495:
 11323  1169  1003               	clrc
 11324  116A  0DB1               	rlf	(___fttol@lval),f
 11325  116B  0DB2               	rlf	(___fttol@lval+1),f
 11326  116C  0DB3               	rlf	(___fttol@lval+2),f
 11327  116D  0DB4               	rlf	(___fttol@lval+3),f
 11328  116E  0BAC               	decfsz	(??___fttol+0)+0
 11329  116F  2969               	goto	u3495
 11330                           	line	67
 11331  1170  3001               	movlw	low(01h)
 11332  1171  02B5               	subwf	(___fttol@exp1),f
 11333  1172  2973               	goto	l10997
 11334                           	line	68
 11335                           	
 11336  1173                     l7810:	
 11337                           	line	65
 11338                           	
 11339  1173                     l10997:	
 11340  1173  08B5               	movf	(___fttol@exp1),f
 11341  1174  1D03               	skipz
 11342  1175  2977               	goto	u3501
 11343  1176  2978               	goto	u3500
 11344  1177                     u3501:
 11345  1177  2967               	goto	l10995
 11346  1178                     u3500:
 11347  1178  297A               	goto	l10999
 11348                           	
 11349  1179                     l7812:	
 11350  1179  297A               	goto	l10999
 11351                           	line	69
 11352                           	
 11353  117A                     l7808:	
 11354                           	line	70
 11355                           	
 11356  117A                     l10999:	
 11357  117A  0830               	movf	(___fttol@sign1),w
 11358  117B  1D03               	skipz
 11359  117C  297E               	goto	u3510
 11360  117D  298A               	goto	l11003
 11361  117E                     u3510:
 11362                           	line	71
 11363                           	
 11364  117E                     l11001:	
 11365  117E  09B1               	comf	(___fttol@lval),f
 11366  117F  09B2               	comf	(___fttol@lval+1),f
 11367  1180  09B3               	comf	(___fttol@lval+2),f
 11368  1181  09B4               	comf	(___fttol@lval+3),f
 11369  1182  0AB1               	incf	(___fttol@lval),f
 11370  1183  1903               	skipnz
 11371  1184  0AB2               	incf	(___fttol@lval+1),f
 11372  1185  1903               	skipnz
 11373  1186  0AB3               	incf	(___fttol@lval+2),f
 11374  1187  1903               	skipnz
 11375  1188  0AB4               	incf	(___fttol@lval+3),f
 11376  1189  298A               	goto	l11003
 11377                           	
 11378  118A                     l7813:	
 11379                           	line	72
 11380                           	
 11381  118A                     l11003:	
 11382  118A  0834               	movf	(___fttol@lval+3),w
 11383  118B  00AB               	movwf	(?___fttol+3)
 11384  118C  0833               	movf	(___fttol@lval+2),w
 11385  118D  00AA               	movwf	(?___fttol+2)
 11386  118E  0832               	movf	(___fttol@lval+1),w
 11387  118F  00A9               	movwf	(?___fttol+1)
 11388  1190  0831               	movf	(___fttol@lval),w
 11389  1191  00A8               	movwf	(?___fttol)
 11390                           
 11391  1192  2993               	goto	l7803
 11392                           	
 11393  1193                     l11005:	
 11394                           	line	73
 11395                           	
 11396  1193                     l7803:	
 11397  1193  0008               	return
 11398                           	opt stack 0
 11399                           GLOBAL	__end_of___fttol
 11400  1194                     	__end_of___fttol:
 11401 ;; =============== function ___fttol ends ============
 11402                           
 11403                           	signat	___fttol,4220
 11404                           	global	___lmul
 11405                           psect	text1174,local,class=CODE,delta=2
 11406                           global __ptext1174
 11407  1010                     __ptext1174:
 11408                           
 11409 ;; *************** function ___lmul *****************
 11410 ;; Defined at:
 11411 ;;		line 3 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\lmul.c"
 11412 ;; Parameters:    Size  Location     Type
 11413 ;;  multiplier      4    0[BANK0 ] unsigned long 
 11414 ;;  multiplicand    4    4[BANK0 ] unsigned long 
 11415 ;; Auto vars:     Size  Location     Type
 11416 ;;  product         4    9[BANK0 ] unsigned long 
 11417 ;; Return value:  Size  Location     Type
 11418 ;;                  4    0[BANK0 ] unsigned long 
 11419 ;; Registers used:
 11420 ;;		wreg, status,2, status,0
 11421 ;; Tracked objects:
 11422 ;;		On entry : 0/0
 11423 ;;		On exit  : 0/0
 11424 ;;		Unchanged: 0/0
 11425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11426 ;;      Params:         0       8       0       0       0
 11427 ;;      Locals:         0       4       0       0       0
 11428 ;;      Temps:          0       1       0       0       0
 11429 ;;      Totals:         0      13       0       0       0
 11430 ;;Total ram usage:       13 bytes
 11431 ;; Hardware stack levels used:    1
 11432 ;; Hardware stack levels required when called:    2
 11433 ;; This function calls:
 11434 ;;		Nothing
 11435 ;; This function is called by:
 11436 ;;		_str_to_num
 11437 ;;		_Calc_SetPoint
 11438 ;;		_get_Actrpm
 11439 ;;		_initall
 11440 ;; This function uses a non-reentrant model
 11441 ;;
 11442                           psect	text1174
 11443                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\lmul.c"
 11444                           	line	3
 11445                           	global	__size_of___lmul
 11446  004C                     	__size_of___lmul	equ	__end_of___lmul-___lmul
 11447                           	
 11448  1010                     ___lmul:	
 11449                           	opt	stack 3
 11450                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 11451                           	line	4
 11452                           	
 11453  1010                     l10943:	
 11454  1010  3000               	movlw	0
 11455  1011  1283               	bcf	status, 5	;RP0=0, select bank0
 11456  1012  1303               	bcf	status, 6	;RP1=0, select bank0
 11457  1013  00AC               	movwf	(___lmul@product+3)
 11458  1014  3000               	movlw	0
 11459  1015  00AB               	movwf	(___lmul@product+2)
 11460  1016  3000               	movlw	0
 11461  1017  00AA               	movwf	(___lmul@product+1)
 11462  1018  3000               	movlw	0
 11463  1019  00A9               	movwf	(___lmul@product)
 11464                           
 11465  101A  281B               	goto	l10945
 11466                           	line	6
 11467                           	
 11468  101B                     l7768:	
 11469                           	line	7
 11470                           	
 11471  101B                     l10945:	
 11472  101B  1C20               	btfss	(___lmul@multiplier),(0)&7
 11473  101C  281E               	goto	u3371
 11474  101D  281F               	goto	u3370
 11475  101E                     u3371:
 11476  101E  2837               	goto	l10949
 11477  101F                     u3370:
 11478                           	line	8
 11479                           	
 11480  101F                     l10947:	
 11481  101F  0824               	movf	(___lmul@multiplicand),w
 11482  1020  07A9               	addwf	(___lmul@product),f
 11483  1021  0825               	movf	(___lmul@multiplicand+1),w
 11484  1022  1103               	clrz
 11485  1023  1803               	skipnc
 11486  1024  3E01               	addlw	1
 11487  1025  1903               	skipnz
 11488  1026  2828               	goto	u3381
 11489  1027  07AA               	addwf	(___lmul@product+1),f
 11490  1028                     u3381:
 11491  1028  0826               	movf	(___lmul@multiplicand+2),w
 11492  1029  1103               	clrz
 11493  102A  1803               	skipnc
 11494  102B  3E01               	addlw	1
 11495  102C  1903               	skipnz
 11496  102D  282F               	goto	u3382
 11497  102E  07AB               	addwf	(___lmul@product+2),f
 11498  102F                     u3382:
 11499  102F  0827               	movf	(___lmul@multiplicand+3),w
 11500  1030  1103               	clrz
 11501  1031  1803               	skipnc
 11502  1032  3E01               	addlw	1
 11503  1033  1903               	skipnz
 11504  1034  2836               	goto	u3383
 11505  1035  07AC               	addwf	(___lmul@product+3),f
 11506  1036                     u3383:
 11507                           
 11508  1036  2837               	goto	l10949
 11509                           	
 11510  1037                     l7769:	
 11511                           	line	9
 11512                           	
 11513  1037                     l10949:	
 11514  1037  3001               	movlw	01h
 11515  1038  00A8               	movwf	(??___lmul+0)+0
 11516  1039                     u3395:
 11517  1039  1003               	clrc
 11518  103A  0DA4               	rlf	(___lmul@multiplicand),f
 11519  103B  0DA5               	rlf	(___lmul@multiplicand+1),f
 11520  103C  0DA6               	rlf	(___lmul@multiplicand+2),f
 11521  103D  0DA7               	rlf	(___lmul@multiplicand+3),f
 11522  103E  0BA8               	decfsz	(??___lmul+0)+0
 11523  103F  2839               	goto	u3395
 11524                           	line	10
 11525                           	
 11526  1040                     l10951:	
 11527  1040  3001               	movlw	01h
 11528  1041                     u3405:
 11529  1041  1003               	clrc
 11530  1042  0CA3               	rrf	(___lmul@multiplier+3),f
 11531  1043  0CA2               	rrf	(___lmul@multiplier+2),f
 11532  1044  0CA1               	rrf	(___lmul@multiplier+1),f
 11533  1045  0CA0               	rrf	(___lmul@multiplier),f
 11534  1046  3EFF               	addlw	-1
 11535  1047  1D03               	skipz
 11536  1048  2841               	goto	u3405
 11537                           
 11538                           	line	11
 11539  1049  0823               	movf	(___lmul@multiplier+3),w
 11540  104A  0422               	iorwf	(___lmul@multiplier+2),w
 11541  104B  0421               	iorwf	(___lmul@multiplier+1),w
 11542  104C  0420               	iorwf	(___lmul@multiplier),w
 11543  104D  1D03               	skipz
 11544  104E  2850               	goto	u3411
 11545  104F  2851               	goto	u3410
 11546  1050                     u3411:
 11547  1050  281B               	goto	l10945
 11548  1051                     u3410:
 11549  1051  2852               	goto	l10953
 11550                           	
 11551  1052                     l7770:	
 11552                           	line	12
 11553                           	
 11554  1052                     l10953:	
 11555  1052  082C               	movf	(___lmul@product+3),w
 11556  1053  00A3               	movwf	(?___lmul+3)
 11557  1054  082B               	movf	(___lmul@product+2),w
 11558  1055  00A2               	movwf	(?___lmul+2)
 11559  1056  082A               	movf	(___lmul@product+1),w
 11560  1057  00A1               	movwf	(?___lmul+1)
 11561  1058  0829               	movf	(___lmul@product),w
 11562  1059  00A0               	movwf	(?___lmul)
 11563                           
 11564  105A  285B               	goto	l7771
 11565                           	
 11566  105B                     l10955:	
 11567                           	line	13
 11568                           	
 11569  105B                     l7771:	
 11570  105B  0008               	return
 11571                           	opt stack 0
 11572                           GLOBAL	__end_of___lmul
 11573  105C                     	__end_of___lmul:
 11574 ;; =============== function ___lmul ends ============
 11575                           
 11576                           	signat	___lmul,8316
 11577                           	global	___ftpack
 11578                           psect	text1175,local,class=CODE,delta=2
 11579                           global __ptext1175
 11580  1F83                     __ptext1175:
 11581                           
 11582 ;; *************** function ___ftpack *****************
 11583 ;; Defined at:
 11584 ;;		line 63 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\float.c"
 11585 ;; Parameters:    Size  Location     Type
 11586 ;;  arg             3    0[BANK0 ] unsigned um
 11587 ;;  exp             1    3[BANK0 ] unsigned char 
 11588 ;;  sign            1    4[BANK0 ] unsigned char 
 11589 ;; Auto vars:     Size  Location     Type
 11590 ;;		None
 11591 ;; Return value:  Size  Location     Type
 11592 ;;                  3    0[BANK0 ] float 
 11593 ;; Registers used:
 11594 ;;		wreg, status,2, status,0
 11595 ;; Tracked objects:
 11596 ;;		On entry : 0/0
 11597 ;;		On exit  : 0/0
 11598 ;;		Unchanged: 0/0
 11599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11600 ;;      Params:         0       5       0       0       0
 11601 ;;      Locals:         0       0       0       0       0
 11602 ;;      Temps:          0       3       0       0       0
 11603 ;;      Totals:         0       8       0       0       0
 11604 ;;Total ram usage:        8 bytes
 11605 ;; Hardware stack levels used:    1
 11606 ;; Hardware stack levels required when called:    2
 11607 ;; This function calls:
 11608 ;;		Nothing
 11609 ;; This function is called by:
 11610 ;;		___ftadd
 11611 ;;		___ftdiv
 11612 ;;		___ftmul
 11613 ;;		___awtoft
 11614 ;;		___lltoft
 11615 ;;		___lbtoft
 11616 ;;		___abtoft
 11617 ;;		___lwtoft
 11618 ;;		___altoft
 11619 ;;		___attoft
 11620 ;;		___lttoft
 11621 ;; This function uses a non-reentrant model
 11622 ;;
 11623                           psect	text1175
 11624                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\float.c"
 11625                           	line	63
 11626                           	global	__size_of___ftpack
 11627  007D                     	__size_of___ftpack	equ	__end_of___ftpack-___ftpack
 11628                           	
 11629  1F83                     ___ftpack:	
 11630                           	opt	stack 3
 11631                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
 11632                           	line	64
 11633                           	
 11634  1F83                     l10913:	
 11635  1F83  1283               	bcf	status, 5	;RP0=0, select bank0
 11636  1F84  1303               	bcf	status, 6	;RP1=0, select bank0
 11637  1F85  0823               	movf	(___ftpack@exp),w
 11638  1F86  1D03               	skipz
 11639  1F87  2F89               	goto	u3260
 11640  1F88  2F91               	goto	l10917
 11641  1F89                     u3260:
 11642                           	
 11643  1F89                     l10915:	
 11644  1F89  0822               	movf	(___ftpack@arg+2),w
 11645  1F8A  0421               	iorwf	(___ftpack@arg+1),w
 11646  1F8B  0420               	iorwf	(___ftpack@arg),w
 11647  1F8C  1D03               	skipz
 11648  1F8D  2F8F               	goto	u3271
 11649  1F8E  2F90               	goto	u3270
 11650  1F8F                     u3271:
 11651  1F8F  2FA7               	goto	l10923
 11652  1F90                     u3270:
 11653  1F90  2F91               	goto	l10917
 11654                           	
 11655  1F91                     l8027:	
 11656                           	line	65
 11657                           	
 11658  1F91                     l10917:	
 11659  1F91  3000               	movlw	0x0
 11660  1F92  00A0               	movwf	(?___ftpack)
 11661  1F93  3000               	movlw	0x0
 11662  1F94  00A1               	movwf	(?___ftpack+1)
 11663  1F95  3000               	movlw	0x0
 11664  1F96  00A2               	movwf	(?___ftpack+2)
 11665  1F97  2FFF               	goto	l8028
 11666                           	
 11667  1F98                     l10919:	
 11668  1F98  2FFF               	goto	l8028
 11669                           	
 11670  1F99                     l8025:	
 11671                           	line	66
 11672  1F99  2FA7               	goto	l10923
 11673                           	
 11674  1F9A                     l8030:	
 11675                           	line	67
 11676                           	
 11677  1F9A                     l10921:	
 11678  1F9A  3001               	movlw	(01h)
 11679  1F9B  00A5               	movwf	(??___ftpack+0)+0
 11680  1F9C  0825               	movf	(??___ftpack+0)+0,w
 11681  1F9D  07A3               	addwf	(___ftpack@exp),f
 11682                           	line	68
 11683  1F9E  3001               	movlw	01h
 11684  1F9F                     u3285:
 11685  1F9F  1003               	clrc
 11686  1FA0  0CA2               	rrf	(___ftpack@arg+2),f
 11687  1FA1  0CA1               	rrf	(___ftpack@arg+1),f
 11688  1FA2  0CA0               	rrf	(___ftpack@arg),f
 11689  1FA3  3EFF               	addlw	-1
 11690  1FA4  1D03               	skipz
 11691  1FA5  2F9F               	goto	u3285
 11692                           
 11693  1FA6  2FA7               	goto	l10923
 11694                           	line	69
 11695                           	
 11696  1FA7                     l8029:	
 11697                           	line	66
 11698                           	
 11699  1FA7                     l10923:	
 11700  1FA7  30FE               	movlw	low highword(0FE0000h)
 11701  1FA8  0522               	andwf	(___ftpack@arg+2),w
 11702  1FA9  1D03               	btfss	status,2
 11703  1FAA  2FAC               	goto	u3291
 11704  1FAB  2FAD               	goto	u3290
 11705  1FAC                     u3291:
 11706  1FAC  2F9A               	goto	l10921
 11707  1FAD                     u3290:
 11708  1FAD  2FC5               	goto	l8032
 11709                           	
 11710  1FAE                     l8031:	
 11711                           	line	70
 11712  1FAE  2FC5               	goto	l8032
 11713                           	
 11714  1FAF                     l8033:	
 11715                           	line	71
 11716                           	
 11717  1FAF                     l10925:	
 11718  1FAF  3001               	movlw	(01h)
 11719  1FB0  00A5               	movwf	(??___ftpack+0)+0
 11720  1FB1  0825               	movf	(??___ftpack+0)+0,w
 11721  1FB2  07A3               	addwf	(___ftpack@exp),f
 11722                           	line	72
 11723                           	
 11724  1FB3                     l10927:	
 11725  1FB3  3001               	movlw	01h
 11726  1FB4  07A0               	addwf	(___ftpack@arg),f
 11727  1FB5  3000               	movlw	0
 11728  1FB6  1803               	skipnc
 11729  1FB7  3001               movlw 1
 11730  1FB8  07A1               	addwf	(___ftpack@arg+1),f
 11731  1FB9  3000               	movlw	0
 11732  1FBA  1803               	skipnc
 11733  1FBB  3001               movlw 1
 11734  1FBC  07A2               	addwf	(___ftpack@arg+2),f
 11735                           	line	73
 11736                           	
 11737  1FBD                     l10929:	
 11738  1FBD  3001               	movlw	01h
 11739  1FBE                     u3305:
 11740  1FBE  1003               	clrc
 11741  1FBF  0CA2               	rrf	(___ftpack@arg+2),f
 11742  1FC0  0CA1               	rrf	(___ftpack@arg+1),f
 11743  1FC1  0CA0               	rrf	(___ftpack@arg),f
 11744  1FC2  3EFF               	addlw	-1
 11745  1FC3  1D03               	skipz
 11746  1FC4  2FBE               	goto	u3305
 11747                           
 11748                           	line	74
 11749                           	
 11750  1FC5                     l8032:	
 11751                           	line	70
 11752  1FC5  30FF               	movlw	low highword(0FF0000h)
 11753  1FC6  0522               	andwf	(___ftpack@arg+2),w
 11754  1FC7  1D03               	btfss	status,2
 11755  1FC8  2FCA               	goto	u3311
 11756  1FC9  2FCB               	goto	u3310
 11757  1FCA                     u3311:
 11758  1FCA  2FAF               	goto	l10925
 11759  1FCB                     u3310:
 11760  1FCB  2FD8               	goto	l10933
 11761                           	
 11762  1FCC                     l8034:	
 11763                           	line	75
 11764  1FCC  2FD8               	goto	l10933
 11765                           	
 11766  1FCD                     l8036:	
 11767                           	line	76
 11768                           	
 11769  1FCD                     l10931:	
 11770  1FCD  3001               	movlw	low(01h)
 11771  1FCE  02A3               	subwf	(___ftpack@exp),f
 11772                           	line	77
 11773  1FCF  3001               	movlw	01h
 11774  1FD0                     u3325:
 11775  1FD0  1003               	clrc
 11776  1FD1  0DA0               	rlf	(___ftpack@arg),f
 11777  1FD2  0DA1               	rlf	(___ftpack@arg+1),f
 11778  1FD3  0DA2               	rlf	(___ftpack@arg+2),f
 11779  1FD4  3EFF               	addlw	-1
 11780  1FD5  1D03               	skipz
 11781  1FD6  2FD0               	goto	u3325
 11782  1FD7  2FD8               	goto	l10933
 11783                           	line	78
 11784                           	
 11785  1FD8                     l8035:	
 11786                           	line	75
 11787                           	
 11788  1FD8                     l10933:	
 11789  1FD8  1FA1               	btfss	(___ftpack@arg+1),(15)&7
 11790  1FD9  2FDB               	goto	u3331
 11791  1FDA  2FDC               	goto	u3330
 11792  1FDB                     u3331:
 11793  1FDB  2FCD               	goto	l10931
 11794  1FDC                     u3330:
 11795                           	
 11796  1FDC                     l8037:	
 11797                           	line	79
 11798  1FDC  1823               	btfsc	(___ftpack@exp),(0)&7
 11799  1FDD  2FDF               	goto	u3341
 11800  1FDE  2FE0               	goto	u3340
 11801  1FDF                     u3341:
 11802  1FDF  2FE6               	goto	l8038
 11803  1FE0                     u3340:
 11804                           	line	80
 11805                           	
 11806  1FE0                     l10935:	
 11807  1FE0  30FF               	movlw	0FFh
 11808  1FE1  05A0               	andwf	(___ftpack@arg),f
 11809  1FE2  307F               	movlw	07Fh
 11810  1FE3  05A1               	andwf	(___ftpack@arg+1),f
 11811  1FE4  30FF               	movlw	0FFh
 11812  1FE5  05A2               	andwf	(___ftpack@arg+2),f
 11813                           	
 11814  1FE6                     l8038:	
 11815                           	line	81
 11816  1FE6  1003               	clrc
 11817  1FE7  0CA3               	rrf	(___ftpack@exp),f
 11818                           
 11819                           	line	82
 11820                           	
 11821  1FE8                     l10937:	
 11822  1FE8  0823               	movf	(___ftpack@exp),w
 11823  1FE9  00A5               	movwf	((??___ftpack+0)+0)
 11824  1FEA  01A6               	clrf	((??___ftpack+0)+0+1)
 11825  1FEB  01A7               	clrf	((??___ftpack+0)+0+2)
 11826  1FEC  3010               	movlw	010h
 11827  1FED                     u3355:
 11828  1FED  1003               	clrc
 11829  1FEE  0DA5               	rlf	(??___ftpack+0)+0,f
 11830  1FEF  0DA6               	rlf	(??___ftpack+0)+1,f
 11831  1FF0  0DA7               	rlf	(??___ftpack+0)+2,f
 11832  1FF1                     u3350:
 11833  1FF1  3EFF               	addlw	-1
 11834  1FF2  1D03               	skipz
 11835  1FF3  2FED               	goto	u3355
 11836  1FF4  0825               	movf	0+(??___ftpack+0)+0,w
 11837  1FF5  04A0               	iorwf	(___ftpack@arg),f
 11838  1FF6  0826               	movf	1+(??___ftpack+0)+0,w
 11839  1FF7  04A1               	iorwf	(___ftpack@arg+1),f
 11840  1FF8  0827               	movf	2+(??___ftpack+0)+0,w
 11841  1FF9  04A2               	iorwf	(___ftpack@arg+2),f
 11842                           	line	83
 11843                           	
 11844  1FFA                     l10939:	
 11845  1FFA  0824               	movf	(___ftpack@sign),w
 11846  1FFB  1D03               	skipz
 11847  1FFC  2FFE               	goto	u3360
 11848  1FFD  2FFF               	goto	l8039
 11849  1FFE                     u3360:
 11850                           	line	84
 11851                           	
 11852  1FFE                     l10941:	
 11853  1FFE  17A2               	bsf	(___ftpack@arg)+(23/8),(23)&7
 11854                           	
 11855  1FFF                     l8039:	
 11856                           	line	85
 11857                           	line	86
 11858                           	
 11859  1FFF                     l8028:	
 11860  1FFF  0008               	return
 11861                           	opt stack 0
 11862                           GLOBAL	__end_of___ftpack
 11863  2000                     	__end_of___ftpack:
 11864 ;; =============== function ___ftpack ends ============
 11865                           
 11866                           	signat	___ftpack,12411
 11867                           	global	_SetTime
 11868                           psect	text1176,local,class=CODE,delta=2
 11869                           global __ptext1176
 11870  1AE9                     __ptext1176:
 11871                           
 11872 ;; *************** function _SetTime *****************
 11873 ;; Defined at:
 11874 ;;		line 33 in file "Motor.c"
 11875 ;; Parameters:    Size  Location     Type
 11876 ;;		None
 11877 ;; Auto vars:     Size  Location     Type
 11878 ;;		None
 11879 ;; Return value:  Size  Location     Type
 11880 ;;		None               void
 11881 ;; Registers used:
 11882 ;;		wreg, status,2
 11883 ;; Tracked objects:
 11884 ;;		On entry : 0/0
 11885 ;;		On exit  : 0/0
 11886 ;;		Unchanged: 0/0
 11887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11888 ;;      Params:         0       0       0       0       0
 11889 ;;      Locals:         0       0       0       0       0
 11890 ;;      Temps:          0       0       0       0       0
 11891 ;;      Totals:         0       0       0       0       0
 11892 ;;Total ram usage:        0 bytes
 11893 ;; Hardware stack levels used:    1
 11894 ;; Hardware stack levels required when called:    2
 11895 ;; This function calls:
 11896 ;;		Nothing
 11897 ;; This function is called by:
 11898 ;;		_Make_Table
 11899 ;; This function uses a non-reentrant model
 11900 ;;
 11901                           psect	text1176
 11902                           	file	"Motor.c"
 11903                           	line	33
 11904                           	global	__size_of_SetTime
 11905  000E                     	__size_of_SetTime	equ	__end_of_SetTime-_SetTime
 11906                           	
 11907  1AE9                     _SetTime:	
 11908                           	opt	stack 3
 11909                           ; Regs used in _SetTime: [wreg+status,2]
 11910                           	line	34
 11911                           	
 11912  1AE9                     l10817:	
 11913                           ;Motor.c: 34: PR2 = CurStepTime;
 11914  1AE9  1683               	bsf	status, 5	;RP0=1, select bank1
 11915  1AEA  1303               	bcf	status, 6	;RP1=0, select bank1
 11916  1AEB  086E               	movf	(_CurStepTime)^080h,w
 11917  1AEC  0092               	movwf	(146)^080h	;volatile
 11918                           	line	35
 11919                           	
 11920  1AED                     l10819:	
 11921                           ;Motor.c: 35: TMR2 = 0;
 11922  1AED  1283               	bcf	status, 5	;RP0=0, select bank0
 11923  1AEE  1303               	bcf	status, 6	;RP1=0, select bank0
 11924  1AEF  0191               	clrf	(17)	;volatile
 11925                           	line	36
 11926                           	
 11927  1AF0                     l10821:	
 11928                           ;Motor.c: 36: TMR2IE = 1;
 11929  1AF0  1683               	bsf	status, 5	;RP0=1, select bank1
 11930  1AF1  1303               	bcf	status, 6	;RP1=0, select bank1
 11931  1AF2  148C               	bsf	(1121/8)^080h,(1121)&7
 11932                           	line	37
 11933                           	
 11934  1AF3                     l10823:	
 11935                           ;Motor.c: 37: TMR2ON = 1;
 11936  1AF3  1283               	bcf	status, 5	;RP0=0, select bank0
 11937  1AF4  1303               	bcf	status, 6	;RP1=0, select bank0
 11938  1AF5  1512               	bsf	(146/8),(146)&7
 11939                           	line	38
 11940                           	
 11941  1AF6                     l5607:	
 11942  1AF6  0008               	return
 11943                           	opt stack 0
 11944                           GLOBAL	__end_of_SetTime
 11945  1AF7                     	__end_of_SetTime:
 11946 ;; =============== function _SetTime ends ============
 11947                           
 11948                           	signat	_SetTime,88
 11949                           	global	_SetDir
 11950                           psect	text1177,local,class=CODE,delta=2
 11951                           global __ptext1177
 11952  1AC3                     __ptext1177:
 11953                           
 11954 ;; *************** function _SetDir *****************
 11955 ;; Defined at:
 11956 ;;		line 28 in file "Motor.c"
 11957 ;; Parameters:    Size  Location     Type
 11958 ;;		None
 11959 ;; Auto vars:     Size  Location     Type
 11960 ;;		None
 11961 ;; Return value:  Size  Location     Type
 11962 ;;		None               void
 11963 ;; Registers used:
 11964 ;;		wreg
 11965 ;; Tracked objects:
 11966 ;;		On entry : 0/0
 11967 ;;		On exit  : 0/0
 11968 ;;		Unchanged: 0/0
 11969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11970 ;;      Params:         0       0       0       0       0
 11971 ;;      Locals:         0       0       0       0       0
 11972 ;;      Temps:          0       0       0       0       0
 11973 ;;      Totals:         0       0       0       0       0
 11974 ;;Total ram usage:        0 bytes
 11975 ;; Hardware stack levels used:    1
 11976 ;; Hardware stack levels required when called:    2
 11977 ;; This function calls:
 11978 ;;		Nothing
 11979 ;; This function is called by:
 11980 ;;		_Make_Table
 11981 ;; This function uses a non-reentrant model
 11982 ;;
 11983                           psect	text1177
 11984                           	file	"Motor.c"
 11985                           	line	28
 11986                           	global	__size_of_SetDir
 11987  000A                     	__size_of_SetDir	equ	__end_of_SetDir-_SetDir
 11988                           	
 11989  1AC3                     _SetDir:	
 11990                           	opt	stack 3
 11991                           ; Regs used in _SetDir: [wreg]
 11992                           	line	29
 11993                           	
 11994  1AC3                     l10815:	
 11995                           ;Motor.c: 29: PORTBbits.RB1 = CurStepDir;
 11996  1AC3  1683               	bsf	status, 5	;RP0=1, select bank1
 11997  1AC4  1303               	bcf	status, 6	;RP1=0, select bank1
 11998  1AC5  086C               	movf	(_CurStepDir)^080h,w
 11999  1AC6  1283               	bcf	status, 5	;RP0=0, select bank0
 12000  1AC7  1303               	bcf	status, 6	;RP1=0, select bank0
 12001  1AC8  1D03               	skipz
 12002  1AC9  1486               	bsf	(6),1	;volatile
 12003  1ACA  1903               	skipnz
 12004  1ACB  1086               	bcf	(6),1	;volatile
 12005                           	line	30
 12006                           	
 12007  1ACC                     l5604:	
 12008  1ACC  0008               	return
 12009                           	opt stack 0
 12010                           GLOBAL	__end_of_SetDir
 12011  1ACD                     	__end_of_SetDir:
 12012 ;; =============== function _SetDir ends ============
 12013                           
 12014                           	signat	_SetDir,88
 12015                           	global	_SetMode
 12016                           psect	text1178,local,class=CODE,delta=2
 12017                           global __ptext1178
 12018  1B17                     __ptext1178:
 12019                           
 12020 ;; *************** function _SetMode *****************
 12021 ;; Defined at:
 12022 ;;		line 4 in file "Motor.c"
 12023 ;; Parameters:    Size  Location     Type
 12024 ;;		None
 12025 ;; Auto vars:     Size  Location     Type
 12026 ;;		None
 12027 ;; Return value:  Size  Location     Type
 12028 ;;		None               void
 12029 ;; Registers used:
 12030 ;;		wreg
 12031 ;; Tracked objects:
 12032 ;;		On entry : 0/0
 12033 ;;		On exit  : 0/0
 12034 ;;		Unchanged: 0/0
 12035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12036 ;;      Params:         0       0       0       0       0
 12037 ;;      Locals:         0       0       0       0       0
 12038 ;;      Temps:          0       0       0       0       0
 12039 ;;      Totals:         0       0       0       0       0
 12040 ;;Total ram usage:        0 bytes
 12041 ;; Hardware stack levels used:    1
 12042 ;; Hardware stack levels required when called:    2
 12043 ;; This function calls:
 12044 ;;		Nothing
 12045 ;; This function is called by:
 12046 ;;		_Make_Table
 12047 ;; This function uses a non-reentrant model
 12048 ;;
 12049                           psect	text1178
 12050                           	file	"Motor.c"
 12051                           	line	4
 12052                           	global	__size_of_SetMode
 12053  0013                     	__size_of_SetMode	equ	__end_of_SetMode-_SetMode
 12054                           	
 12055  1B17                     _SetMode:	
 12056                           	opt	stack 3
 12057                           ; Regs used in _SetMode: [wreg]
 12058                           	line	16
 12059                           	
 12060  1B17                     l10811:	
 12061                           ;Motor.c: 16: if ( CurStepMode == 2 )
 12062  1B17  1683               	bsf	status, 5	;RP0=1, select bank1
 12063  1B18  1303               	bcf	status, 6	;RP1=0, select bank1
 12064  1B19  086D               	movf	(_CurStepMode)^080h,w
 12065  1B1A  3A02               	xorlw	02h
 12066  1B1B  1D03               	skipz
 12067  1B1C  2B1E               	goto	u3091
 12068  1B1D  2B1F               	goto	u3090
 12069  1B1E                     u3091:
 12070  1B1E  2B24               	goto	l5599
 12071  1B1F                     u3090:
 12072                           	line	18
 12073                           	
 12074  1B1F                     l10813:	
 12075                           ;Motor.c: 17: {
 12076                           ;Motor.c: 18: PORTBbits.RB7 = 0 ; PORTBbits.RB6 = 1 ;
 12077  1B1F  1283               	bcf	status, 5	;RP0=0, select bank0
 12078  1B20  1303               	bcf	status, 6	;RP1=0, select bank0
 12079  1B21  1386               	bcf	(6),7	;volatile
 12080  1B22  1706               	bsf	(6),6	;volatile
 12081                           	line	19
 12082                           ;Motor.c: 19: }
 12083  1B23  2B28               	goto	l5600
 12084                           	line	20
 12085                           	
 12086  1B24                     l5599:	
 12087                           	line	22
 12088                           ;Motor.c: 20: else
 12089                           ;Motor.c: 21: {
 12090                           ;Motor.c: 22: PORTBbits.RB7 = 1 ; PORTBbits.RB6 = 0 ;
 12091  1B24  1283               	bcf	status, 5	;RP0=0, select bank0
 12092  1B25  1303               	bcf	status, 6	;RP1=0, select bank0
 12093  1B26  1786               	bsf	(6),7	;volatile
 12094  1B27  1306               	bcf	(6),6	;volatile
 12095                           	line	23
 12096                           	
 12097  1B28                     l5600:	
 12098                           	line	24
 12099                           ;Motor.c: 23: }
 12100                           ;Motor.c: 24: PORTBbits.RB4 = 1 ;
 12101  1B28  1606               	bsf	(6),4	;volatile
 12102                           	line	25
 12103                           	
 12104  1B29                     l5601:	
 12105  1B29  0008               	return
 12106                           	opt stack 0
 12107                           GLOBAL	__end_of_SetMode
 12108  1B2A                     	__end_of_SetMode:
 12109 ;; =============== function _SetMode ends ============
 12110                           
 12111                           	signat	_SetMode,88
 12112                           	global	_inittimer0
 12113                           psect	text1179,local,class=CODE,delta=2
 12114                           global __ptext1179
 12115  1ABA                     __ptext1179:
 12116                           
 12117 ;; *************** function _inittimer0 *****************
 12118 ;; Defined at:
 12119 ;;		line 45 in file "Init.c"
 12120 ;; Parameters:    Size  Location     Type
 12121 ;;		None
 12122 ;; Auto vars:     Size  Location     Type
 12123 ;;		None
 12124 ;; Return value:  Size  Location     Type
 12125 ;;		None               void
 12126 ;; Registers used:
 12127 ;;		wreg
 12128 ;; Tracked objects:
 12129 ;;		On entry : 0/0
 12130 ;;		On exit  : 0/0
 12131 ;;		Unchanged: 0/0
 12132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12133 ;;      Params:         0       0       0       0       0
 12134 ;;      Locals:         0       0       0       0       0
 12135 ;;      Temps:          0       0       0       0       0
 12136 ;;      Totals:         0       0       0       0       0
 12137 ;;Total ram usage:        0 bytes
 12138 ;; Hardware stack levels used:    1
 12139 ;; Hardware stack levels required when called:    2
 12140 ;; This function calls:
 12141 ;;		Nothing
 12142 ;; This function is called by:
 12143 ;;		_initall
 12144 ;; This function uses a non-reentrant model
 12145 ;;
 12146                           psect	text1179
 12147                           	file	"Init.c"
 12148                           	line	45
 12149                           	global	__size_of_inittimer0
 12150  0009                     	__size_of_inittimer0	equ	__end_of_inittimer0-_inittimer0
 12151                           	
 12152  1ABA                     _inittimer0:	
 12153                           	opt	stack 4
 12154                           ; Regs used in _inittimer0: [wreg]
 12155                           	line	46
 12156                           	
 12157  1ABA                     l10803:	
 12158                           ;Init.c: 46: T0CS = 0;
 12159  1ABA  1683               	bsf	status, 5	;RP0=1, select bank1
 12160  1ABB  1303               	bcf	status, 6	;RP1=0, select bank1
 12161  1ABC  1281               	bcf	(1037/8)^080h,(1037)&7
 12162                           	line	47
 12163                           ;Init.c: 47: PSA = 0;
 12164  1ABD  1181               	bcf	(1035/8)^080h,(1035)&7
 12165                           	line	48
 12166                           	
 12167  1ABE                     l10805:	
 12168                           ;Init.c: 48: OPTION_REG = 0b0011;
 12169  1ABE  3003               	movlw	(03h)
 12170  1ABF  0081               	movwf	(129)^080h	;volatile
 12171                           	line	49
 12172                           	
 12173  1AC0                     l10807:	
 12174                           ;Init.c: 49: T0SE = 1;
 12175  1AC0  1601               	bsf	(1036/8)^080h,(1036)&7
 12176                           	line	50
 12177                           	
 12178  1AC1                     l10809:	
 12179                           ;Init.c: 50: T0IE = 1;
 12180  1AC1  168B               	bsf	(93/8),(93)&7
 12181                           	line	51
 12182                           	
 12183  1AC2                     l4519:	
 12184  1AC2  0008               	return
 12185                           	opt stack 0
 12186                           GLOBAL	__end_of_inittimer0
 12187  1AC3                     	__end_of_inittimer0:
 12188 ;; =============== function _inittimer0 ends ============
 12189                           
 12190                           	signat	_inittimer0,88
 12191                           	global	_inittimer2
 12192                           psect	text1180,local,class=CODE,delta=2
 12193                           global __ptext1180
 12194  1B05                     __ptext1180:
 12195                           
 12196 ;; *************** function _inittimer2 *****************
 12197 ;; Defined at:
 12198 ;;		line 34 in file "Init.c"
 12199 ;; Parameters:    Size  Location     Type
 12200 ;;		None
 12201 ;; Auto vars:     Size  Location     Type
 12202 ;;		None
 12203 ;; Return value:  Size  Location     Type
 12204 ;;		None               void
 12205 ;; Registers used:
 12206 ;;		wreg, status,2
 12207 ;; Tracked objects:
 12208 ;;		On entry : 0/0
 12209 ;;		On exit  : 0/0
 12210 ;;		Unchanged: 0/0
 12211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12212 ;;      Params:         0       0       0       0       0
 12213 ;;      Locals:         0       0       0       0       0
 12214 ;;      Temps:          0       0       0       0       0
 12215 ;;      Totals:         0       0       0       0       0
 12216 ;;Total ram usage:        0 bytes
 12217 ;; Hardware stack levels used:    1
 12218 ;; Hardware stack levels required when called:    2
 12219 ;; This function calls:
 12220 ;;		Nothing
 12221 ;; This function is called by:
 12222 ;;		_initall
 12223 ;; This function uses a non-reentrant model
 12224 ;;
 12225                           psect	text1180
 12226                           	file	"Init.c"
 12227                           	line	34
 12228                           	global	__size_of_inittimer2
 12229  0012                     	__size_of_inittimer2	equ	__end_of_inittimer2-_inittimer2
 12230                           	
 12231  1B05                     _inittimer2:	
 12232                           	opt	stack 4
 12233                           ; Regs used in _inittimer2: [wreg+status,2]
 12234                           	line	35
 12235                           	
 12236  1B05                     l10789:	
 12237                           ;Init.c: 35: T2CON = 0b00000101;
 12238  1B05  3005               	movlw	(05h)
 12239  1B06  1283               	bcf	status, 5	;RP0=0, select bank0
 12240  1B07  1303               	bcf	status, 6	;RP1=0, select bank0
 12241  1B08  0092               	movwf	(18)	;volatile
 12242                           	line	36
 12243                           	
 12244  1B09                     l10791:	
 12245                           ;Init.c: 36: TMR2ON = 1;
 12246  1B09  1512               	bsf	(146/8),(146)&7
 12247                           	line	37
 12248                           	
 12249  1B0A                     l10793:	
 12250                           ;Init.c: 37: TMR2IE = 1;
 12251  1B0A  1683               	bsf	status, 5	;RP0=1, select bank1
 12252  1B0B  1303               	bcf	status, 6	;RP1=0, select bank1
 12253  1B0C  148C               	bsf	(1121/8)^080h,(1121)&7
 12254                           	line	38
 12255                           	
 12256  1B0D                     l10795:	
 12257                           ;Init.c: 38: TMR2 = 0;
 12258  1B0D  1283               	bcf	status, 5	;RP0=0, select bank0
 12259  1B0E  1303               	bcf	status, 6	;RP1=0, select bank0
 12260  1B0F  0191               	clrf	(17)	;volatile
 12261                           	line	39
 12262                           	
 12263  1B10                     l10797:	
 12264                           ;Init.c: 39: PR2 = 0xff;
 12265  1B10  30FF               	movlw	(0FFh)
 12266  1B11  1683               	bsf	status, 5	;RP0=1, select bank1
 12267  1B12  1303               	bcf	status, 6	;RP1=0, select bank1
 12268  1B13  0092               	movwf	(146)^080h	;volatile
 12269                           	line	40
 12270                           	
 12271  1B14                     l10799:	
 12272                           ;Init.c: 40: PEIE = 1;
 12273  1B14  170B               	bsf	(94/8),(94)&7
 12274                           	line	41
 12275                           	
 12276  1B15                     l10801:	
 12277                           ;Init.c: 41: GIE = 1;
 12278  1B15  178B               	bsf	(95/8),(95)&7
 12279                           	line	42
 12280                           	
 12281  1B16                     l4516:	
 12282  1B16  0008               	return
 12283                           	opt stack 0
 12284                           GLOBAL	__end_of_inittimer2
 12285  1B17                     	__end_of_inittimer2:
 12286 ;; =============== function _inittimer2 ends ============
 12287                           
 12288                           	signat	_inittimer2,88
 12289                           	global	_inittimer1
 12290                           psect	text1181,local,class=CODE,delta=2
 12291                           global __ptext1181
 12292  1ADB                     __ptext1181:
 12293                           
 12294 ;; *************** function _inittimer1 *****************
 12295 ;; Defined at:
 12296 ;;		line 20 in file "Init.c"
 12297 ;; Parameters:    Size  Location     Type
 12298 ;;		None
 12299 ;; Auto vars:     Size  Location     Type
 12300 ;;		None
 12301 ;; Return value:  Size  Location     Type
 12302 ;;		None               void
 12303 ;; Registers used:
 12304 ;;		wreg, status,2
 12305 ;; Tracked objects:
 12306 ;;		On entry : 0/0
 12307 ;;		On exit  : 0/0
 12308 ;;		Unchanged: 0/0
 12309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12310 ;;      Params:         0       0       0       0       0
 12311 ;;      Locals:         0       0       0       0       0
 12312 ;;      Temps:          0       0       0       0       0
 12313 ;;      Totals:         0       0       0       0       0
 12314 ;;Total ram usage:        0 bytes
 12315 ;; Hardware stack levels used:    1
 12316 ;; Hardware stack levels required when called:    2
 12317 ;; This function calls:
 12318 ;;		Nothing
 12319 ;; This function is called by:
 12320 ;;		_initall
 12321 ;; This function uses a non-reentrant model
 12322 ;;
 12323                           psect	text1181
 12324                           	file	"Init.c"
 12325                           	line	20
 12326                           	global	__size_of_inittimer1
 12327  000E                     	__size_of_inittimer1	equ	__end_of_inittimer1-_inittimer1
 12328                           	
 12329  1ADB                     _inittimer1:	
 12330                           	opt	stack 4
 12331                           ; Regs used in _inittimer1: [wreg+status,2]
 12332                           	line	21
 12333                           	
 12334  1ADB                     l10777:	
 12335                           ;Init.c: 21: T1CON = 0b00000101;
 12336  1ADB  3005               	movlw	(05h)
 12337  1ADC  1283               	bcf	status, 5	;RP0=0, select bank0
 12338  1ADD  1303               	bcf	status, 6	;RP1=0, select bank0
 12339  1ADE  0090               	movwf	(16)	;volatile
 12340                           	line	23
 12341                           	
 12342  1ADF                     l10779:	
 12343                           ;Init.c: 23: TMR1L = 0; TMR1H = 0;
 12344  1ADF  018E               	clrf	(14)	;volatile
 12345                           	
 12346  1AE0                     l10781:	
 12347  1AE0  018F               	clrf	(15)	;volatile
 12348                           	line	24
 12349                           	
 12350  1AE1                     l10783:	
 12351                           ;Init.c: 24: TMR1ON = 1;
 12352  1AE1  1410               	bsf	(128/8),(128)&7
 12353                           	line	27
 12354                           ;Init.c: 27: CCP2CON = 0b00000100;
 12355  1AE2  3004               	movlw	(04h)
 12356  1AE3  009D               	movwf	(29)	;volatile
 12357                           	line	28
 12358                           	
 12359  1AE4                     l10785:	
 12360                           ;Init.c: 28: CCP2IF = 0;
 12361  1AE4  100D               	bcf	(104/8),(104)&7
 12362                           	line	29
 12363                           	
 12364  1AE5                     l10787:	
 12365                           ;Init.c: 29: CCP2IE = 1;
 12366  1AE5  1683               	bsf	status, 5	;RP0=1, select bank1
 12367  1AE6  1303               	bcf	status, 6	;RP1=0, select bank1
 12368  1AE7  140D               	bsf	(1128/8)^080h,(1128)&7
 12369                           	line	31
 12370                           	
 12371  1AE8                     l4513:	
 12372  1AE8  0008               	return
 12373                           	opt stack 0
 12374                           GLOBAL	__end_of_inittimer1
 12375  1AE9                     	__end_of_inittimer1:
 12376 ;; =============== function _inittimer1 ends ============
 12377                           
 12378                           	signat	_inittimer1,88
 12379                           	global	_initadc
 12380                           psect	text1182,local,class=CODE,delta=2
 12381                           global __ptext1182
 12382  1AB1                     __ptext1182:
 12383                           
 12384 ;; *************** function _initadc *****************
 12385 ;; Defined at:
 12386 ;;		line 13 in file "Init.c"
 12387 ;; Parameters:    Size  Location     Type
 12388 ;;		None
 12389 ;; Auto vars:     Size  Location     Type
 12390 ;;		None
 12391 ;; Return value:  Size  Location     Type
 12392 ;;		None               void
 12393 ;; Registers used:
 12394 ;;		wreg
 12395 ;; Tracked objects:
 12396 ;;		On entry : 0/0
 12397 ;;		On exit  : 0/0
 12398 ;;		Unchanged: 0/0
 12399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12400 ;;      Params:         0       0       0       0       0
 12401 ;;      Locals:         0       0       0       0       0
 12402 ;;      Temps:          0       0       0       0       0
 12403 ;;      Totals:         0       0       0       0       0
 12404 ;;Total ram usage:        0 bytes
 12405 ;; Hardware stack levels used:    1
 12406 ;; Hardware stack levels required when called:    2
 12407 ;; This function calls:
 12408 ;;		Nothing
 12409 ;; This function is called by:
 12410 ;;		_initall
 12411 ;; This function uses a non-reentrant model
 12412 ;;
 12413                           psect	text1182
 12414                           	file	"Init.c"
 12415                           	line	13
 12416                           	global	__size_of_initadc
 12417  0009                     	__size_of_initadc	equ	__end_of_initadc-_initadc
 12418                           	
 12419  1AB1                     _initadc:	
 12420                           	opt	stack 4
 12421                           ; Regs used in _initadc: [wreg]
 12422                           	line	14
 12423                           	
 12424  1AB1                     l10775:	
 12425                           ;Init.c: 14: ADCON0 = 0b00000101;
 12426  1AB1  3005               	movlw	(05h)
 12427  1AB2  1283               	bcf	status, 5	;RP0=0, select bank0
 12428  1AB3  1303               	bcf	status, 6	;RP1=0, select bank0
 12429  1AB4  009F               	movwf	(31)	;volatile
 12430                           	line	16
 12431                           ;Init.c: 16: ADCON1 = 0b10000000;
 12432  1AB5  3080               	movlw	(080h)
 12433  1AB6  1683               	bsf	status, 5	;RP0=1, select bank1
 12434  1AB7  1303               	bcf	status, 6	;RP1=0, select bank1
 12435  1AB8  009F               	movwf	(159)^080h	;volatile
 12436                           	line	17
 12437                           	
 12438  1AB9                     l4510:	
 12439  1AB9  0008               	return
 12440                           	opt stack 0
 12441                           GLOBAL	__end_of_initadc
 12442  1ABA                     	__end_of_initadc:
 12443 ;; =============== function _initadc ends ============
 12444                           
 12445                           	signat	_initadc,88
 12446                           	global	_initports
 12447                           psect	text1183,local,class=CODE,delta=2
 12448                           global __ptext1183
 12449  1ACD                     __ptext1183:
 12450                           
 12451 ;; *************** function _initports *****************
 12452 ;; Defined at:
 12453 ;;		line 4 in file "Init.c"
 12454 ;; Parameters:    Size  Location     Type
 12455 ;;		None
 12456 ;; Auto vars:     Size  Location     Type
 12457 ;;		None
 12458 ;; Return value:  Size  Location     Type
 12459 ;;		None               void
 12460 ;; Registers used:
 12461 ;;		wreg, status,2
 12462 ;; Tracked objects:
 12463 ;;		On entry : 0/0
 12464 ;;		On exit  : 0/0
 12465 ;;		Unchanged: 0/0
 12466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12467 ;;      Params:         0       0       0       0       0
 12468 ;;      Locals:         0       0       0       0       0
 12469 ;;      Temps:          0       0       0       0       0
 12470 ;;      Totals:         0       0       0       0       0
 12471 ;;Total ram usage:        0 bytes
 12472 ;; Hardware stack levels used:    1
 12473 ;; Hardware stack levels required when called:    2
 12474 ;; This function calls:
 12475 ;;		Nothing
 12476 ;; This function is called by:
 12477 ;;		_main
 12478 ;; This function uses a non-reentrant model
 12479 ;;
 12480                           psect	text1183
 12481                           	file	"Init.c"
 12482                           	line	4
 12483                           	global	__size_of_initports
 12484  000E                     	__size_of_initports	equ	__end_of_initports-_initports
 12485                           	
 12486  1ACD                     _initports:	
 12487                           	opt	stack 5
 12488                           ; Regs used in _initports: [wreg+status,2]
 12489                           	line	5
 12490                           	
 12491  1ACD                     l10771:	
 12492                           ;Init.c: 5: TRISA = 0b01000110;
 12493  1ACD  3046               	movlw	(046h)
 12494  1ACE  1683               	bsf	status, 5	;RP0=1, select bank1
 12495  1ACF  1303               	bcf	status, 6	;RP1=0, select bank1
 12496  1AD0  0085               	movwf	(133)^080h	;volatile
 12497                           	line	6
 12498                           ;Init.c: 6: TRISB = 0b00100000;
 12499  1AD1  3020               	movlw	(020h)
 12500  1AD2  0086               	movwf	(134)^080h	;volatile
 12501                           	line	7
 12502                           ;Init.c: 7: TRISC = 0b10000011;
 12503  1AD3  3083               	movlw	(083h)
 12504  1AD4  0087               	movwf	(135)^080h	;volatile
 12505                           	line	8
 12506                           ;Init.c: 8: ANSEL = 0b010;
 12507  1AD5  3002               	movlw	(02h)
 12508  1AD6  1683               	bsf	status, 5	;RP0=1, select bank3
 12509  1AD7  1703               	bsf	status, 6	;RP1=1, select bank3
 12510  1AD8  0088               	movwf	(392)^0180h	;volatile
 12511                           	line	9
 12512                           	
 12513  1AD9                     l10773:	
 12514                           ;Init.c: 9: ANSELH = 0;
 12515  1AD9  0189               	clrf	(393)^0180h	;volatile
 12516                           	line	10
 12517                           	
 12518  1ADA                     l4507:	
 12519  1ADA  0008               	return
 12520                           	opt stack 0
 12521                           GLOBAL	__end_of_initports
 12522  1ADB                     	__end_of_initports:
 12523 ;; =============== function _initports ends ============
 12524                           
 12525                           	signat	_initports,88
 12526                           	global	_Get_ADC_Count
 12527                           psect	text1184,local,class=CODE,delta=2
 12528                           global __ptext1184
 12529  1D0D                     __ptext1184:
 12530                           
 12531 ;; *************** function _Get_ADC_Count *****************
 12532 ;; Defined at:
 12533 ;;		line 11 in file "main.c"
 12534 ;; Parameters:    Size  Location     Type
 12535 ;;		None
 12536 ;; Auto vars:     Size  Location     Type
 12537 ;;		None
 12538 ;; Return value:  Size  Location     Type
 12539 ;;		None               void
 12540 ;; Registers used:
 12541 ;;		wreg
 12542 ;; Tracked objects:
 12543 ;;		On entry : 0/0
 12544 ;;		On exit  : 0/0
 12545 ;;		Unchanged: 0/0
 12546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12547 ;;      Params:         0       0       0       0       0
 12548 ;;      Locals:         0       0       0       0       0
 12549 ;;      Temps:          0       2       0       0       0
 12550 ;;      Totals:         0       2       0       0       0
 12551 ;;Total ram usage:        2 bytes
 12552 ;; Hardware stack levels used:    1
 12553 ;; Hardware stack levels required when called:    2
 12554 ;; This function calls:
 12555 ;;		Nothing
 12556 ;; This function is called by:
 12557 ;;		_Calc_SetPoint
 12558 ;; This function uses a non-reentrant model
 12559 ;;
 12560                           psect	text1184
 12561                           	file	"main.c"
 12562                           	line	11
 12563                           	global	__size_of_Get_ADC_Count
 12564  0043                     	__size_of_Get_ADC_Count	equ	__end_of_Get_ADC_Count-_Get_ADC_Count
 12565                           	
 12566  1D0D                     _Get_ADC_Count:	
 12567                           	opt	stack 3
 12568                           ; Regs used in _Get_ADC_Count: [wreg]
 12569                           	line	12
 12570                           	
 12571  1D0D                     l10765:	
 12572                           ;main.c: 12: ADIF = 0;
 12573  1D0D  1283               	bcf	status, 5	;RP0=0, select bank0
 12574  1D0E  1303               	bcf	status, 6	;RP1=0, select bank0
 12575  1D0F  130C               	bcf	(102/8),(102)&7
 12576                           	line	13
 12577                           ;main.c: 13: ADON = 1;
 12578  1D10  141F               	bsf	(248/8),(248)&7
 12579                           	line	15
 12580                           # 15 "main.c"
 12581  1D11  0000               NOP ;#
 12582                           # 15 "main.c"
 12583  1D12  0000               NOP ;#
 12584                           	line	16
 12585                           # 16 "main.c"
 12586  1D13  0000               NOP ;#
 12587                           # 16 "main.c"
 12588  1D14  0000               NOP ;#
 12589                           	line	17
 12590                           # 17 "main.c"
 12591  1D15  0000               NOP ;#
 12592                           # 17 "main.c"
 12593  1D16  0000               NOP ;#
 12594                           psect	text1184
 12595                           	line	20
 12596                           ;main.c: 20: GO = 1;
 12597  1D17  1283               	bcf	status, 5	;RP0=0, select bank0
 12598  1D18  1303               	bcf	status, 6	;RP1=0, select bank0
 12599  1D19  149F               	bsf	(249/8),(249)&7
 12600                           	line	22
 12601                           ;main.c: 22: while(!ADIF){}
 12602  1D1A  2D1B               	goto	l6718
 12603                           	
 12604  1D1B                     l6719:	
 12605                           	
 12606  1D1B                     l6718:	
 12607  1D1B  1F0C               	btfss	(102/8),(102)&7
 12608  1D1C  2D1E               	goto	u3071
 12609  1D1D  2D1F               	goto	u3070
 12610  1D1E                     u3071:
 12611  1D1E  2D1B               	goto	l6718
 12612  1D1F                     u3070:
 12613                           	
 12614  1D1F                     l6720:	
 12615                           	line	23
 12616                           ;main.c: 23: ADIF = 0;
 12617  1D1F  130C               	bcf	(102/8),(102)&7
 12618                           	line	24
 12619                           ;main.c: 24: ADON = 0;
 12620  1D20  101F               	bcf	(248/8),(248)&7
 12621                           	line	25
 12622                           	
 12623  1D21                     l10767:	
 12624                           ;main.c: 25: ADC_Count = ADRESH;
 12625  1D21  081E               	movf	(30),w	;volatile
 12626  1D22  00A0               	movwf	(??_Get_ADC_Count+0)+0
 12627  1D23  01A1               	clrf	(??_Get_ADC_Count+0)+0+1
 12628  1D24  0820               	movf	0+(??_Get_ADC_Count+0)+0,w
 12629  1D25  1683               	bsf	status, 5	;RP0=1, select bank1
 12630  1D26  1303               	bcf	status, 6	;RP1=0, select bank1
 12631  1D27  00DB               	movwf	(_ADC_Count)^080h
 12632  1D28  1283               	bcf	status, 5	;RP0=0, select bank0
 12633  1D29  1303               	bcf	status, 6	;RP1=0, select bank0
 12634  1D2A  0821               	movf	1+(??_Get_ADC_Count+0)+0,w
 12635  1D2B  1683               	bsf	status, 5	;RP0=1, select bank1
 12636  1D2C  1303               	bcf	status, 6	;RP1=0, select bank1
 12637  1D2D  00DC               	movwf	(_ADC_Count+1)^080h
 12638                           	line	26
 12639                           ;main.c: 26: ADC_Count <<= 8 ;
 12640  1D2E  3008               	movlw	08h
 12641                           	
 12642  1D2F                     u3085:
 12643  1D2F  1003               	clrc
 12644  1D30  0DDB               	rlf	(_ADC_Count)^080h,f
 12645  1D31  0DDC               	rlf	(_ADC_Count+1)^080h,f
 12646  1D32  3EFF               	addlw	-1
 12647  1D33  1D03               	skipz
 12648  1D34  2D2F               	goto	u3085
 12649                           	line	27
 12650                           ;main.c: 27: ADC_Count += ADRESL;
 12651  1D35  081E               	movf	(158)^080h,w	;volatile
 12652  1D36  1283               	bcf	status, 5	;RP0=0, select bank0
 12653  1D37  1303               	bcf	status, 6	;RP1=0, select bank0
 12654  1D38  00A0               	movwf	(??_Get_ADC_Count+0)+0
 12655  1D39  01A1               	clrf	(??_Get_ADC_Count+0)+0+1
 12656  1D3A  0820               	movf	0+(??_Get_ADC_Count+0)+0,w
 12657  1D3B  1683               	bsf	status, 5	;RP0=1, select bank1
 12658  1D3C  1303               	bcf	status, 6	;RP1=0, select bank1
 12659  1D3D  07DB               	addwf	(_ADC_Count)^080h,f
 12660  1D3E  1803               	skipnc
 12661  1D3F  0ADC               	incf	(_ADC_Count+1)^080h,f
 12662  1D40  1283               	bcf	status, 5	;RP0=0, select bank0
 12663  1D41  1303               	bcf	status, 6	;RP1=0, select bank0
 12664  1D42  0821               	movf	1+(??_Get_ADC_Count+0)+0,w
 12665  1D43  1683               	bsf	status, 5	;RP0=1, select bank1
 12666  1D44  1303               	bcf	status, 6	;RP1=0, select bank1
 12667  1D45  07DC               	addwf	(_ADC_Count+1)^080h,f
 12668                           	line	28
 12669                           ;main.c: 28: ADC_Count = ADC_Count & 0x03ff;
 12670  1D46  30FF               	movlw	low(03FFh)
 12671  1D47  055B               	andwf	(_ADC_Count)^080h,w
 12672  1D48  00DB               	movwf	(_ADC_Count)^080h
 12673  1D49  3003               	movlw	high(03FFh)
 12674  1D4A  055C               	andwf	(_ADC_Count+1)^080h,w
 12675  1D4B  00DC               	movwf	1+(_ADC_Count)^080h
 12676                           	line	29
 12677                           	
 12678  1D4C                     l10769:	
 12679                           ;main.c: 29: ADIF = 0;
 12680  1D4C  1283               	bcf	status, 5	;RP0=0, select bank0
 12681  1D4D  1303               	bcf	status, 6	;RP1=0, select bank0
 12682  1D4E  130C               	bcf	(102/8),(102)&7
 12683                           	line	31
 12684                           	
 12685  1D4F                     l6721:	
 12686  1D4F  0008               	return
 12687                           	opt stack 0
 12688                           GLOBAL	__end_of_Get_ADC_Count
 12689  1D50                     	__end_of_Get_ADC_Count:
 12690 ;; =============== function _Get_ADC_Count ends ============
 12691                           
 12692                           	signat	_Get_ADC_Count,88
 12693                           	global	_WrByte
 12694                           psect	text1185,local,class=CODE,delta=2
 12695                           global __ptext1185
 12696  1BE1                     __ptext1185:
 12697                           
 12698 ;; *************** function _WrByte *****************
 12699 ;; Defined at:
 12700 ;;		line 54 in file "EEPRom.c"
 12701 ;; Parameters:    Size  Location     Type
 12702 ;;  addr            1    wreg     unsigned char 
 12703 ;;  data            1    0[BANK0 ] unsigned char 
 12704 ;; Auto vars:     Size  Location     Type
 12705 ;;  addr            1    1[BANK0 ] unsigned char 
 12706 ;; Return value:  Size  Location     Type
 12707 ;;                  1    wreg      unsigned char 
 12708 ;; Registers used:
 12709 ;;		wreg, status,2
 12710 ;; Tracked objects:
 12711 ;;		On entry : 0/0
 12712 ;;		On exit  : 0/0
 12713 ;;		Unchanged: 0/0
 12714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12715 ;;      Params:         0       1       0       0       0
 12716 ;;      Locals:         0       1       0       0       0
 12717 ;;      Temps:          0       0       0       0       0
 12718 ;;      Totals:         0       2       0       0       0
 12719 ;;Total ram usage:        2 bytes
 12720 ;; Hardware stack levels used:    1
 12721 ;; Hardware stack levels required when called:    2
 12722 ;; This function calls:
 12723 ;;		Nothing
 12724 ;; This function is called by:
 12725 ;;		_WriteEEP
 12726 ;; This function uses a non-reentrant model
 12727 ;;
 12728                           psect	text1185
 12729                           	file	"EEPRom.c"
 12730                           	line	54
 12731                           	global	__size_of_WrByte
 12732  002D                     	__size_of_WrByte	equ	__end_of_WrByte-_WrByte
 12733                           	
 12734  1BE1                     _WrByte:	
 12735                           	opt	stack 1
 12736                           ; Regs used in _WrByte: [wreg+status,2]
 12737                           ;WrByte@addr stored from wreg
 12738  1BE1  1283               	bcf	status, 5	;RP0=0, select bank0
 12739  1BE2  1303               	bcf	status, 6	;RP1=0, select bank0
 12740  1BE3  00A1               	movwf	(WrByte@addr)
 12741                           	line	55
 12742                           	
 12743  1BE4                     l10735:	
 12744                           ;EEPRom.c: 55: EEADR = addr ;
 12745  1BE4  0821               	movf	(WrByte@addr),w
 12746  1BE5  1283               	bcf	status, 5	;RP0=0, select bank2
 12747  1BE6  1703               	bsf	status, 6	;RP1=1, select bank2
 12748  1BE7  008D               	movwf	(269)^0100h	;volatile
 12749                           	line	56
 12750                           ;EEPRom.c: 56: EEDAT = data ;
 12751  1BE8  1283               	bcf	status, 5	;RP0=0, select bank0
 12752  1BE9  1303               	bcf	status, 6	;RP1=0, select bank0
 12753  1BEA  0820               	movf	(WrByte@data),w
 12754  1BEB  1283               	bcf	status, 5	;RP0=0, select bank2
 12755  1BEC  1703               	bsf	status, 6	;RP1=1, select bank2
 12756  1BED  008C               	movwf	(268)^0100h	;volatile
 12757                           	line	58
 12758                           	
 12759  1BEE                     l10737:	
 12760                           ;EEPRom.c: 58: EECON1 = 0x00 ;
 12761  1BEE  1683               	bsf	status, 5	;RP0=1, select bank3
 12762  1BEF  1703               	bsf	status, 6	;RP1=1, select bank3
 12763  1BF0  018C               	clrf	(396)^0180h	;volatile
 12764                           	line	59
 12765                           	
 12766  1BF1                     l10739:	
 12767                           ;EEPRom.c: 59: WREN=1;
 12768  1BF1  150C               	bsf	(3170/8)^0180h,(3170)&7
 12769                           	line	60
 12770                           	
 12771  1BF2                     l10741:	
 12772                           ;EEPRom.c: 60: GIE=0;
 12773  1BF2  138B               	bcf	(95/8),(95)&7
 12774                           	line	61
 12775                           	
 12776  1BF3                     l10743:	
 12777                           ;EEPRom.c: 61: EECON2=0x55;
 12778  1BF3  3055               	movlw	(055h)
 12779  1BF4  008D               	movwf	(397)^0180h	;volatile
 12780                           	line	62
 12781                           	
 12782  1BF5                     l10745:	
 12783                           ;EEPRom.c: 62: EECON2=0xAA;
 12784  1BF5  30AA               	movlw	(0AAh)
 12785  1BF6  008D               	movwf	(397)^0180h	;volatile
 12786                           	line	63
 12787                           	
 12788  1BF7                     l10747:	
 12789                           ;EEPRom.c: 63: WR=1;
 12790  1BF7  148C               	bsf	(3169/8)^0180h,(3169)&7
 12791                           	line	64
 12792                           	
 12793  1BF8                     l10749:	
 12794                           ;EEPRom.c: 64: GIE=1;
 12795  1BF8  178B               	bsf	(95/8),(95)&7
 12796                           	line	65
 12797                           	
 12798  1BF9                     l10751:	
 12799                           ;EEPRom.c: 65: WREN=0;
 12800  1BF9  110C               	bcf	(3170/8)^0180h,(3170)&7
 12801                           	line	66
 12802                           ;EEPRom.c: 66: while( WR == 1 ) {}
 12803  1BFA  2BFB               	goto	l2280
 12804                           	
 12805  1BFB                     l2281:	
 12806                           	
 12807  1BFB                     l2280:	
 12808  1BFB  188C               	btfsc	(3169/8)^0180h,(3169)&7
 12809  1BFC  2BFE               	goto	u3051
 12810  1BFD  2BFF               	goto	u3050
 12811  1BFE                     u3051:
 12812  1BFE  2BFB               	goto	l2280
 12813  1BFF                     u3050:
 12814                           	
 12815  1BFF                     l2282:	
 12816                           	line	67
 12817                           ;EEPRom.c: 67: if(EEIF==1)
 12818  1BFF  1283               	bcf	status, 5	;RP0=0, select bank0
 12819  1C00  1303               	bcf	status, 6	;RP1=0, select bank0
 12820  1C01  1E0D               	btfss	(108/8),(108)&7
 12821  1C02  2C04               	goto	u3061
 12822  1C03  2C05               	goto	u3060
 12823  1C04                     u3061:
 12824  1C04  2C0A               	goto	l10761
 12825  1C05                     u3060:
 12826                           	line	69
 12827                           	
 12828  1C05                     l10753:	
 12829                           ;EEPRom.c: 68: {
 12830                           ;EEPRom.c: 69: EEIF=0;
 12831  1C05  120D               	bcf	(108/8),(108)&7
 12832                           	line	70
 12833                           	
 12834  1C06                     l10755:	
 12835                           ;EEPRom.c: 70: return 1;
 12836  1C06  3001               	movlw	(01h)
 12837  1C07  2C0D               	goto	l2284
 12838                           	
 12839  1C08                     l10757:	
 12840  1C08  2C0D               	goto	l2284
 12841                           	line	71
 12842                           	
 12843  1C09                     l10759:	
 12844                           ;EEPRom.c: 71: }
 12845  1C09  2C0D               	goto	l2284
 12846                           	line	72
 12847                           	
 12848  1C0A                     l2283:	
 12849                           	line	74
 12850                           	
 12851  1C0A                     l10761:	
 12852                           ;EEPRom.c: 72: else
 12853                           ;EEPRom.c: 73: {
 12854                           ;EEPRom.c: 74: return 0;
 12855  1C0A  3000               	movlw	(0)
 12856  1C0B  2C0D               	goto	l2284
 12857                           	
 12858  1C0C                     l10763:	
 12859  1C0C  2C0D               	goto	l2284
 12860                           	line	75
 12861                           	
 12862  1C0D                     l2285:	
 12863                           	line	77
 12864                           	
 12865  1C0D                     l2284:	
 12866  1C0D  0008               	return
 12867                           	opt stack 0
 12868                           GLOBAL	__end_of_WrByte
 12869  1C0E                     	__end_of_WrByte:
 12870 ;; =============== function _WrByte ends ============
 12871                           
 12872                           	signat	_WrByte,8313
 12873                           	global	_RdByte
 12874                           psect	text1186,local,class=CODE,delta=2
 12875                           global __ptext1186
 12876  1B6D                     __ptext1186:
 12877                           
 12878 ;; *************** function _RdByte *****************
 12879 ;; Defined at:
 12880 ;;		line 4 in file "EEPRom.c"
 12881 ;; Parameters:    Size  Location     Type
 12882 ;;  addr            1    wreg     unsigned char 
 12883 ;; Auto vars:     Size  Location     Type
 12884 ;;  addr            1    1[BANK0 ] unsigned char 
 12885 ;;  Data            1    2[BANK0 ] unsigned char 
 12886 ;; Return value:  Size  Location     Type
 12887 ;;                  1    wreg      unsigned char 
 12888 ;; Registers used:
 12889 ;;		wreg
 12890 ;; Tracked objects:
 12891 ;;		On entry : 0/0
 12892 ;;		On exit  : 0/0
 12893 ;;		Unchanged: 0/0
 12894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12895 ;;      Params:         0       0       0       0       0
 12896 ;;      Locals:         0       2       0       0       0
 12897 ;;      Temps:          0       1       0       0       0
 12898 ;;      Totals:         0       3       0       0       0
 12899 ;;Total ram usage:        3 bytes
 12900 ;; Hardware stack levels used:    1
 12901 ;; Hardware stack levels required when called:    2
 12902 ;; This function calls:
 12903 ;;		Nothing
 12904 ;; This function is called by:
 12905 ;;		_ReadEEP
 12906 ;; This function uses a non-reentrant model
 12907 ;;
 12908                           psect	text1186
 12909                           	file	"EEPRom.c"
 12910                           	line	4
 12911                           	global	__size_of_RdByte
 12912  0023                     	__size_of_RdByte	equ	__end_of_RdByte-_RdByte
 12913                           	
 12914  1B6D                     _RdByte:	
 12915                           	opt	stack 2
 12916                           ; Regs used in _RdByte: [wreg]
 12917                           ;RdByte@addr stored from wreg
 12918                           	line	7
 12919  1B6D  1283               	bcf	status, 5	;RP0=0, select bank0
 12920  1B6E  1303               	bcf	status, 6	;RP1=0, select bank0
 12921  1B6F  00A1               	movwf	(RdByte@addr)
 12922                           	
 12923  1B70                     l10723:	
 12924                           ;EEPRom.c: 5: unsigned char Data ;
 12925                           ;EEPRom.c: 7: EEADR = addr ;
 12926  1B70  0821               	movf	(RdByte@addr),w
 12927  1B71  1283               	bcf	status, 5	;RP0=0, select bank2
 12928  1B72  1703               	bsf	status, 6	;RP1=1, select bank2
 12929  1B73  008D               	movwf	(269)^0100h	;volatile
 12930                           	line	8
 12931                           ;EEPRom.c: 8: EECON1 = 0x01 ;
 12932  1B74  3001               	movlw	(01h)
 12933  1B75  1683               	bsf	status, 5	;RP0=1, select bank3
 12934  1B76  1703               	bsf	status, 6	;RP1=1, select bank3
 12935  1B77  008C               	movwf	(396)^0180h	;volatile
 12936                           	line	9
 12937                           	
 12938  1B78                     l10725:	
 12939                           ;EEPRom.c: 9: EEPGD = 0 ;
 12940  1B78  138C               	bcf	(3175/8)^0180h,(3175)&7
 12941                           	line	10
 12942                           	
 12943  1B79                     l10727:	
 12944                           ;EEPRom.c: 10: RD = 1 ;
 12945  1B79  140C               	bsf	(3168/8)^0180h,(3168)&7
 12946                           	line	11
 12947                           ;EEPRom.c: 11: while ( RD == 1 ) {}
 12948  1B7A  2B7B               	goto	l2264
 12949                           	
 12950  1B7B                     l2265:	
 12951                           	
 12952  1B7B                     l2264:	
 12953  1B7B  180C               	btfsc	(3168/8)^0180h,(3168)&7
 12954  1B7C  2B7E               	goto	u3041
 12955  1B7D  2B7F               	goto	u3040
 12956  1B7E                     u3041:
 12957  1B7E  2B7B               	goto	l2264
 12958  1B7F                     u3040:
 12959  1B7F  2B80               	goto	l10729
 12960                           	
 12961  1B80                     l2266:	
 12962                           	line	12
 12963                           	
 12964  1B80                     l10729:	
 12965                           ;EEPRom.c: 12: Data = EEDAT ;
 12966  1B80  1283               	bcf	status, 5	;RP0=0, select bank2
 12967  1B81  1703               	bsf	status, 6	;RP1=1, select bank2
 12968  1B82  080C               	movf	(268)^0100h,w	;volatile
 12969  1B83  1283               	bcf	status, 5	;RP0=0, select bank0
 12970  1B84  1303               	bcf	status, 6	;RP1=0, select bank0
 12971  1B85  00A0               	movwf	(??_RdByte+0)+0
 12972  1B86  0820               	movf	(??_RdByte+0)+0,w
 12973  1B87  00A2               	movwf	(RdByte@Data)
 12974                           	line	13
 12975                           	
 12976  1B88                     l10731:	
 12977                           ;EEPRom.c: 13: RD = 0 ;
 12978  1B88  1683               	bsf	status, 5	;RP0=1, select bank3
 12979  1B89  1703               	bsf	status, 6	;RP1=1, select bank3
 12980  1B8A  100C               	bcf	(3168/8)^0180h,(3168)&7
 12981                           	line	14
 12982                           ;EEPRom.c: 14: return Data ;
 12983  1B8B  1283               	bcf	status, 5	;RP0=0, select bank0
 12984  1B8C  1303               	bcf	status, 6	;RP1=0, select bank0
 12985  1B8D  0822               	movf	(RdByte@Data),w
 12986  1B8E  2B8F               	goto	l2267
 12987                           	
 12988  1B8F                     l10733:	
 12989                           	line	15
 12990                           	
 12991  1B8F                     l2267:	
 12992  1B8F  0008               	return
 12993                           	opt stack 0
 12994                           GLOBAL	__end_of_RdByte
 12995  1B90                     	__end_of_RdByte:
 12996 ;; =============== function _RdByte ends ============
 12997                           
 12998                           	signat	_RdByte,4217
 12999                           	global	_ChkRange
 13000                           psect	text1187,local,class=CODE,delta=2
 13001                           global __ptext1187
 13002  1DE4                     __ptext1187:
 13003                           
 13004 ;; *************** function _ChkRange *****************
 13005 ;; Defined at:
 13006 ;;		line 174 in file "Serial.c"
 13007 ;; Parameters:    Size  Location     Type
 13008 ;;  val             4    0[BANK0 ] unsigned long 
 13009 ;; Auto vars:     Size  Location     Type
 13010 ;;		None
 13011 ;; Return value:  Size  Location     Type
 13012 ;;                  1    wreg      unsigned char 
 13013 ;; Registers used:
 13014 ;;		wreg
 13015 ;; Tracked objects:
 13016 ;;		On entry : 0/0
 13017 ;;		On exit  : 0/0
 13018 ;;		Unchanged: 0/0
 13019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13020 ;;      Params:         0       4       0       0       0
 13021 ;;      Locals:         0       0       0       0       0
 13022 ;;      Temps:          0       0       0       0       0
 13023 ;;      Totals:         0       4       0       0       0
 13024 ;;Total ram usage:        4 bytes
 13025 ;; Hardware stack levels used:    1
 13026 ;; Hardware stack levels required when called:    2
 13027 ;; This function calls:
 13028 ;;		Nothing
 13029 ;; This function is called by:
 13030 ;;		_getData
 13031 ;; This function uses a non-reentrant model
 13032 ;;
 13033                           psect	text1187
 13034                           	file	"Serial.c"
 13035                           	line	174
 13036                           	global	__size_of_ChkRange
 13037  004B                     	__size_of_ChkRange	equ	__end_of_ChkRange-_ChkRange
 13038                           	
 13039  1DE4                     _ChkRange:	
 13040                           	opt	stack 4
 13041                           ; Regs used in _ChkRange: [wreg]
 13042                           	line	175
 13043                           	
 13044  1DE4                     l10709:	
 13045                           ;Serial.c: 175: if( val > MaxVal || val < MinVal) return 1;
 13046  1DE4  1283               	bcf	status, 5	;RP0=0, select bank0
 13047  1DE5  1303               	bcf	status, 6	;RP1=0, select bank0
 13048  1DE6  0823               	movf	(ChkRange@val+3),w
 13049  1DE7  1683               	bsf	status, 5	;RP0=1, select bank3
 13050  1DE8  1703               	bsf	status, 6	;RP1=1, select bank3
 13051  1DE9  0223               	subwf	(_MaxVal+3)^0180h,w
 13052  1DEA  1D03               	skipz
 13053  1DEB  2E02               	goto	u3025
 13054  1DEC  1283               	bcf	status, 5	;RP0=0, select bank0
 13055  1DED  1303               	bcf	status, 6	;RP1=0, select bank0
 13056  1DEE  0822               	movf	(ChkRange@val+2),w
 13057  1DEF  1683               	bsf	status, 5	;RP0=1, select bank3
 13058  1DF0  1703               	bsf	status, 6	;RP1=1, select bank3
 13059  1DF1  0222               	subwf	(_MaxVal+2)^0180h,w
 13060  1DF2  1D03               	skipz
 13061  1DF3  2E02               	goto	u3025
 13062  1DF4  1283               	bcf	status, 5	;RP0=0, select bank0
 13063  1DF5  1303               	bcf	status, 6	;RP1=0, select bank0
 13064  1DF6  0821               	movf	(ChkRange@val+1),w
 13065  1DF7  1683               	bsf	status, 5	;RP0=1, select bank3
 13066  1DF8  1703               	bsf	status, 6	;RP1=1, select bank3
 13067  1DF9  0221               	subwf	(_MaxVal+1)^0180h,w
 13068  1DFA  1D03               	skipz
 13069  1DFB  2E02               	goto	u3025
 13070  1DFC  1283               	bcf	status, 5	;RP0=0, select bank0
 13071  1DFD  1303               	bcf	status, 6	;RP1=0, select bank0
 13072  1DFE  0820               	movf	(ChkRange@val),w
 13073  1DFF  1683               	bsf	status, 5	;RP0=1, select bank3
 13074  1E00  1703               	bsf	status, 6	;RP1=1, select bank3
 13075  1E01  0220               	subwf	(_MaxVal)^0180h,w
 13076  1E02                     u3025:
 13077  1E02  1C03               	skipc
 13078  1E03  2E05               	goto	u3021
 13079  1E04  2E06               	goto	u3020
 13080  1E05                     u3021:
 13081  1E05  2E27               	goto	l10713
 13082  1E06                     u3020:
 13083                           	
 13084  1E06                     l10711:	
 13085  1E06  0827               	movf	(_MinVal+3)^0180h,w
 13086  1E07  1283               	bcf	status, 5	;RP0=0, select bank0
 13087  1E08  1303               	bcf	status, 6	;RP1=0, select bank0
 13088  1E09  0223               	subwf	(ChkRange@val+3),w
 13089  1E0A  1D03               	skipz
 13090  1E0B  2E22               	goto	u3035
 13091  1E0C  1683               	bsf	status, 5	;RP0=1, select bank3
 13092  1E0D  1703               	bsf	status, 6	;RP1=1, select bank3
 13093  1E0E  0826               	movf	(_MinVal+2)^0180h,w
 13094  1E0F  1283               	bcf	status, 5	;RP0=0, select bank0
 13095  1E10  1303               	bcf	status, 6	;RP1=0, select bank0
 13096  1E11  0222               	subwf	(ChkRange@val+2),w
 13097  1E12  1D03               	skipz
 13098  1E13  2E22               	goto	u3035
 13099  1E14  1683               	bsf	status, 5	;RP0=1, select bank3
 13100  1E15  1703               	bsf	status, 6	;RP1=1, select bank3
 13101  1E16  0825               	movf	(_MinVal+1)^0180h,w
 13102  1E17  1283               	bcf	status, 5	;RP0=0, select bank0
 13103  1E18  1303               	bcf	status, 6	;RP1=0, select bank0
 13104  1E19  0221               	subwf	(ChkRange@val+1),w
 13105  1E1A  1D03               	skipz
 13106  1E1B  2E22               	goto	u3035
 13107  1E1C  1683               	bsf	status, 5	;RP0=1, select bank3
 13108  1E1D  1703               	bsf	status, 6	;RP1=1, select bank3
 13109  1E1E  0824               	movf	(_MinVal)^0180h,w
 13110  1E1F  1283               	bcf	status, 5	;RP0=0, select bank0
 13111  1E20  1303               	bcf	status, 6	;RP1=0, select bank0
 13112  1E21  0220               	subwf	(ChkRange@val),w
 13113  1E22                     u3035:
 13114  1E22  1803               	skipnc
 13115  1E23  2E25               	goto	u3031
 13116  1E24  2E26               	goto	u3030
 13117  1E25                     u3031:
 13118  1E25  2E2B               	goto	l10719
 13119  1E26                     u3030:
 13120  1E26  2E27               	goto	l10713
 13121                           	
 13122  1E27                     l1154:	
 13123                           	
 13124  1E27                     l10713:	
 13125  1E27  3001               	movlw	(01h)
 13126  1E28  2E2E               	goto	l1155
 13127                           	
 13128  1E29                     l10715:	
 13129  1E29  2E2E               	goto	l1155
 13130                           	
 13131  1E2A                     l10717:	
 13132  1E2A  2E2E               	goto	l1155
 13133                           	line	176
 13134                           	
 13135  1E2B                     l1152:	
 13136                           	
 13137  1E2B                     l10719:	
 13138                           ;Serial.c: 176: else return 0;
 13139  1E2B  3000               	movlw	(0)
 13140  1E2C  2E2E               	goto	l1155
 13141                           	
 13142  1E2D                     l10721:	
 13143  1E2D  2E2E               	goto	l1155
 13144                           	
 13145  1E2E                     l1156:	
 13146                           	line	177
 13147                           	
 13148  1E2E                     l1155:	
 13149  1E2E  0008               	return
 13150                           	opt stack 0
 13151                           GLOBAL	__end_of_ChkRange
 13152  1E2F                     	__end_of_ChkRange:
 13153 ;; =============== function _ChkRange ends ============
 13154                           
 13155                           	signat	_ChkRange,4217
 13156                           	global	_getrangeval
 13157                           psect	text1188,local,class=CODE,delta=2
 13158                           global __ptext1188
 13159  0800                     __ptext1188:
 13160                           
 13161 ;; *************** function _getrangeval *****************
 13162 ;; Defined at:
 13163 ;;		line 154 in file "Serial.c"
 13164 ;; Parameters:    Size  Location     Type
 13165 ;;		None
 13166 ;; Auto vars:     Size  Location     Type
 13167 ;;		None
 13168 ;; Return value:  Size  Location     Type
 13169 ;;		None               void
 13170 ;; Registers used:
 13171 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 13172 ;; Tracked objects:
 13173 ;;		On entry : 0/0
 13174 ;;		On exit  : 0/0
 13175 ;;		Unchanged: 0/0
 13176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13177 ;;      Params:         0       0       0       0       0
 13178 ;;      Locals:         0       0       0       0       0
 13179 ;;      Temps:          0       1       0       0       0
 13180 ;;      Totals:         0       1       0       0       0
 13181 ;;Total ram usage:        1 bytes
 13182 ;; Hardware stack levels used:    1
 13183 ;; Hardware stack levels required when called:    2
 13184 ;; This function calls:
 13185 ;;		Nothing
 13186 ;; This function is called by:
 13187 ;;		_getData
 13188 ;; This function uses a non-reentrant model
 13189 ;;
 13190                           psect	text1188
 13191                           	file	"Serial.c"
 13192                           	line	154
 13193                           	global	__size_of_getrangeval
 13194  00ED                     	__size_of_getrangeval	equ	__end_of_getrangeval-_getrangeval
 13195                           	
 13196  0800                     _getrangeval:	
 13197                           	opt	stack 4
 13198                           ; Regs used in _getrangeval: [wreg-fsr0h+status,2+status,0]
 13199                           	line	155
 13200                           	
 13201  0800                     l10683:	
 13202                           ;Serial.c: 155: switch(Command)
 13203  0800  28C7               	goto	l10707
 13204                           	line	157
 13205                           ;Serial.c: 156: {
 13206                           ;Serial.c: 157: case 'Z': MaxVal = 100000; MinVal = 0; break;
 13207                           	
 13208  0801                     l1136:	
 13209                           	
 13210  0801                     l10685:	
 13211  0801  3000               	movlw	0
 13212  0802  1683               	bsf	status, 5	;RP0=1, select bank3
 13213  0803  1703               	bsf	status, 6	;RP1=1, select bank3
 13214  0804  00A3               	movwf	(_MaxVal+3)^0180h
 13215  0805  3001               	movlw	01h
 13216  0806  00A2               	movwf	(_MaxVal+2)^0180h
 13217  0807  3086               	movlw	086h
 13218  0808  00A1               	movwf	(_MaxVal+1)^0180h
 13219  0809  30A0               	movlw	0A0h
 13220  080A  00A0               	movwf	(_MaxVal)^0180h
 13221                           
 13222  080B  3000               	movlw	0
 13223  080C  00A7               	movwf	(_MinVal+3)^0180h
 13224  080D  3000               	movlw	0
 13225  080E  00A6               	movwf	(_MinVal+2)^0180h
 13226  080F  3000               	movlw	0
 13227  0810  00A5               	movwf	(_MinVal+1)^0180h
 13228  0811  3000               	movlw	0
 13229  0812  00A4               	movwf	(_MinVal)^0180h
 13230                           
 13231  0813  28EC               	goto	l1149
 13232                           	line	158
 13233                           ;Serial.c: 158: case 'S': MaxVal = 100000; MinVal = 0; break;
 13234                           	
 13235  0814                     l1138:	
 13236                           	
 13237  0814                     l10687:	
 13238  0814  3000               	movlw	0
 13239  0815  1683               	bsf	status, 5	;RP0=1, select bank3
 13240  0816  1703               	bsf	status, 6	;RP1=1, select bank3
 13241  0817  00A3               	movwf	(_MaxVal+3)^0180h
 13242  0818  3001               	movlw	01h
 13243  0819  00A2               	movwf	(_MaxVal+2)^0180h
 13244  081A  3086               	movlw	086h
 13245  081B  00A1               	movwf	(_MaxVal+1)^0180h
 13246  081C  30A0               	movlw	0A0h
 13247  081D  00A0               	movwf	(_MaxVal)^0180h
 13248                           
 13249  081E  3000               	movlw	0
 13250  081F  00A7               	movwf	(_MinVal+3)^0180h
 13251  0820  3000               	movlw	0
 13252  0821  00A6               	movwf	(_MinVal+2)^0180h
 13253  0822  3000               	movlw	0
 13254  0823  00A5               	movwf	(_MinVal+1)^0180h
 13255  0824  3000               	movlw	0
 13256  0825  00A4               	movwf	(_MinVal)^0180h
 13257                           
 13258  0826  28EC               	goto	l1149
 13259                           	line	159
 13260                           ;Serial.c: 159: case 'T': MaxVal = 100000; MinVal = 0; break;
 13261                           	
 13262  0827                     l1139:	
 13263                           	
 13264  0827                     l10689:	
 13265  0827  3000               	movlw	0
 13266  0828  1683               	bsf	status, 5	;RP0=1, select bank3
 13267  0829  1703               	bsf	status, 6	;RP1=1, select bank3
 13268  082A  00A3               	movwf	(_MaxVal+3)^0180h
 13269  082B  3001               	movlw	01h
 13270  082C  00A2               	movwf	(_MaxVal+2)^0180h
 13271  082D  3086               	movlw	086h
 13272  082E  00A1               	movwf	(_MaxVal+1)^0180h
 13273  082F  30A0               	movlw	0A0h
 13274  0830  00A0               	movwf	(_MaxVal)^0180h
 13275                           
 13276  0831  3000               	movlw	0
 13277  0832  00A7               	movwf	(_MinVal+3)^0180h
 13278  0833  3000               	movlw	0
 13279  0834  00A6               	movwf	(_MinVal+2)^0180h
 13280  0835  3000               	movlw	0
 13281  0836  00A5               	movwf	(_MinVal+1)^0180h
 13282  0837  3000               	movlw	0
 13283  0838  00A4               	movwf	(_MinVal)^0180h
 13284                           
 13285  0839  28EC               	goto	l1149
 13286                           	line	161
 13287                           ;Serial.c: 161: case 'P': MaxVal = 10000000; MinVal = 0; break;
 13288                           	
 13289  083A                     l1140:	
 13290                           	
 13291  083A                     l10691:	
 13292  083A  3000               	movlw	0
 13293  083B  1683               	bsf	status, 5	;RP0=1, select bank3
 13294  083C  1703               	bsf	status, 6	;RP1=1, select bank3
 13295  083D  00A3               	movwf	(_MaxVal+3)^0180h
 13296  083E  3098               	movlw	098h
 13297  083F  00A2               	movwf	(_MaxVal+2)^0180h
 13298  0840  3096               	movlw	096h
 13299  0841  00A1               	movwf	(_MaxVal+1)^0180h
 13300  0842  3080               	movlw	080h
 13301  0843  00A0               	movwf	(_MaxVal)^0180h
 13302                           
 13303  0844  3000               	movlw	0
 13304  0845  00A7               	movwf	(_MinVal+3)^0180h
 13305  0846  3000               	movlw	0
 13306  0847  00A6               	movwf	(_MinVal+2)^0180h
 13307  0848  3000               	movlw	0
 13308  0849  00A5               	movwf	(_MinVal+1)^0180h
 13309  084A  3000               	movlw	0
 13310  084B  00A4               	movwf	(_MinVal)^0180h
 13311                           
 13312  084C  28EC               	goto	l1149
 13313                           	line	162
 13314                           ;Serial.c: 162: case 'I': MaxVal = 100000; MinVal = 0; break;
 13315                           	
 13316  084D                     l1141:	
 13317                           	
 13318  084D                     l10693:	
 13319  084D  3000               	movlw	0
 13320  084E  1683               	bsf	status, 5	;RP0=1, select bank3
 13321  084F  1703               	bsf	status, 6	;RP1=1, select bank3
 13322  0850  00A3               	movwf	(_MaxVal+3)^0180h
 13323  0851  3001               	movlw	01h
 13324  0852  00A2               	movwf	(_MaxVal+2)^0180h
 13325  0853  3086               	movlw	086h
 13326  0854  00A1               	movwf	(_MaxVal+1)^0180h
 13327  0855  30A0               	movlw	0A0h
 13328  0856  00A0               	movwf	(_MaxVal)^0180h
 13329                           
 13330  0857  3000               	movlw	0
 13331  0858  00A7               	movwf	(_MinVal+3)^0180h
 13332  0859  3000               	movlw	0
 13333  085A  00A6               	movwf	(_MinVal+2)^0180h
 13334  085B  3000               	movlw	0
 13335  085C  00A5               	movwf	(_MinVal+1)^0180h
 13336  085D  3000               	movlw	0
 13337  085E  00A4               	movwf	(_MinVal)^0180h
 13338                           
 13339  085F  28EC               	goto	l1149
 13340                           	line	163
 13341                           ;Serial.c: 163: case 'D': MaxVal = 100000; MinVal = 0; break;
 13342                           	
 13343  0860                     l1142:	
 13344                           	
 13345  0860                     l10695:	
 13346  0860  3000               	movlw	0
 13347  0861  1683               	bsf	status, 5	;RP0=1, select bank3
 13348  0862  1703               	bsf	status, 6	;RP1=1, select bank3
 13349  0863  00A3               	movwf	(_MaxVal+3)^0180h
 13350  0864  3001               	movlw	01h
 13351  0865  00A2               	movwf	(_MaxVal+2)^0180h
 13352  0866  3086               	movlw	086h
 13353  0867  00A1               	movwf	(_MaxVal+1)^0180h
 13354  0868  30A0               	movlw	0A0h
 13355  0869  00A0               	movwf	(_MaxVal)^0180h
 13356                           
 13357  086A  3000               	movlw	0
 13358  086B  00A7               	movwf	(_MinVal+3)^0180h
 13359  086C  3000               	movlw	0
 13360  086D  00A6               	movwf	(_MinVal+2)^0180h
 13361  086E  3000               	movlw	0
 13362  086F  00A5               	movwf	(_MinVal+1)^0180h
 13363  0870  3000               	movlw	0
 13364  0871  00A4               	movwf	(_MinVal)^0180h
 13365                           
 13366  0872  28EC               	goto	l1149
 13367                           	line	164
 13368                           ;Serial.c: 164: case 'B': MaxVal = 100000; MinVal = 0; break;
 13369                           	
 13370  0873                     l1143:	
 13371                           	
 13372  0873                     l10697:	
 13373  0873  3000               	movlw	0
 13374  0874  1683               	bsf	status, 5	;RP0=1, select bank3
 13375  0875  1703               	bsf	status, 6	;RP1=1, select bank3
 13376  0876  00A3               	movwf	(_MaxVal+3)^0180h
 13377  0877  3001               	movlw	01h
 13378  0878  00A2               	movwf	(_MaxVal+2)^0180h
 13379  0879  3086               	movlw	086h
 13380  087A  00A1               	movwf	(_MaxVal+1)^0180h
 13381  087B  30A0               	movlw	0A0h
 13382  087C  00A0               	movwf	(_MaxVal)^0180h
 13383                           
 13384  087D  3000               	movlw	0
 13385  087E  00A7               	movwf	(_MinVal+3)^0180h
 13386  087F  3000               	movlw	0
 13387  0880  00A6               	movwf	(_MinVal+2)^0180h
 13388  0881  3000               	movlw	0
 13389  0882  00A5               	movwf	(_MinVal+1)^0180h
 13390  0883  3000               	movlw	0
 13391  0884  00A4               	movwf	(_MinVal)^0180h
 13392                           
 13393  0885  28EC               	goto	l1149
 13394                           	line	165
 13395                           ;Serial.c: 165: case 'R': MaxVal = 1; MinVal = 0; break;
 13396                           	
 13397  0886                     l1144:	
 13398                           	
 13399  0886                     l10699:	
 13400  0886  3000               	movlw	0
 13401  0887  1683               	bsf	status, 5	;RP0=1, select bank3
 13402  0888  1703               	bsf	status, 6	;RP1=1, select bank3
 13403  0889  00A3               	movwf	(_MaxVal+3)^0180h
 13404  088A  3000               	movlw	0
 13405  088B  00A2               	movwf	(_MaxVal+2)^0180h
 13406  088C  3000               	movlw	0
 13407  088D  00A1               	movwf	(_MaxVal+1)^0180h
 13408  088E  3001               	movlw	01h
 13409  088F  00A0               	movwf	(_MaxVal)^0180h
 13410                           
 13411  0890  3000               	movlw	0
 13412  0891  00A7               	movwf	(_MinVal+3)^0180h
 13413  0892  3000               	movlw	0
 13414  0893  00A6               	movwf	(_MinVal+2)^0180h
 13415  0894  3000               	movlw	0
 13416  0895  00A5               	movwf	(_MinVal+1)^0180h
 13417  0896  3000               	movlw	0
 13418  0897  00A4               	movwf	(_MinVal)^0180h
 13419                           
 13420  0898  28EC               	goto	l1149
 13421                           	line	166
 13422                           ;Serial.c: 166: case 'Q': break;
 13423                           	
 13424  0899                     l1145:	
 13425  0899  28EC               	goto	l1149
 13426                           	line	167
 13427                           ;Serial.c: 167: case 'F': MaxVal = 1000000; MinVal = 0; break;
 13428                           	
 13429  089A                     l1146:	
 13430                           	
 13431  089A                     l10701:	
 13432  089A  3000               	movlw	0
 13433  089B  1683               	bsf	status, 5	;RP0=1, select bank3
 13434  089C  1703               	bsf	status, 6	;RP1=1, select bank3
 13435  089D  00A3               	movwf	(_MaxVal+3)^0180h
 13436  089E  300F               	movlw	0Fh
 13437  089F  00A2               	movwf	(_MaxVal+2)^0180h
 13438  08A0  3042               	movlw	042h
 13439  08A1  00A1               	movwf	(_MaxVal+1)^0180h
 13440  08A2  3040               	movlw	040h
 13441  08A3  00A0               	movwf	(_MaxVal)^0180h
 13442                           
 13443  08A4  3000               	movlw	0
 13444  08A5  00A7               	movwf	(_MinVal+3)^0180h
 13445  08A6  3000               	movlw	0
 13446  08A7  00A6               	movwf	(_MinVal+2)^0180h
 13447  08A8  3000               	movlw	0
 13448  08A9  00A5               	movwf	(_MinVal+1)^0180h
 13449  08AA  3000               	movlw	0
 13450  08AB  00A4               	movwf	(_MinVal)^0180h
 13451                           
 13452  08AC  28EC               	goto	l1149
 13453                           	line	168
 13454                           ;Serial.c: 168: case 'A': MaxVal = 180; MinVal = 10; break;
 13455                           	
 13456  08AD                     l1147:	
 13457                           	
 13458  08AD                     l10703:	
 13459  08AD  3000               	movlw	0
 13460  08AE  1683               	bsf	status, 5	;RP0=1, select bank3
 13461  08AF  1703               	bsf	status, 6	;RP1=1, select bank3
 13462  08B0  00A3               	movwf	(_MaxVal+3)^0180h
 13463  08B1  3000               	movlw	0
 13464  08B2  00A2               	movwf	(_MaxVal+2)^0180h
 13465  08B3  3000               	movlw	0
 13466  08B4  00A1               	movwf	(_MaxVal+1)^0180h
 13467  08B5  30B4               	movlw	0B4h
 13468  08B6  00A0               	movwf	(_MaxVal)^0180h
 13469                           
 13470  08B7  3000               	movlw	0
 13471  08B8  00A7               	movwf	(_MinVal+3)^0180h
 13472  08B9  3000               	movlw	0
 13473  08BA  00A6               	movwf	(_MinVal+2)^0180h
 13474  08BB  3000               	movlw	0
 13475  08BC  00A5               	movwf	(_MinVal+1)^0180h
 13476  08BD  300A               	movlw	0Ah
 13477  08BE  00A4               	movwf	(_MinVal)^0180h
 13478                           
 13479  08BF  28EC               	goto	l1149
 13480                           	line	169
 13481                           ;Serial.c: 169: default: Command = 9;
 13482                           	
 13483  08C0                     l1148:	
 13484                           	
 13485  08C0                     l10705:	
 13486  08C0  3009               	movlw	(09h)
 13487  08C1  1283               	bcf	status, 5	;RP0=0, select bank0
 13488  08C2  1303               	bcf	status, 6	;RP1=0, select bank0
 13489  08C3  00A0               	movwf	(??_getrangeval+0)+0
 13490  08C4  0820               	movf	(??_getrangeval+0)+0,w
 13491  08C5  00EC               	movwf	(_Command)
 13492                           	line	170
 13493                           ;Serial.c: 170: }
 13494  08C6  28EC               	goto	l1149
 13495                           	line	155
 13496                           	
 13497  08C7                     l1135:	
 13498                           	
 13499  08C7                     l10707:	
 13500  08C7  1283               	bcf	status, 5	;RP0=0, select bank0
 13501  08C8  1303               	bcf	status, 6	;RP1=0, select bank0
 13502  08C9  086C               	movf	(_Command),w
 13503                           	; Switch size 1, requested type "space"
 13504                           ; Number of cases is 11, Range of values is 65 to 90
 13505                           ; switch strategies available:
 13506                           ; Name         Instructions Cycles
 13507                           ; simple_byte           34    18 (average)
 13508                           ; direct_byte           89    11 (fixed)
 13509                           ; jumptable            263     9 (fixed)
 13510                           ;	Chosen strategy is simple_byte
 13511                           
 13512                           	opt asmopt_off
 13513  08CA  3A41               	xorlw	65^0	; case 65
 13514  08CB  1903               	skipnz
 13515  08CC  28AD               	goto	l10703
 13516  08CD  3A03               	xorlw	66^65	; case 66
 13517  08CE  1903               	skipnz
 13518  08CF  2873               	goto	l10697
 13519  08D0  3A06               	xorlw	68^66	; case 68
 13520  08D1  1903               	skipnz
 13521  08D2  2860               	goto	l10695
 13522  08D3  3A02               	xorlw	70^68	; case 70
 13523  08D4  1903               	skipnz
 13524  08D5  289A               	goto	l10701
 13525  08D6  3A0F               	xorlw	73^70	; case 73
 13526  08D7  1903               	skipnz
 13527  08D8  284D               	goto	l10693
 13528  08D9  3A19               	xorlw	80^73	; case 80
 13529  08DA  1903               	skipnz
 13530  08DB  283A               	goto	l10691
 13531  08DC  3A01               	xorlw	81^80	; case 81
 13532  08DD  1903               	skipnz
 13533  08DE  28EC               	goto	l1149
 13534  08DF  3A03               	xorlw	82^81	; case 82
 13535  08E0  1903               	skipnz
 13536  08E1  2886               	goto	l10699
 13537  08E2  3A01               	xorlw	83^82	; case 83
 13538  08E3  1903               	skipnz
 13539  08E4  2814               	goto	l10687
 13540  08E5  3A07               	xorlw	84^83	; case 84
 13541  08E6  1903               	skipnz
 13542  08E7  2827               	goto	l10689
 13543  08E8  3A0E               	xorlw	90^84	; case 90
 13544  08E9  1903               	skipnz
 13545  08EA  2801               	goto	l10685
 13546  08EB  28C0               	goto	l10705
 13547                           	opt asmopt_on
 13548                           
 13549                           	line	170
 13550                           	
 13551  08EC                     l1137:	
 13552                           	line	171
 13553                           	
 13554  08EC                     l1149:	
 13555  08EC  0008               	return
 13556                           	opt stack 0
 13557                           GLOBAL	__end_of_getrangeval
 13558  08ED                     	__end_of_getrangeval:
 13559 ;; =============== function _getrangeval ends ============
 13560                           
 13561                           	signat	_getrangeval,88
 13562                           	global	_UARTGetChar
 13563                           psect	text1189,local,class=CODE,delta=2
 13564                           global __ptext1189
 13565  1B54                     __ptext1189:
 13566                           
 13567 ;; *************** function _UARTGetChar *****************
 13568 ;; Defined at:
 13569 ;;		line 65 in file "Serial.c"
 13570 ;; Parameters:    Size  Location     Type
 13571 ;;		None
 13572 ;; Auto vars:     Size  Location     Type
 13573 ;;  temp            1    1[BANK0 ] unsigned char 
 13574 ;; Return value:  Size  Location     Type
 13575 ;;                  1    wreg      unsigned char 
 13576 ;; Registers used:
 13577 ;;		wreg
 13578 ;; Tracked objects:
 13579 ;;		On entry : 0/0
 13580 ;;		On exit  : 0/0
 13581 ;;		Unchanged: 0/0
 13582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13583 ;;      Params:         0       0       0       0       0
 13584 ;;      Locals:         0       1       0       0       0
 13585 ;;      Temps:          0       1       0       0       0
 13586 ;;      Totals:         0       2       0       0       0
 13587 ;;Total ram usage:        2 bytes
 13588 ;; Hardware stack levels used:    1
 13589 ;; Hardware stack levels required when called:    2
 13590 ;; This function calls:
 13591 ;;		Nothing
 13592 ;; This function is called by:
 13593 ;;		_USARTGetString
 13594 ;; This function uses a non-reentrant model
 13595 ;;
 13596                           psect	text1189
 13597                           	file	"Serial.c"
 13598                           	line	65
 13599                           	global	__size_of_UARTGetChar
 13600  0019                     	__size_of_UARTGetChar	equ	__end_of_UARTGetChar-_UARTGetChar
 13601                           	
 13602  1B54                     _UARTGetChar:	
 13603                           	opt	stack 3
 13604                           ; Regs used in _UARTGetChar: [wreg]
 13605                           	line	66
 13606                           	
 13607  1B54                     l10671:	
 13608                           ;Serial.c: 66: RCIE = 1;
 13609  1B54  1683               	bsf	status, 5	;RP0=1, select bank1
 13610  1B55  1303               	bcf	status, 6	;RP1=0, select bank1
 13611  1B56  168C               	bsf	(1125/8)^080h,(1125)&7
 13612                           	line	67
 13613                           ;Serial.c: 67: RCEN = 1;
 13614  1B57  1591               	bsf	(1163/8)^080h,(1163)&7
 13615                           	line	69
 13616                           ;Serial.c: 68: unsigned char temp;
 13617                           ;Serial.c: 69: while( !RCIF );
 13618  1B58  2B59               	goto	l1109
 13619                           	
 13620  1B59                     l1110:	
 13621                           	
 13622  1B59                     l1109:	
 13623  1B59  1283               	bcf	status, 5	;RP0=0, select bank0
 13624  1B5A  1E8C               	btfss	(101/8),(101)&7
 13625  1B5B  2B5D               	goto	u3011
 13626  1B5C  2B5E               	goto	u3010
 13627  1B5D                     u3011:
 13628  1B5D  2B59               	goto	l1109
 13629  1B5E                     u3010:
 13630  1B5E  2B5F               	goto	l10673
 13631                           	
 13632  1B5F                     l1111:	
 13633                           	line	70
 13634                           	
 13635  1B5F                     l10673:	
 13636                           ;Serial.c: 70: temp = RCREG;
 13637  1B5F  081A               	movf	(26),w	;volatile
 13638  1B60  00A0               	movwf	(??_UARTGetChar+0)+0
 13639  1B61  0820               	movf	(??_UARTGetChar+0)+0,w
 13640  1B62  00A1               	movwf	(UARTGetChar@temp)
 13641                           	line	72
 13642                           	
 13643  1B63                     l10675:	
 13644                           ;Serial.c: 72: RCSTAbits.OERR = 0;
 13645  1B63  1098               	bcf	(24),1	;volatile
 13646                           	line	73
 13647                           	
 13648  1B64                     l10677:	
 13649                           ;Serial.c: 73: RCIF = 0;
 13650  1B64  128C               	bcf	(101/8),(101)&7
 13651                           	line	74
 13652                           	
 13653  1B65                     l10679:	
 13654                           ;Serial.c: 74: RCEN = 0;
 13655  1B65  1683               	bsf	status, 5	;RP0=1, select bank1
 13656  1B66  1303               	bcf	status, 6	;RP1=0, select bank1
 13657  1B67  1191               	bcf	(1163/8)^080h,(1163)&7
 13658                           	line	75
 13659                           ;Serial.c: 75: return temp;
 13660  1B68  1283               	bcf	status, 5	;RP0=0, select bank0
 13661  1B69  1303               	bcf	status, 6	;RP1=0, select bank0
 13662  1B6A  0821               	movf	(UARTGetChar@temp),w
 13663  1B6B  2B6C               	goto	l1112
 13664                           	
 13665  1B6C                     l10681:	
 13666                           	line	76
 13667                           	
 13668  1B6C                     l1112:	
 13669  1B6C  0008               	return
 13670                           	opt stack 0
 13671                           GLOBAL	__end_of_UARTGetChar
 13672  1B6D                     	__end_of_UARTGetChar:
 13673 ;; =============== function _UARTGetChar ends ============
 13674                           
 13675                           	signat	_UARTGetChar,89
 13676                           	global	_USARTWriteChar
 13677                           psect	text1190,local,class=CODE,delta=2
 13678                           global __ptext1190
 13679  1000                     __ptext1190:
 13680                           
 13681 ;; *************** function _USARTWriteChar *****************
 13682 ;; Defined at:
 13683 ;;		line 23 in file "Serial.c"
 13684 ;; Parameters:    Size  Location     Type
 13685 ;;  ch              1    wreg     unsigned char 
 13686 ;; Auto vars:     Size  Location     Type
 13687 ;;  ch              1    0[BANK0 ] unsigned char 
 13688 ;; Return value:  Size  Location     Type
 13689 ;;		None               void
 13690 ;; Registers used:
 13691 ;;		wreg
 13692 ;; Tracked objects:
 13693 ;;		On entry : 0/0
 13694 ;;		On exit  : 0/0
 13695 ;;		Unchanged: 0/0
 13696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13697 ;;      Params:         0       0       0       0       0
 13698 ;;      Locals:         0       1       0       0       0
 13699 ;;      Temps:          0       0       0       0       0
 13700 ;;      Totals:         0       1       0       0       0
 13701 ;;Total ram usage:        1 bytes
 13702 ;; Hardware stack levels used:    1
 13703 ;; Hardware stack levels required when called:    2
 13704 ;; This function calls:
 13705 ;;		Nothing
 13706 ;; This function is called by:
 13707 ;;		_USARTWriteString
 13708 ;;		_USARTWriteInt
 13709 ;;		_DispallCur
 13710 ;;		_getData
 13711 ;;		_Writeeeprom
 13712 ;;		_Calc_SetPoint
 13713 ;;		_get_Actrpm
 13714 ;;		_Calc_PID_op
 13715 ;;		_main
 13716 ;; This function uses a non-reentrant model
 13717 ;;
 13718                           psect	text1190
 13719                           	file	"Serial.c"
 13720                           	line	23
 13721                           	global	__size_of_USARTWriteChar
 13722  0010                     	__size_of_USARTWriteChar	equ	__end_of_USARTWriteChar-_USARTWriteChar
 13723                           	
 13724  1000                     _USARTWriteChar:	
 13725                           	opt	stack 3
 13726                           ; Regs used in _USARTWriteChar: [wreg]
 13727                           ;USARTWriteChar@ch stored from wreg
 13728  1000  1283               	bcf	status, 5	;RP0=0, select bank0
 13729  1001  1303               	bcf	status, 6	;RP1=0, select bank0
 13730  1002  00A0               	movwf	(USARTWriteChar@ch)
 13731                           	line	24
 13732                           	
 13733  1003                     l10667:	
 13734                           ;Serial.c: 24: while(!TXSTAbits.TRMT);
 13735  1003  2804               	goto	l1084
 13736                           	
 13737  1004                     l1085:	
 13738                           	
 13739  1004                     l1084:	
 13740  1004  1683               	bsf	status, 5	;RP0=1, select bank1
 13741  1005  1303               	bcf	status, 6	;RP1=0, select bank1
 13742  1006  1C98               	btfss	(152)^080h,1	;volatile
 13743  1007  2809               	goto	u3001
 13744  1008  280A               	goto	u3000
 13745  1009                     u3001:
 13746  1009  2804               	goto	l1084
 13747  100A                     u3000:
 13748  100A  280B               	goto	l10669
 13749                           	
 13750  100B                     l1086:	
 13751                           	line	25
 13752                           	
 13753  100B                     l10669:	
 13754                           ;Serial.c: 25: TXREG = ch;
 13755  100B  1283               	bcf	status, 5	;RP0=0, select bank0
 13756  100C  1303               	bcf	status, 6	;RP1=0, select bank0
 13757  100D  0820               	movf	(USARTWriteChar@ch),w
 13758  100E  0099               	movwf	(25)	;volatile
 13759                           	line	26
 13760                           	
 13761  100F                     l1087:	
 13762  100F  0008               	return
 13763                           	opt stack 0
 13764                           GLOBAL	__end_of_USARTWriteChar
 13765  1010                     	__end_of_USARTWriteChar:
 13766 ;; =============== function _USARTWriteChar ends ============
 13767                           
 13768                           	signat	_USARTWriteChar,4216
 13769                           	global	_USARTinit
 13770                           psect	text1191,local,class=CODE,delta=2
 13771                           global __ptext1191
 13772  1B3D                     __ptext1191:
 13773                           
 13774 ;; *************** function _USARTinit *****************
 13775 ;; Defined at:
 13776 ;;		line 5 in file "Serial.c"
 13777 ;; Parameters:    Size  Location     Type
 13778 ;;		None
 13779 ;; Auto vars:     Size  Location     Type
 13780 ;;		None
 13781 ;; Return value:  Size  Location     Type
 13782 ;;		None               void
 13783 ;; Registers used:
 13784 ;;		wreg, status,2
 13785 ;; Tracked objects:
 13786 ;;		On entry : 0/0
 13787 ;;		On exit  : 0/0
 13788 ;;		Unchanged: 0/0
 13789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13790 ;;      Params:         0       0       0       0       0
 13791 ;;      Locals:         0       0       0       0       0
 13792 ;;      Temps:          0       0       0       0       0
 13793 ;;      Totals:         0       0       0       0       0
 13794 ;;Total ram usage:        0 bytes
 13795 ;; Hardware stack levels used:    1
 13796 ;; Hardware stack levels required when called:    2
 13797 ;; This function calls:
 13798 ;;		Nothing
 13799 ;; This function is called by:
 13800 ;;		_main
 13801 ;; This function uses a non-reentrant model
 13802 ;;
 13803                           psect	text1191
 13804                           	file	"Serial.c"
 13805                           	line	5
 13806                           	global	__size_of_USARTinit
 13807  0017                     	__size_of_USARTinit	equ	__end_of_USARTinit-_USARTinit
 13808                           	
 13809  1B3D                     _USARTinit:	
 13810                           	opt	stack 5
 13811                           ; Regs used in _USARTinit: [wreg+status,2]
 13812                           	line	6
 13813                           	
 13814  1B3D                     l10661:	
 13815                           ;Serial.c: 6: TRISCbits.TRISC7 = 1;
 13816  1B3D  1683               	bsf	status, 5	;RP0=1, select bank1
 13817  1B3E  1303               	bcf	status, 6	;RP1=0, select bank1
 13818  1B3F  1787               	bsf	(135)^080h,7	;volatile
 13819                           	line	7
 13820                           ;Serial.c: 7: TRISCbits.TRISC6 = 0;
 13821  1B40  1307               	bcf	(135)^080h,6	;volatile
 13822                           	line	8
 13823                           ;Serial.c: 8: TXSTAbits.BRGH = 1;
 13824  1B41  1518               	bsf	(152)^080h,2	;volatile
 13825                           	line	9
 13826                           ;Serial.c: 9: BRG16 = 0;
 13827  1B42  1683               	bsf	status, 5	;RP0=1, select bank3
 13828  1B43  1703               	bsf	status, 6	;RP1=1, select bank3
 13829  1B44  1187               	bcf	(3131/8)^0180h,(3131)&7
 13830                           	line	10
 13831                           ;Serial.c: 10: SYNC = 0;
 13832  1B45  1683               	bsf	status, 5	;RP0=1, select bank1
 13833  1B46  1303               	bcf	status, 6	;RP1=0, select bank1
 13834  1B47  1218               	bcf	(1220/8)^080h,(1220)&7
 13835                           	line	12
 13836                           ;Serial.c: 12: TXSTAbits.TX9 = 0;
 13837  1B48  1318               	bcf	(152)^080h,6	;volatile
 13838                           	line	13
 13839                           ;Serial.c: 13: TXSTAbits.TXEN= 1;
 13840  1B49  1698               	bsf	(152)^080h,5	;volatile
 13841                           	line	14
 13842                           ;Serial.c: 14: RCSTAbits.CREN = 1;
 13843  1B4A  1283               	bcf	status, 5	;RP0=0, select bank0
 13844  1B4B  1303               	bcf	status, 6	;RP1=0, select bank0
 13845  1B4C  1618               	bsf	(24),4	;volatile
 13846                           	line	15
 13847                           ;Serial.c: 15: RCSTAbits.SPEN= 1;
 13848  1B4D  1798               	bsf	(24),7	;volatile
 13849                           	line	17
 13850                           	
 13851  1B4E                     l10663:	
 13852                           ;Serial.c: 17: SPBRG = 25;
 13853  1B4E  3019               	movlw	(019h)
 13854  1B4F  1683               	bsf	status, 5	;RP0=1, select bank1
 13855  1B50  1303               	bcf	status, 6	;RP1=0, select bank1
 13856  1B51  0099               	movwf	(153)^080h	;volatile
 13857                           	line	18
 13858                           	
 13859  1B52                     l10665:	
 13860                           ;Serial.c: 18: SPBRGH = 0;
 13861  1B52  019A               	clrf	(154)^080h	;volatile
 13862                           	line	20
 13863                           	
 13864  1B53                     l1081:	
 13865  1B53  0008               	return
 13866                           	opt stack 0
 13867                           GLOBAL	__end_of_USARTinit
 13868  1B54                     	__end_of_USARTinit:
 13869 ;; =============== function _USARTinit ends ============
 13870                           
 13871                           	signat	_USARTinit,88
 13872                           	global	_isrroutine
 13873                           psect	text1192,local,class=CODE,delta=2
 13874                           global __ptext1192
 13875  1706                     __ptext1192:
 13876                           
 13877 ;; *************** function _isrroutine *****************
 13878 ;; Defined at:
 13879 ;;		line 101 in file "main.c"
 13880 ;; Parameters:    Size  Location     Type
 13881 ;;		None
 13882 ;; Auto vars:     Size  Location     Type
 13883 ;;  idx             1   11[COMMON] unsigned char 
 13884 ;; Return value:  Size  Location     Type
 13885 ;;		None               void
 13886 ;; Registers used:
 13887 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 13888 ;; Tracked objects:
 13889 ;;		On entry : 0/0
 13890 ;;		On exit  : 0/0
 13891 ;;		Unchanged: 0/0
 13892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13893 ;;      Params:         0       0       0       0       0
 13894 ;;      Locals:         1       0       0       0       0
 13895 ;;      Temps:         11       0       0       0       0
 13896 ;;      Totals:        12       0       0       0       0
 13897 ;;Total ram usage:       12 bytes
 13898 ;; Hardware stack levels used:    1
 13899 ;; Hardware stack levels required when called:    1
 13900 ;; This function calls:
 13901 ;;		_MoveMotor
 13902 ;; This function is called by:
 13903 ;;		Interrupt level 1
 13904 ;; This function uses a non-reentrant model
 13905 ;;
 13906                           psect	text1192
 13907                           	file	"main.c"
 13908                           	line	101
 13909                           	global	__size_of_isrroutine
 13910  00FA                     	__size_of_isrroutine	equ	__end_of_isrroutine-_isrroutine
 13911                           	
 13912  1706                     _isrroutine:	
 13913                           	opt	stack 1
 13914                           ; Regs used in _isrroutine: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 13915                           psect	intentry,class=CODE,delta=2
 13916                           global __pintentry
 13917  0004                     __pintentry:
 13918                           global interrupt_function
 13919  0004                     interrupt_function:
 13920                           	global saved_w
 13921  007E                     	saved_w	set	btemp+0
 13922  0004  00FE               	movwf	saved_w
 13923  0005  0E03               	swapf	status,w
 13924  0006  00F7               	movwf	(??_isrroutine+7)
 13925  0007  0804               	movf	fsr0,w
 13926  0008  00F8               	movwf	(??_isrroutine+8)
 13927  0009  080A               	movf	pclath,w
 13928  000A  00F9               	movwf	(??_isrroutine+9)
 13929  000B  1283               	bcf	status, 5	;RP0=0, select bank0
 13930  000C  1303               	bcf	status, 6	;RP1=0, select bank0
 13931  000D  087F               	movf	btemp+1,w
 13932  000E  00FA               	movwf	(??_isrroutine+10)
 13933  000F  160A  118A  2F06   	ljmp	_isrroutine
 13934                           psect	text1192
 13935                           	line	104
 13936                           	
 13937  1706                     i1l10841:	
 13938                           ;main.c: 102: unsigned char idx;
 13939                           ;main.c: 104: if (T0IF && T0IE)
 13940  1706  1D0B               	btfss	(90/8),(90)&7
 13941  1707  2F09               	goto	u313_21
 13942  1708  2F0A               	goto	u313_20
 13943  1709                     u313_21:
 13944  1709  2F21               	goto	i1l10857
 13945  170A                     u313_20:
 13946                           	
 13947  170A                     i1l10843:	
 13948  170A  1E8B               	btfss	(93/8),(93)&7
 13949  170B  2F0D               	goto	u314_21
 13950  170C  2F0E               	goto	u314_20
 13951  170D                     u314_21:
 13952  170D  2F21               	goto	i1l10857
 13953  170E                     u314_20:
 13954                           	line	106
 13955                           	
 13956  170E                     i1l10845:	
 13957                           ;main.c: 105: {
 13958                           ;main.c: 106: TMR0 = 06;
 13959  170E  3006               	movlw	(06h)
 13960  170F  0081               	movwf	(1)	;volatile
 13961                           	line	107
 13962                           	
 13963  1710                     i1l10847:	
 13964                           ;main.c: 107: Count4ms++;
 13965  1710  3001               	movlw	(01h)
 13966  1711  00F0               	movwf	(??_isrroutine+0)+0
 13967  1712  0870               	movf	(??_isrroutine+0)+0,w
 13968  1713  07FD               	addwf	(_Count4ms),f
 13969                           	line	108
 13970                           	
 13971  1714                     i1l10849:	
 13972                           ;main.c: 108: if(Count4ms == 25)
 13973  1714  087D               	movf	(_Count4ms),w
 13974  1715  3A19               	xorlw	019h
 13975  1716  1D03               	skipz
 13976  1717  2F19               	goto	u315_21
 13977  1718  2F1A               	goto	u315_20
 13978  1719                     u315_21:
 13979  1719  2F1F               	goto	i1l10855
 13980  171A                     u315_20:
 13981                           	line	110
 13982                           	
 13983  171A                     i1l10851:	
 13984                           ;main.c: 109: {
 13985                           ;main.c: 110: MS100Flag = 1;
 13986  171A  01ED               	clrf	(_MS100Flag)
 13987  171B  1403               	bsf	status,0
 13988  171C  0DED               	rlf	(_MS100Flag),f
 13989                           	line	111
 13990                           	
 13991  171D                     i1l10853:	
 13992                           ;main.c: 111: Count4ms =0;
 13993  171D  01FD               	clrf	(_Count4ms)
 13994  171E  2F1F               	goto	i1l10855
 13995                           	line	112
 13996                           	
 13997  171F                     i1l6749:	
 13998                           	line	113
 13999                           	
 14000  171F                     i1l10855:	
 14001                           ;main.c: 112: }
 14002                           ;main.c: 113: T0IF = 0;
 14003  171F  110B               	bcf	(90/8),(90)&7
 14004  1720  2F21               	goto	i1l10857
 14005                           	line	114
 14006                           	
 14007  1721                     i1l6748:	
 14008                           	line	116
 14009                           	
 14010  1721                     i1l10857:	
 14011                           ;main.c: 114: }
 14012                           ;main.c: 116: if (CCP2IE && CCP2IF)
 14013  1721  1683               	bsf	status, 5	;RP0=1, select bank1
 14014  1722  1303               	bcf	status, 6	;RP1=0, select bank1
 14015  1723  1C0D               	btfss	(1128/8)^080h,(1128)&7
 14016  1724  2F26               	goto	u316_21
 14017  1725  2F27               	goto	u316_20
 14018  1726                     u316_21:
 14019  1726  2FCF               	goto	i1l10891
 14020  1727                     u316_20:
 14021                           	
 14022  1727                     i1l10859:	
 14023  1727  1283               	bcf	status, 5	;RP0=0, select bank0
 14024  1728  1303               	bcf	status, 6	;RP1=0, select bank0
 14025  1729  1C0D               	btfss	(104/8),(104)&7
 14026  172A  2F2C               	goto	u317_21
 14027  172B  2F2D               	goto	u317_20
 14028  172C                     u317_21:
 14029  172C  2FCF               	goto	i1l10891
 14030  172D                     u317_20:
 14031                           	line	118
 14032                           	
 14033  172D                     i1l10861:	
 14034                           ;main.c: 117: {
 14035                           ;main.c: 118: Old_Capture = New_Capture;
 14036  172D  1683               	bsf	status, 5	;RP0=1, select bank1
 14037  172E  1303               	bcf	status, 6	;RP1=0, select bank1
 14038  172F  0866               	movf	(_New_Capture+1)^080h,w
 14039  1730  01E8               	clrf	(_Old_Capture+1)^080h
 14040  1731  07E8               	addwf	(_Old_Capture+1)^080h
 14041  1732  0865               	movf	(_New_Capture)^080h,w
 14042  1733  01E7               	clrf	(_Old_Capture)^080h
 14043  1734  07E7               	addwf	(_Old_Capture)^080h
 14044                           
 14045                           	line	119
 14046                           	
 14047  1735                     i1l10863:	
 14048                           ;main.c: 119: New_Capture = CCPR2L + (unsigned int)(CCPR2H << 8);
 14049  1735  1283               	bcf	status, 5	;RP0=0, select bank0
 14050  1736  1303               	bcf	status, 6	;RP1=0, select bank0
 14051  1737  081C               	movf	(28),w	;volatile
 14052  1738  00F0               	movwf	(??_isrroutine+0)+0
 14053  1739  01F1               	clrf	(??_isrroutine+0)+0+1
 14054  173A  0870               	movf	(??_isrroutine+0)+0,w
 14055  173B  00F1               	movwf	(??_isrroutine+0)+1
 14056  173C  01F0               	clrf	(??_isrroutine+0)+0
 14057  173D  081B               	movf	(27),w	;volatile
 14058  173E  0770               	addwf	0+(??_isrroutine+0)+0,w
 14059  173F  1683               	bsf	status, 5	;RP0=1, select bank1
 14060  1740  1303               	bcf	status, 6	;RP1=0, select bank1
 14061  1741  00E5               	movwf	(_New_Capture)^080h
 14062  1742  0871               	movf	1+(??_isrroutine+0)+0,w
 14063  1743  1803               	skipnc
 14064  1744  0A71               	incf	1+(??_isrroutine+0)+0,w
 14065  1745  00E6               	movwf	((_New_Capture)^080h)+1
 14066                           	line	121
 14067                           	
 14068  1746                     i1l10865:	
 14069                           ;main.c: 121: Cap_Diff1 = New_Capture - Old_Capture;
 14070  1746  0967               	comf	(_Old_Capture)^080h,w
 14071  1747  00F0               	movwf	(??_isrroutine+0)+0
 14072  1748  0968               	comf	(_Old_Capture+1)^080h,w
 14073  1749  00F1               	movwf	((??_isrroutine+0)+0+1)
 14074  174A  0AF0               	incf	(??_isrroutine+0)+0,f
 14075  174B  1903               	skipnz
 14076  174C  0AF1               	incf	((??_isrroutine+0)+0+1),f
 14077  174D  0865               	movf	(_New_Capture)^080h,w
 14078  174E  0770               	addwf	0+(??_isrroutine+0)+0,w
 14079  174F  00DD               	movwf	(_Cap_Diff1)^080h
 14080  1750  0866               	movf	(_New_Capture+1)^080h,w
 14081  1751  1803               	skipnc
 14082  1752  0A66               	incf	(_New_Capture+1)^080h,w
 14083  1753  0771               	addwf	1+(??_isrroutine+0)+0,w
 14084  1754  00DE               	movwf	1+(_Cap_Diff1)^080h
 14085  1755  2F57               	goto	i1l10869
 14086                           	line	122
 14087                           	
 14088  1756                     i1l10867:	
 14089  1756  2F57               	goto	i1l10869
 14090                           	
 14091  1757                     i1l6751:	
 14092                           	line	123
 14093                           	
 14094  1757                     i1l10869:	
 14095                           ;main.c: 123: Cap_Diff[ Capidx ] = Cap_Diff1 ;
 14096  1757  087C               	movf	(_Capidx),w
 14097  1758  00F0               	movwf	(??_isrroutine+0)+0
 14098  1759  0770               	addwf	(??_isrroutine+0)+0,w
 14099  175A  3E90               	addlw	_Cap_Diff&0ffh
 14100  175B  0084               	movwf	fsr0
 14101  175C  085D               	movf	(_Cap_Diff1)^080h,w
 14102  175D  1783               	bsf	status, 7	;select IRP bank3
 14103  175E  0080               	movwf	indf
 14104  175F  0A84               	incf	fsr0,f
 14105  1760  085E               	movf	(_Cap_Diff1+1)^080h,w
 14106  1761  0080               	movwf	indf
 14107                           	line	124
 14108                           	
 14109  1762                     i1l10871:	
 14110                           ;main.c: 124: if(Capidx < 7)Capidx++;
 14111  1762  3007               	movlw	(07h)
 14112  1763  027C               	subwf	(_Capidx),w
 14113  1764  1803               	skipnc
 14114  1765  2F67               	goto	u318_21
 14115  1766  2F68               	goto	u318_20
 14116  1767                     u318_21:
 14117  1767  2F6D               	goto	i1l6752
 14118  1768                     u318_20:
 14119                           	
 14120  1768                     i1l10873:	
 14121  1768  3001               	movlw	(01h)
 14122  1769  00F0               	movwf	(??_isrroutine+0)+0
 14123  176A  0870               	movf	(??_isrroutine+0)+0,w
 14124  176B  07FC               	addwf	(_Capidx),f
 14125  176C  2F6F               	goto	i1l10875
 14126                           	line	125
 14127                           	
 14128  176D                     i1l6752:	
 14129                           ;main.c: 125: else Capidx = 0;
 14130  176D  01FC               	clrf	(_Capidx)
 14131  176E  2F6F               	goto	i1l10875
 14132                           	
 14133  176F                     i1l6753:	
 14134                           	line	127
 14135                           	
 14136  176F                     i1l10875:	
 14137                           ;main.c: 127: Tacho_Reading = 0 ;
 14138  176F  3000               	movlw	0
 14139  1770  00C7               	movwf	(_Tacho_Reading+3)^080h
 14140  1771  3000               	movlw	0
 14141  1772  00C6               	movwf	(_Tacho_Reading+2)^080h
 14142  1773  3000               	movlw	0
 14143  1774  00C5               	movwf	(_Tacho_Reading+1)^080h
 14144  1775  3000               	movlw	0
 14145  1776  00C4               	movwf	(_Tacho_Reading)^080h
 14146                           
 14147                           	line	128
 14148                           	
 14149  1777                     i1l10877:	
 14150                           ;main.c: 128: for( idx = 0 ; idx < 8 ; idx++ )
 14151  1777  01FB               	clrf	(isrroutine@idx)
 14152  1778  3008               	movlw	(08h)
 14153  1779  027B               	subwf	(isrroutine@idx),w
 14154  177A  1C03               	skipc
 14155  177B  2F7D               	goto	u319_21
 14156  177C  2F7E               	goto	u319_20
 14157  177D                     u319_21:
 14158  177D  2F80               	goto	i1l10881
 14159  177E                     u319_20:
 14160  177E  2FB2               	goto	i1l10887
 14161                           	
 14162  177F                     i1l10879:	
 14163  177F  2FB2               	goto	i1l10887
 14164                           	line	129
 14165                           	
 14166  1780                     i1l6754:	
 14167                           	line	130
 14168                           	
 14169  1780                     i1l10881:	
 14170                           ;main.c: 129: {
 14171                           ;main.c: 130: Tacho_Reading += Cap_Diff[idx];
 14172  1780  087B               	movf	(isrroutine@idx),w
 14173  1781  00F0               	movwf	(??_isrroutine+0)+0
 14174  1782  0770               	addwf	(??_isrroutine+0)+0,w
 14175  1783  3E90               	addlw	_Cap_Diff&0ffh
 14176  1784  0084               	movwf	fsr0
 14177  1785  0800               	movf	indf,w
 14178  1786  00F1               	movwf	(??_isrroutine+1)+0+0
 14179  1787  0A84               	incf	fsr0,f
 14180  1788  0800               	movf	indf,w
 14181  1789  00F2               	movwf	(??_isrroutine+1)+0+1
 14182  178A  0871               	movf	0+(??_isrroutine+1)+0,w
 14183  178B  00F3               	movwf	((??_isrroutine+3)+0)
 14184  178C  0872               	movf	1+(??_isrroutine+1)+0,w
 14185  178D  00F4               	movwf	((??_isrroutine+3)+0+1)
 14186  178E  01F5               	clrf	((??_isrroutine+3)+0+2)
 14187  178F  01F6               	clrf	((??_isrroutine+3)+0+3)
 14188  1790  0873               	movf	0+(??_isrroutine+3)+0,w
 14189  1791  07C4               	addwf	(_Tacho_Reading)^080h,f
 14190  1792  0874               	movf	1+(??_isrroutine+3)+0,w
 14191  1793  1103               	clrz
 14192  1794  1803               	skipnc
 14193  1795  3E01               	addlw	1
 14194  1796  1903               	skipnz
 14195  1797  2F99               	goto	u320_21
 14196  1798  07C5               	addwf	(_Tacho_Reading+1)^080h,f
 14197  1799                     u320_21:
 14198  1799  0875               	movf	2+(??_isrroutine+3)+0,w
 14199  179A  1103               	clrz
 14200  179B  1803               	skipnc
 14201  179C  3E01               	addlw	1
 14202  179D  1903               	skipnz
 14203  179E  2FA0               	goto	u320_22
 14204  179F  07C6               	addwf	(_Tacho_Reading+2)^080h,f
 14205  17A0                     u320_22:
 14206  17A0  0876               	movf	3+(??_isrroutine+3)+0,w
 14207  17A1  1103               	clrz
 14208  17A2  1803               	skipnc
 14209  17A3  3E01               	addlw	1
 14210  17A4  1903               	skipnz
 14211  17A5  2FA7               	goto	u320_23
 14212  17A6  07C7               	addwf	(_Tacho_Reading+3)^080h,f
 14213  17A7                     u320_23:
 14214                           
 14215                           	line	128
 14216                           	
 14217  17A7                     i1l10883:	
 14218  17A7  3001               	movlw	(01h)
 14219  17A8  00F0               	movwf	(??_isrroutine+0)+0
 14220  17A9  0870               	movf	(??_isrroutine+0)+0,w
 14221  17AA  07FB               	addwf	(isrroutine@idx),f
 14222                           	
 14223  17AB                     i1l10885:	
 14224  17AB  3008               	movlw	(08h)
 14225  17AC  027B               	subwf	(isrroutine@idx),w
 14226  17AD  1C03               	skipc
 14227  17AE  2FB0               	goto	u321_21
 14228  17AF  2FB1               	goto	u321_20
 14229  17B0                     u321_21:
 14230  17B0  2F80               	goto	i1l10881
 14231  17B1                     u321_20:
 14232  17B1  2FB2               	goto	i1l10887
 14233                           	
 14234  17B2                     i1l6755:	
 14235                           	line	133
 14236                           	
 14237  17B2                     i1l10887:	
 14238                           ;main.c: 131: }
 14239                           ;main.c: 133: Tacho_Reading = Tacho_Reading >> 3 ;
 14240  17B2  0844               	movf	(_Tacho_Reading)^080h,w
 14241  17B3  00F0               	movwf	(??_isrroutine+0)+0
 14242  17B4  0845               	movf	(_Tacho_Reading+1)^080h,w
 14243  17B5  00F1               	movwf	((??_isrroutine+0)+0+1)
 14244  17B6  0846               	movf	(_Tacho_Reading+2)^080h,w
 14245  17B7  00F2               	movwf	((??_isrroutine+0)+0+2)
 14246  17B8  0847               	movf	(_Tacho_Reading+3)^080h,w
 14247  17B9  00F3               	movwf	((??_isrroutine+0)+0+3)
 14248  17BA  3003               	movlw	03h
 14249  17BB  00F4               	movwf	(??_isrroutine+4)+0
 14250  17BC                     u322_25:
 14251  17BC  0D73               	rlf	(??_isrroutine+0)+3,w
 14252  17BD  0CF3               	rrf	(??_isrroutine+0)+3,f
 14253  17BE  0CF2               	rrf	(??_isrroutine+0)+2,f
 14254  17BF  0CF1               	rrf	(??_isrroutine+0)+1,f
 14255  17C0  0CF0               	rrf	(??_isrroutine+0)+0,f
 14256  17C1                     u322_20:
 14257  17C1  0BF4               	decfsz	(??_isrroutine+4)+0,f
 14258  17C2  2FBC               	goto	u322_25
 14259  17C3  0873               	movf	3+(??_isrroutine+0)+0,w
 14260  17C4  00C7               	movwf	(_Tacho_Reading+3)^080h
 14261  17C5  0872               	movf	2+(??_isrroutine+0)+0,w
 14262  17C6  00C6               	movwf	(_Tacho_Reading+2)^080h
 14263  17C7  0871               	movf	1+(??_isrroutine+0)+0,w
 14264  17C8  00C5               	movwf	(_Tacho_Reading+1)^080h
 14265  17C9  0870               	movf	0+(??_isrroutine+0)+0,w
 14266  17CA  00C4               	movwf	(_Tacho_Reading)^080h
 14267                           
 14268                           	line	135
 14269                           	
 14270  17CB                     i1l10889:	
 14271                           ;main.c: 135: CCP2IF = 0;
 14272  17CB  1283               	bcf	status, 5	;RP0=0, select bank0
 14273  17CC  1303               	bcf	status, 6	;RP1=0, select bank0
 14274  17CD  100D               	bcf	(104/8),(104)&7
 14275  17CE  2FCF               	goto	i1l10891
 14276                           	line	136
 14277                           	
 14278  17CF                     i1l6750:	
 14279                           	line	138
 14280                           	
 14281  17CF                     i1l10891:	
 14282                           ;main.c: 136: }
 14283                           ;main.c: 138: if (TMR2IF && TMR2IE)
 14284  17CF  1283               	bcf	status, 5	;RP0=0, select bank0
 14285  17D0  1C8C               	btfss	(97/8),(97)&7
 14286  17D1  2FD3               	goto	u323_21
 14287  17D2  2FD4               	goto	u323_20
 14288  17D3                     u323_21:
 14289  17D3  2FF4               	goto	i1l6758
 14290  17D4                     u323_20:
 14291                           	
 14292  17D4                     i1l10893:	
 14293  17D4  1683               	bsf	status, 5	;RP0=1, select bank1
 14294  17D5  1303               	bcf	status, 6	;RP1=0, select bank1
 14295  17D6  1C8C               	btfss	(1121/8)^080h,(1121)&7
 14296  17D7  2FD9               	goto	u324_21
 14297  17D8  2FDA               	goto	u324_20
 14298  17D9                     u324_21:
 14299  17D9  2FF4               	goto	i1l6758
 14300  17DA                     u324_20:
 14301                           	line	140
 14302                           	
 14303  17DA                     i1l10895:	
 14304                           ;main.c: 139: {
 14305                           ;main.c: 140: TMR2IF = 0;
 14306  17DA  1283               	bcf	status, 5	;RP0=0, select bank0
 14307  17DB  1303               	bcf	status, 6	;RP1=0, select bank0
 14308  17DC  108C               	bcf	(97/8),(97)&7
 14309                           	line	142
 14310                           	
 14311  17DD                     i1l10897:	
 14312                           ;main.c: 142: TMR2 = 0;
 14313  17DD  0191               	clrf	(17)	;volatile
 14314                           	line	144
 14315                           	
 14316  17DE                     i1l10899:	
 14317                           ;main.c: 144: MoveMotor();
 14318  17DE  160A  158A  243B   	fcall	_MoveMotor
              160A  118A         
 14319                           	line	145
 14320                           	
 14321  17E3                     i1l10901:	
 14322                           ;main.c: 145: TMR2IE = 1;
 14323  17E3  1683               	bsf	status, 5	;RP0=1, select bank1
 14324  17E4  1303               	bcf	status, 6	;RP1=0, select bank1
 14325  17E5  148C               	bsf	(1121/8)^080h,(1121)&7
 14326                           	line	146
 14327                           	
 14328  17E6                     i1l10903:	
 14329                           ;main.c: 146: if(MotionComplete == 1)
 14330  17E6  1283               	bcf	status, 5	;RP0=0, select bank0
 14331  17E7  1303               	bcf	status, 6	;RP1=0, select bank0
 14332  17E8  086E               	movf	(_MotionComplete),w
 14333  17E9  3A01               	xorlw	01h
 14334  17EA  1D03               	skipz
 14335  17EB  2FED               	goto	u325_21
 14336  17EC  2FEE               	goto	u325_20
 14337  17ED                     u325_21:
 14338  17ED  2FF2               	goto	i1l10911
 14339  17EE                     u325_20:
 14340                           	line	148
 14341                           	
 14342  17EE                     i1l10905:	
 14343                           ;main.c: 147: {
 14344                           ;main.c: 148: PORTBbits.RB3 = 0;
 14345  17EE  1186               	bcf	(6),3	;volatile
 14346                           	line	149
 14347                           	
 14348  17EF                     i1l10907:	
 14349                           ;main.c: 149: TMR2 = 0x00;
 14350  17EF  0191               	clrf	(17)	;volatile
 14351                           	line	150
 14352                           	
 14353  17F0                     i1l10909:	
 14354                           ;main.c: 150: TMR2ON = 0;
 14355  17F0  1112               	bcf	(146/8),(146)&7
 14356  17F1  2FF2               	goto	i1l10911
 14357                           	line	151
 14358                           	
 14359  17F2                     i1l6757:	
 14360                           	line	152
 14361                           	
 14362  17F2                     i1l10911:	
 14363                           ;main.c: 151: }
 14364                           ;main.c: 152: TMR2IF = 0;
 14365  17F2  108C               	bcf	(97/8),(97)&7
 14366  17F3  2FF4               	goto	i1l6758
 14367                           	line	153
 14368                           	
 14369  17F4                     i1l6756:	
 14370                           	line	154
 14371                           	
 14372  17F4                     i1l6758:	
 14373  17F4  087A               	movf	(??_isrroutine+10),w
 14374  17F5  1283               	bcf	status, 5	;RP0=0, select bank0
 14375  17F6  00FF               	movwf	btemp+1
 14376  17F7  0879               	movf	(??_isrroutine+9),w
 14377  17F8  008A               	movwf	pclath
 14378  17F9  0878               	movf	(??_isrroutine+8),w
 14379  17FA  0084               	movwf	fsr0
 14380  17FB  0E77               	swapf	(??_isrroutine+7)^0FFFFFF80h,w
 14381  17FC  0083               	movwf	status
 14382  17FD  0EFE               	swapf	saved_w,f
 14383  17FE  0E7E               	swapf	saved_w,w
 14384  17FF  0009               	retfie
 14385                           	opt stack 0
 14386                           GLOBAL	__end_of_isrroutine
 14387  1800                     	__end_of_isrroutine:
 14388 ;; =============== function _isrroutine ends ============
 14389                           
 14390                           	signat	_isrroutine,88
 14391                           	global	_MoveMotor
 14392                           psect	text1193,local,class=CODE,delta=2
 14393                           global __ptext1193
 14394  1C3B                     __ptext1193:
 14395                           
 14396 ;; *************** function _MoveMotor *****************
 14397 ;; Defined at:
 14398 ;;		line 86 in file "Motor.c"
 14399 ;; Parameters:    Size  Location     Type
 14400 ;;		None
 14401 ;; Auto vars:     Size  Location     Type
 14402 ;;		None
 14403 ;; Return value:  Size  Location     Type
 14404 ;;                  1    wreg      unsigned char 
 14405 ;; Registers used:
 14406 ;;		wreg, status,2, status,0
 14407 ;; Tracked objects:
 14408 ;;		On entry : 0/0
 14409 ;;		On exit  : 0/0
 14410 ;;		Unchanged: 0/0
 14411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 14412 ;;      Params:         0       0       0       0       0
 14413 ;;      Locals:         0       0       0       0       0
 14414 ;;      Temps:          0       0       0       0       0
 14415 ;;      Totals:         0       0       0       0       0
 14416 ;;Total ram usage:        0 bytes
 14417 ;; Hardware stack levels used:    1
 14418 ;; This function calls:
 14419 ;;		Nothing
 14420 ;; This function is called by:
 14421 ;;		_isrroutine
 14422 ;; This function uses a non-reentrant model
 14423 ;;
 14424                           psect	text1193
 14425                           	file	"Motor.c"
 14426                           	line	86
 14427                           	global	__size_of_MoveMotor
 14428  0030                     	__size_of_MoveMotor	equ	__end_of_MoveMotor-_MoveMotor
 14429                           	
 14430  1C3B                     _MoveMotor:	
 14431                           	opt	stack 1
 14432                           ; Regs used in _MoveMotor: [wreg+status,2+status,0]
 14433                           	line	104
 14434                           	
 14435  1C3B                     i1l10825:	
 14436                           ;Motor.c: 104: if((CurNoStep != 0))
 14437  1C3B  1683               	bsf	status, 5	;RP0=1, select bank1
 14438  1C3C  1303               	bcf	status, 6	;RP1=0, select bank1
 14439  1C3D  0860               	movf	(_CurNoStep+1)^080h,w
 14440  1C3E  045F               	iorwf	(_CurNoStep)^080h,w
 14441  1C3F  1903               	skipnz
 14442  1C40  2C42               	goto	u310_21
 14443  1C41  2C43               	goto	u310_20
 14444  1C42                     u310_21:
 14445  1C42  2C6A               	goto	i1l5617
 14446  1C43                     u310_20:
 14447                           	line	106
 14448                           	
 14449  1C43                     i1l10827:	
 14450                           ;Motor.c: 105: {
 14451                           ;Motor.c: 106: if(flg) {flg = 0; PORTBbits.RB3 = 0;}
 14452  1C43  086F               	movf	(_flg)^080h,w
 14453  1C44  1D03               	skipz
 14454  1C45  2C47               	goto	u311_20
 14455  1C46  2C4C               	goto	i1l10831
 14456  1C47                     u311_20:
 14457                           	
 14458  1C47                     i1l10829:	
 14459  1C47  01EF               	clrf	(_flg)^080h
 14460  1C48  1283               	bcf	status, 5	;RP0=0, select bank0
 14461  1C49  1303               	bcf	status, 6	;RP1=0, select bank0
 14462  1C4A  1186               	bcf	(6),3	;volatile
 14463  1C4B  2C55               	goto	i1l10835
 14464                           	line	107
 14465                           	
 14466  1C4C                     i1l5614:	
 14467                           	
 14468  1C4C                     i1l10831:	
 14469                           ;Motor.c: 107: else {flg = 1; PORTBbits.RB3 = 1;}
 14470  1C4C  1683               	bsf	status, 5	;RP0=1, select bank1
 14471  1C4D  1303               	bcf	status, 6	;RP1=0, select bank1
 14472  1C4E  01EF               	clrf	(_flg)^080h
 14473  1C4F  1403               	bsf	status,0
 14474  1C50  0DEF               	rlf	(_flg)^080h,f
 14475                           	
 14476  1C51                     i1l10833:	
 14477  1C51  1283               	bcf	status, 5	;RP0=0, select bank0
 14478  1C52  1303               	bcf	status, 6	;RP1=0, select bank0
 14479  1C53  1586               	bsf	(6),3	;volatile
 14480  1C54  2C55               	goto	i1l10835
 14481                           	
 14482  1C55                     i1l5615:	
 14483                           	line	108
 14484                           	
 14485  1C55                     i1l10835:	
 14486                           ;Motor.c: 108: CurNoStep--;
 14487  1C55  3001               	movlw	low(01h)
 14488  1C56  1683               	bsf	status, 5	;RP0=1, select bank1
 14489  1C57  1303               	bcf	status, 6	;RP1=0, select bank1
 14490  1C58  02DF               	subwf	(_CurNoStep)^080h,f
 14491  1C59  3000               	movlw	high(01h)
 14492  1C5A  1C03               	skipc
 14493  1C5B  03E0               	decf	(_CurNoStep+1)^080h,f
 14494  1C5C  02E0               	subwf	(_CurNoStep+1)^080h,f
 14495                           	line	109
 14496                           	
 14497  1C5D                     i1l10837:	
 14498                           ;Motor.c: 109: if(CurNoStep == 0) MotionComplete = 1;
 14499  1C5D  0860               	movf	((_CurNoStep+1)^080h),w
 14500  1C5E  045F               	iorwf	((_CurNoStep)^080h),w
 14501  1C5F  1D03               	skipz
 14502  1C60  2C62               	goto	u312_21
 14503  1C61  2C63               	goto	u312_20
 14504  1C62                     u312_21:
 14505  1C62  2C6A               	goto	i1l5617
 14506  1C63                     u312_20:
 14507                           	
 14508  1C63                     i1l10839:	
 14509  1C63  1283               	bcf	status, 5	;RP0=0, select bank0
 14510  1C64  1303               	bcf	status, 6	;RP1=0, select bank0
 14511  1C65  01EE               	clrf	(_MotionComplete)
 14512  1C66  1403               	bsf	status,0
 14513  1C67  0DEE               	rlf	(_MotionComplete),f
 14514  1C68  2C6A               	goto	i1l5617
 14515                           	
 14516  1C69                     i1l5616:	
 14517  1C69  2C6A               	goto	i1l5617
 14518                           	line	110
 14519                           	
 14520  1C6A                     i1l5613:	
 14521                           	line	111
 14522                           	
 14523  1C6A                     i1l5617:	
 14524  1C6A  0008               	return
 14525                           	opt stack 0
 14526                           GLOBAL	__end_of_MoveMotor
 14527  1C6B                     	__end_of_MoveMotor:
 14528 ;; =============== function _MoveMotor ends ============
 14529                           
 14530                           	signat	_MoveMotor,89
 14531                           psect	text1194,local,class=CODE,delta=2
 14532                           global __ptext1194
 14533  0000                     __ptext1194:
 14534                           	global	btemp
 14535  007E                     	btemp set 07Eh
 14536                           
 14537                           	DABS	1,126,2	;btemp
 14538                           	global	wtemp0
 14539  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Tue Feb 03 15:19:26 2015

                        _e 00E9                          _u 00D5                          pc 0002  
                       _GO 00F9                         _RD 0C60                         _e0 00CF  
                       _e1 00D2                         _e2 01AF                         _WR 0C61  
                       _Pb 01CB                         _k1 01B2                         _k2 01B5  
                       _k3 01B8                         _Td 01AC                         _Ti 01A8  
                       _u1 00D8                         _kc 0065                         _kd 01BB  
                       _ki 01BE                         fsr 0004               ___ftadd@exp1 0052  
             ___ftadd@exp2 0051               ___ftadd@sign 0050                        _GIE 005F  
              _Calc_PID_op 0015                        _PR2 0092                        _PSA 040B  
                      _Rpm 0061                        _flg 00EF            ?_USARTGetString 0070  
                      fsr0 0004                        indf 0000               ?_getrangeval 0070  
        Calc_SetPoint@temp 0049                ReadEEP@addr 002B       __size_of_Writeeeprom 01BF  
             ___ftdiv@cntr 0040               ___ftdiv@sign 0045                       l1100 1509  
                     l1101 14B9                       l1110 1B59                       l1102 1508  
                     l1111 1B5F                       l1103 1514                       l1112 1B6C  
                     l1104 1525                       l1120 1D91                       l1105 1547  
                     l1121 1D99                       l1106 1547                       l1130 12BB  
                     l1115 1D83                       l1131 12E3                       l1140 083A  
                     l1116 1D65                       l1132 12EC                       l1124 066E  
                     l1109 1B59                       l1141 084D                       l1117 1D78  
                     l1142 0860                       l1135 08C7                       l1143 0873  
                     l1119 1D90                       l1127 12AF                       l1144 0886  
                     l1136 0801                       l1152 1E2B                       l1128 1249  
                     l1160 09EF                       l1081 1B53                       l1137 08EC  
                     l1145 0899                       l1129 12AA                       l1161 0AF4  
                     l1146 089A                       l1138 0814                       l1154 1E27  
                     l1090 1BA7                       l1170 0A9F                       l1162 0A08  
                     l1147 08AD                       l1139 0827                       l1155 1E2E  
                     l1091 1B94                       l1171 0AB6                       l1163 0A20  
                     l1084 1004                       l1148 08C0                       l1156 1E2E  
                     l1092 1BB4                       l2300 0365                       l1172 0AF9  
                     l1164 0A38                       l1180 142A                       l1085 1004  
                     l1149 08EC                       l1093 1BB4                       l2301 038C  
                     l1165 0A50                       l1181 147B                       l1086 100B  
                     l2310 04D7                       l2302 03B3                       l1166 0A68  
                     l1182 145B                       l1087 100F                       l2311 04D7  
                     l2303 03DA                       l1159 0ACF                       l1167 0A80  
                     l1183 147A                       l1175 13CB                       l2304 0401  
                     l1168 0A98                       l1176 13E2                       l2305 0402  
                     l1169 0A9E                       l1177 141C                       l1098 14B1  
                     l2306 0429                       l1178 147C                       l1099 14B8  
                     l2307 0445                       l1179 147C                       l2308 046C  
                     l2309 04CA                       l2270 1DAE                       l2271 1DDA  
                     l2264 1B7B                       l2280 1BFB                       l2272 1DE3  
                     l2265 1B7B                       l2281 1BFB                       l3401 0D34  
                     l2266 1B80                       l2282 1BFF                       l3410 156D  
                     l2267 1B8F                       l2283 1C0A                       l2291 1D09  
                     l2275 0793                       l3411 1617                       l2284 1C0D  
                     l2292 1D0A                       l2276 0797                       l3404 09B0  
                     l3420 0122                       l3412 1599                       l2285 1C0D  
                     l2293 1D0C                       l2277 07F6                       l3405 09C8  
                     l3421 01CE                       l3413 15CB                       l3406 09ED  
                     l3422 0238                       l3414 1617                       l3423 029E  
                     l2288 1CFD                       l2296 0494                       l3424 02A5  
                     l2289 1CDE                       l2297 031A                       l3425 02E9  
                     l3417 00DD                       l3409 160A                       l2298 04B9  
                     l3426 0318                       l3418 00E4                       l2299 033E  
                     l3419 0102                       l4510 1AB9                       l4513 1AE8  
                     l4522 1F82                       l4507 1ADA                       l4516 1B16  
                     l3398 0FFF                       l4519 1AC2                       l5600 1B28  
                     l5601 1B29                       l5610 1C9C                       l5604 1ACC  
                     l8030 1F9A                       l5607 1AF6                       l8031 1FAE  
                     l8032 1FC5                       l8033 1FAF                       l8025 1F99  
                     l8034 1FCC                       l8035 1FD8                       l8027 1F91  
                     l8036 1FCD                       l8028 1FFF                       l8037 1FDC  
                     l8029 1FA7                       l8038 1FE6                       l8039 1FFF  
                     l6720 1D1F                       _ADIF 0066                       l6721 1D4F  
                     l6730 0B5A                       l6731 0B62                       l6740 0BE5  
                     l6732 0B8E                       l6724 0B11                       l6741 0C01  
                     l6733 0B77                       l6725 0B0B                       l6718 1D1B  
                     l6742 0C00                       l6734 0B95                       l6726 0B17  
                     l6719 1D1B                       l5599 1B24                       l6743 0C02  
                     l6735 0BA8                       l6727 0B32                       l6744 0C03  
                     l6736 0BE4                       l6728 0B76                       l6745 0C03  
                     l6737 0BC9                       l6729 0B5B                       l7810 1173  
                     l7802 110B                       l6738 0BC8                       l7811 1167  
                     l7803 1193                       l6739 0BD0                       l7812 1179  
                     l7804 1156                       l7740 0E7A                       l7813 118A  
                     l7805 1142                       l7741 0D81                       l7806 1143  
                     l7750 0DBE                       l7830 1BE0                       l7807 1155  
                     l7751 0DCC                       l7743 0D80                       l7808 117A  
                     l7760 0E03                       l7752 0DBF                       l7744 0D8A  
                     l7809 1166                       l7761 0DF6                       l7753 0DD3  
                     l7745 0D8F                       l7737 0D6C                       l7770 1052  
                     l7762 0E0A                       l7746 0DD4                       l7754 0E0B  
                     l7930 1CB2                       l7771 105B                       l7763 0E20  
                     l7755 0E0B                       l7747 0DA4                       l7739 0D64  
                     l7931 1CA4                       l7860 1E5B                       l7764 0E35  
                     l7756 0DDB                       l7932 1CB9                       _ADON 00F8  
                     l7861 1E85                       l7765 0E5E                       l7749 0DBD  
                     l7781 1308                       l7829 1BC5                       l7933 1CD2  
                     l7862 1E9C                       l7870 1EF2                       l7758 0DF4  
                     l7782 13B4                       l7871 1F02                       l7759 0DF5  
                     l7783 1321                       l7791 1633                       l7768 101B  
                     l7856 1B03                       l7872 1F0C                       l7880 10A1  
                     l7784 1367                       l7792 1705                       l7769 1037  
                     l7857 1B04                       l7865 1F03                       l7881 10A2  
                     l7785 1389                       l7793 164C                       l7866 1EC1  
                     l7882 10C3                       l7890 1222                       l7786 1398  
                     l7794 168C                       l7867 1EB3                       l7883 10D3  
                     l7875 1072                       l7891 11E0                       l7795 16A1  
                     l7868 1EC6                       l7884 10E4                       l7876 1082  
                     l7892 11D2                       l7796 16B8                       l7869 1EC7  
                     l7885 10ED                       l7877 10D4                       l7893 11E5  
                     l7797 16BD                       l7878 109C                       l7894 11E6  
                     l7798 16D2                       l7879 108E                       l7895 1211  
                     l7799 16E9                       l7896 1221                       l7888 11AA  
                     l7897 1232                       l7889 11BE                       l7898 123B  
                     _EEIF 006C                       _T0IE 005D                       _T0IF 005A  
                     _T0CS 040D                       u3000 100A                       u3001 1009  
                     u3010 1B5E                       u3011 1B5D                       _T0SE 040C  
                     u3020 1E06                       u3021 1E05                       u3030 1E26  
                     u3031 1E25                       u3040 1B7F                       u4000 1260  
                     u3025 1E02                       u3041 1B7E                       u4001 125F  
                     u3050 1BFF                       u3035 1E22                       u3051 1BFE  
                     u4011 129B                       u3060 1C05                       u4020 12BA  
                     u4012 12A2                       u3061 1C04                       u4021 12B9  
                     u4013 12A9                       u3070 1D1F                       u3310 1FCB  
                     u4030 12C3                       u4110 0D53                       u3071 1D1E  
                     u3311 1FCA                       u4031 12C2                       u4040 1DAC  
                     u4120 0D59                       u3305 1FBE                       u4041 1DAB  
                     u4105 1C73                       u4121 0D58                       u3090 1B1F  
                     u3330 1FDC                       u3410 1051                       u4210 0DB4  
                     u4130 0D63                       u3091 1B1E                       u3331 1FDB  
                     u3411 1050                       u4211 0DB3                       u4131 0D62  
                     u3340 1FE0                       u3260 1F89                       u3500 1178  
                     u3420 1101                       u4060 1DD9                       u4300 0E09  
                     u4220 0DBC                       u4140 0D70                       u3085 1D2F  
                     u3341 1FDF                       u3325 1FD0                       u3405 1041  
                     u3501 1177                       u3421 1100                       u4061 1DD8  
                     u4301 0E08                       u4221 0DBB                       u4205 0DA5  
                     u3350 1FF1                       u3270 1F90                       u3510 117E  
                     u3430 1116                       u4310 0E0F                       u4150 0D76  
                     u3271 1F8F                       u4055 1DB0                       u4311 0E0E  
                     u4151 0D75                       _PIE1 008C                       u3360 1FFE  
                     u3440 1131                       u4080 1D03                       u4320 0E24  
                     u4240 0DD2                       u4160 0D80                       u4400 137D  
                     u3441 1130                       u4081 1D02                       u4321 0E23  
                     u4241 0DD1                       u4161 0D7F                       u4401 137C  
                     u3290 1FAD                       u3370 101F                       u3450 1138  
                     u3530 1B00                       u3610 1EC5                       u4090 1D08  
                     u4250 0DDA                       u4170 0D89                       u3355 1FED  
                     u3291 1FAC                       u3371 101E                       u3451 1137  
                     u3435 1112                       u3531 1AFF                       u3611 1EC4  
                     u4091 1D07                       u4075 1CF0                       u4331 0E3F  
                     u4251 0DD9                       u4235 0DC0                       u4171 0D88  
                     u3540 1E35                       u3700 10A0                       u4340 0E4A  
                     u4332 0E46                       u4180 0D8E                       u4420 1397  
                     u3285 1F9F                       u3381 1028                       u3541 1E34  
                     u3605 1EB5                       u3701 109F                       u4341 0E49  
                     u4181 0D8D                       u4421 1396                       u4405 1379  
                     u3382 102F                       u3470 1154                       u3630 1EE2  
                     u3710 10B4                       u4270 0DEB                       u4190 0DA3  
                     u4350 1300                       u4510 16B7                       u4430 162B  
                     u3383 1036                       u3471 1153                       u3551 1E4D  
                     u3631 1EE1                       u3711 10B3                       u4271 0DEA  
                     u4191 0DA2                       u4415 138A                       u4351 12FF  
                     u4511 16B6                       u4431 162A                       u3480 115C  
                     u3560 1E5F                       u3552 1E4E                       u4280 0DF3  
                     u4360 1319                       u4520 16C1                       u4440 1644  
                     u4600 0791                       u3481 115B                       u3465 1144  
                     u3561 1E5E                       u3553 1E53                       u3625 1EC9  
                     u4281 0DF2                       u4265 0DDC                       u4361 1318  
                     u4521 16C0                       u4505 16AA                       u4441 1643  
                     u4601 0790                       u3554 1E54                       u3650 1F01  
                     u3730 10D2                       u3810 1201                       u4370 1337  
                     u4450 165C                       u4610 04BD                       u3395 1039  
                     u3571 1E77                       u3651 1F00                       u3635 1EDE  
                     u3731 10D1                       u3715 10B0                       u3811 1200  
                     u4531 16CA                       _PEIE 005E                       u3580 1E97  
                     u3572 1E78                       u3740 10D8                       u3660 1063  
                     u3900 1487                       u4380 1349                       u4532 16D1  
                     u4460 166E                       u4620 0C57                       u4700 0177  
                     u3581 1E96                       u3573 1E7D                       u3645 1EF3  
                     u3725 10C4                       u3661 1062                       u3805 11E8  
                     u4621 0C58                       u4701 0176                       u3574 1E7E  
                     u3590 1EAF                       u3670 1076                       u3830 1220  
                     u3750 119B                       u3910 149D                       u4470 1690  
                     u4622 0C5D                       u4710 0204                       u3495 1169  
                     u3591 1EAE                       u3671 1075                       u3831 121F  
                     u3815 11FD                       u3751 119A                       u3911 149C  
                     u4295 0DF7                       u4375 1333                       u4471 168F  
                     u4455 1658                       u4631 0CB1                       u4623 0C5E  
                     u4711 0203                       u3680 108A                       u3840 1226  
                     u3760 11AE                       u3920 1506                       u4560 16E8  
                     u4632 0CBC                       u4640 0982                       u4720 0290  
                     u4800 0B30                       u3585 1E93                       u3681 1089  
                     u3825 1212                       u3761 11AD                       u3921 1505  
                     u4385 1345                       u4561 16E7                       u4545 16D3  
                     u4481 1699                       u4465 166A                       u4633 0CC7  
                     u4641 0981                       u4721 028F                       u4801 0B2F  
                     u3770 11CE                       u3930 1513                       u4482 16A0  
                     u4570 1BBC                       u4650 09AA                       u4730 02E6  
                     u4810 0B61                       u3771 11CD                       u3931 1512  
                     u4395 1368                       u4555 16DB                       u4571 1BBB  
                     u4651 09A9                       u4731 02E5                       _RCIE 0465  
                     u3940 1523                       u4660 09C2                       u4740 13C9  
                     u4820 0B75                       _RCEN 048B                       _RCIF 0065  
                     u3941 1522                       u4661 09C1                       u4645 097E  
                     u4741 13C8                       u4821 0B74                       u4805 0B2C  
                     u3790 11E4                       u3950 1546                       u4590 1CB8  
                     u4670 0029                       u4750 13E1                       u4830 0B94  
                     u3695 1090                       u3791 11E3                       u3951 1545  
                     u4495 16A2                       u4591 1CB7                       u4655 09A6  
                     u4671 0028                       u4751 13E0                       u3960 1D6B  
                     u4680 00F9                       u4760 140D                       u4840 0BA6  
                     u3785 11D4                       u3945 151F                       u3961 1D6A  
                     u4585 1CA5                       u4665 09BE                       u4681 00F8  
                     u4761 140C                       u4841 0BA5                       u4825 0B71  
                     u3890 1BB3                       u3970 1D89                       u4690 0119  
                     u4770 1424                       u4850 0BCF                       u3891 1BB2  
                     u3955 1542                       u3971 1D88                       u4691 0118  
                     u4675 0025                       u4771 1423                       u3980 1D8F  
                     u4780 144C                       u4860 0BE3                       u3981 1D8E  
                     u4781 144B                       u4861 0BE2                       u4845 0BA2  
                     u3990 1255                       u4870 0BEB                       u4790 0B17  
                     u3991 1254                       u4791 0B16                       u4880 0BFA  
                     u4881 0BF9                       u4865 0BDF                       _TMR0 0001  
                     _TMR2 0011                       _WREN 0C62                       _SYNC 04C4  
   __size_of_Calc_SetPoint 012F     __end_of_USARTWriteChar 1010                       _main 0AFA  
             ___ftpack@arg 0020               ___ftpack@exp 0023                       btemp 007E  
           ?_USARTWriteInt 002F                       start 0012               ReadEEP@DataH 002C  
             ___ftmul@cntr 0039               ___ftmul@sign 003A            __end_of_ReadEEP 1DE4  
             ___fttol@exp1 0035               ___fttol@lval 0031            __end_of_SetMode 1B2A  
          __end_of_SetTime 1AF7                      l11001 117E                      l11003 118A  
                    l11005 1193                      l11021 1B00                      l11101 10E4  
                    l11023 1B03                      l11031 1E5B                      l11103 10ED  
                    l11111 11AA                      l11025 1B04                      l11041 1E97  
                    l11033 1E5F                      l11121 11CE                      l11113 11AE  
                    l11105 1194                      l11201 14B1                      l11019 1AF7  
                    l11043 1E99                      l11035 1E85                      l11027 1E2F  
                    l11051 1EB3                      l11131 1201                      l11123 11D2  
                    l11115 11B9                      l11107 119B                      l11211 1507  
                    l11203 14B9                      l11045 1E9C                      l11037 1E87  
                    l11029 1E35                      l11061 1EF0                      l11053 1EC1  
                    l11141 1226                      l11133 120F                      l11125 11E0  
                    l11117 11BE                      l11109 11A6                      l11221 1525  
                    l11205 14DB                      l11213 1509                      l11301 1CDE  
                    l11039 1E89                      l11063 1EF2                      l11055 1EC7  
                    l11047 1E9D                      l11071 105C                      l11143 1232  
                    l11135 1211                      l11127 11E6                      l11119 11C6  
                    l11223 1531                      l11215 1514                      l11207 14FA  
                    l11231 1D59                      l11311 1D03                      l11303 1CED  
                    l11065 1EFB                      l11057 1ED0                      l11049 1EAF  
                    l11081 1082                      l11073 1063                      l11145 123B  
                    l11137 121A                      l11129 11EF                      l11225 1539  
                    l11217 1516                      l11209 1500                      l11241 1D78  
                    l11233 1D5A                      l11313 1D0A                      l11305 1CEF  
                    l11321 1C8A                      l11401 1300                      l11059 1EE2  
                    l11067 1F03                      l11091 10B4                      l11083 108A  
                    l11075 106E                      l11139 1222                      l11219 1524  
                    l11235 1D65                      l11243 1D83                      l11227 1D50  
                    l11251 123F                      l11315 1D0C                      l11307 1CF8  
                    l11323 1C8F                      l11331 0D4F                      l11411 1321  
                    l11403 1307                      l10701 089A                      l11069 1F0C  
                    l11093 10C3                      l11085 108E                      l11077 1072  
                    l11245 1D89                      l11237 1D6B                      l11229 1D53  
                    l11261 127F                      l11253 1247                      l11309 1CFD  
                    l11325 1C94                      l11317 1C6B                      l11341 0D6C  
                    l11333 0D53                      l11421 1354                      l11413 1327  
                    l11405 1308                      l11501 1CA4                      l10703 08AD  
                    l10711 1E06                      l11095 10CC                      l11087 109C  
                    l11079 1076                      l11183 1B93                      l11191 147D  
                    l11247 1D91                      l11239 1D73                      l11271 12E3  
                    l11263 12AA                      l11255 1249                      l11327 1C99  
                    l11319 1C82                      l11351 0D89                      l11343 0D70  
                    l11335 0D59                      l11431 1387                      l11423 135B  
                    l11415 132C                      l11407 1319                      l11503 1CB2  
                    l11511 0789                      l10705 08C0                      l10721 1E2D  
                    l10713 1E27                      l10801 1B15                      l11089 10A2  
                    l11097 10D4                      l11185 1B94                      l11193 1495  
                    l11249 1D96                      l11273 12EC                      l11257 1255  
                    l11265 12AF                      l11281 1DAE                      l11361 0DAE  
                    l11353 0D8E                      l11345 0D76                      l11337 0D64  
                    l11329 0D35                      l11433 1389                      l11425 1367  
                    l11417 133E                      l11409 1320                      l11441 1618  
                    l11505 1CB9                      l11521 07DE                      l11513 0791  
                    l11601 0015                      l10707 08C7                      l10715 1E29  
                    l10731 1B88                      l10723 1B70                      l10803 1ABA  
                    l10811 1B17                      l11099 10D8                      l11187 1BA0  
                    l11195 1499                      l11267 12BB                      l11259 1260  
                    l11283 1DB7                      l11291 1DDA                      l11275 1D9D  
                    l11371 0DDB                      l11363 0DB4                      l11355 0D90  
                    l11347 0D81                      l11339 0D6B                      l11435 1391  
                    l11427 136F                      l11419 1350                      l11451 164B  
                    l11443 162B                      l11507 1CD2                      l11515 0793  
                    l11531 038C                      l11523 0319                      l11611 0102  
                    l11603 0029                      l10661 1B3D                      l10717 1E2A  
                    l10709 1DE4                      l10733 1B8F                      l10725 1B78  
                    l10741 1BF2                      l10805 1ABE                      l10813 1B1F  
                    l10821 1AF0                      l11189 1BA7                      l11197 149D  
                    l11269 12C3                      l11293 1DE3                      l11285 1DCB  
                    l11277 1DA5                      l11381 0E0F                      l11373 0DE5  
                    l11365 0DBF                      l11357 0D96                      l11349 0D85  
                    l11437 1398                      l11429 137D                      l11461 1681  
                    l11453 164C                      l11445 1632                      l11517 0797  
                    l11509 066F                      l11541 0445                      l11533 03B3  
                    l11525 031A                      l11621 027E                      l11613 0119  
                    l11605 00DD                      l11701 09EF                      l10663 1B4E  
                    l10671 1B54                      l10719 1E2B                      l10727 1B79  
                    l10751 1BF9                      l10743 1BF3                      l10735 1BE4  
                    l10807 1AC0                      l10815 1AC3                      l10823 1AF3  
                    l11199 14A3                      l11287 1DCF                      l11279 1DAD  
                    l11295 1CD3                      l11391 0E4A                      l11383 0E20  
                    l11375 0DEB                      l11367 0DCC                      l11359 0DA4  
                    l11439 13B4                      l11471 16A9                      l11463 1687  
                    l11455 1679                      l11447 1633                      l11519 07AF  
                    l11551 04BD                      l11543 046C                      l11535 03DA  
                    l11527 033E                      l11631 029E                      l11623 0284  
                    l11615 0122                      l11607 00E4                      l11711 0A68  
                    l11703 0A08                      l10665 1B52                      l10681 1B6C  
                    l10673 1B5F                      l10729 1B80                      l10753 1C05  
                    l10761 1C0A                      l10745 1BF5                      l10737 1BEE  
                    l10809 1AC1                      l10817 1AE9                      l10921 1F9A  
                    l10913 1F83                      l10657 1E99                      l11289 1DD3  
                    l11297 1CD8                      l11393 0E5A                      l11385 0E24  
                    l11377 0DF6                      l11369 0DD4                      l11481 16D2  
                    l11473 16B1                      l11465 168C                      l11457 167A  
                    l11449 1644                      l11553 04C3                      l11545 0493  
                    l11537 0402                      l11529 0365                      l11561 0FF1  
                    l11641 02E9                      l11633 02A5                      l11625 028A  
                    l11617 0177                      l11609 00F9                      l11721 0ACE  
                    l11713 0A80                      l11705 0A20                      l11801 1452  
                    l10667 1003                      l10675 1B63                      l10691 083A  
                    l10683 0800                      l10763 1C0C                      l10755 1C06  
                    l10747 1BF7                      l10739 1BF1                      l10771 1ACD  
                    l10819 1AED                      l10931 1FCD                      l10923 1FA7  
                    l10915 1F89                      l10659 1E9B                      l11299 1CDC  
                    l11395 0E5E                      l11387 0E35                      l11379 0E03  
                    l11483 16DA                      l11475 16B8                      l11467 1690  
                    l11459 167B                      l11491 1BB5                      l11555 04CA  
                    l11539 0429                      l11547 0494                      l11571 0CA0  
                    l11563 0C06                      l11643 02EF                      l11635 02B2  
                    l11627 0290                      l11619 0204                      l11651 04E3  
                    l11715 0A98                      l11707 0A38                      l11723 0ACF  
                    l11731 156D                      l11803 1459                      l11811 0AFA  
                    l10669 100B                      l10677 1B64                      l10693 084D  
                    l10685 0801                      l10757 1C08                      l10749 1BF8  
                    l10765 1D0D                      l10773 1AD9                      l10781 1AE0  
                    l10941 1FFE                      l10933 1FD8                      l10925 1FAF  
                    l10917 1F91                      l11397 0E7A                      l11389 0E46  
                    l11485 16E2                      l11477 16BD                      l11469 16A1  
                    l11493 1BBC                      l11557 04D0                      l11549 04B9  
                    l11581 0CEA                      l11573 0CCB                      l11565 0C0B  
                    l11645 02FF                      l11637 02E2                      l11629 0296  
                    l11661 0535                      l11653 0500                      l11717 0A9F  
                    l11709 0A50                      l11725 0AF4                      l11741 15CB  
                    l11733 1592                      l11805 145A                      l11821 0B0B  
                    l11813 0AFE                      l10679 1B65                      l10695 0860  
                    l10687 0814                      l10759 1C09                      l10767 1D21  
                    l10775 1AB1                      l10783 1AE1                      l10791 1B09  
                    l10935 1FE0                      l10927 1FB3                      l10919 1F98  
                    l10951 1040                      l10943 1010                      l11399 12ED  
                    l11487 16E9                      l11479 16C1                      l11495 1BC5  
                    l11559 0E7B                      l11575 0CD1                      l11567 0C19  
                    l11591 09C2                      l11583 08ED                      l11647 0305  
                    l11639 02E6                      l11671 0587                      l11663 0552  
                    l11655 0506                      l11719 0AB6                      l11743 15E5  
                    l11735 1599                      l11727 154B                      l11751 1F2B  
                    l11807 145B                      l11831 0B31                      l11823 0B11  
                    l11815 0AFF                      l10697 0873                      l10689 0827  
                    l10769 1D4C                      l10785 1AE4                      l10777 1ADB  
                    l10793 1B0A                      l10937 1FE8                      l10929 1FBD  
                    l10953 1052                      l10945 101B                      l11489 1705  
                    l11497 1BE0                      l11577 0CD7                      l11569 0C81  
                    l11593 09C8                      l11585 0953                      l11681 05D9  
                    l11673 05A4                      l11665 0558                      l11657 050C  
                    l11649 04D8                      l11745 1609                      l11737 15A1  
                    l11729 1555                      l11761 1F79                      l11753 1F2E  
                    l11809 1479                      l11841 0B68                      l11833 0B32  
                    l11825 0B1A                      l11817 0B00                      l10699 0886  
                    l10787 1AE5                      l10779 1ADF                      l10795 1B0D  
                    l10939 1FFA                      l10955 105B                      l10947 101F  
                    l10971 111D                      l10963 10EE                      l11499 1C9D  
                    l11579 0CE4                      l11595 09D2                      l11587 0982  
                    l11691 063F                      l11683 05F3                      l11675 05B0  
                    l11667 057B                      l11659 052F                      l11739 15C4  
                    l11747 160A                      l11763 1F7F                      l11755 1F31  
                    l11771 13C3                      l11851 0B95                      l11843 0B77  
                    l11835 0B48                      l11827 0B1F                      l11819 0B05  
                    l10797 1B10                      l10789 1B05                      l10949 1037  
                    l10981 1131                      l10973 111E                      l10965 1101  
                    l11597 09D8                      l11589 09AA                      l11693 0645  
                    l11685 05F9                      l11677 05CD                      l11669 0581  
                    l11757 1F77                      l11749 1F0D                      l11773 13CA  
                    l11781 13E2                      l11765 13B5                      l11861 0BC9  
                    l11853 0B99                      l11845 0B81                      l11837 0B5B  
                    l11829 0B23                      l10799 1B14                      l10991 115C  
                    l10983 1138                      l10975 1124                      l10967 110A  
                    l11599 09E7                      l11695 064B                      l11687 0616  
                    l11679 05D3                      l11759 1F78                      l11791 141B  
                    l11783 1405                      l11775 13CB                      l11767 13BA  
                    l11871 0BEC                      l11863 0BD0                      l11855 0BA7  
                    l11847 0B87                      l11839 0B62                      l10993 1165  
                    l10985 1141                      l10977 112B                      l10969 110B  
                    l11697 0668                      l11689 061C                      l11785 140D  
                    l11793 141C                      l11777 13D7                      l11769 13C2  
                    l11873 0BF2                      l11865 0BD6                      l11857 0BA8  
                    l11849 0B8E                      l10995 1167                      l10987 1143  
                    l10979 112D                      l11699 09EE                      l11795 1424  
                    l11787 1413                      l11779 13DB                      l11875 0BFA  
                    l11859 0BB6                      l11867 0BE5                      l10997 1173  
                    l10989 1156                      l11797 142A                      l11789 141A  
                    l11869 0BEB                      l10999 117A                      l11799 144C  
          __end_of___aldiv 123C            __end_of___almod 10EE                      ?_main 0070  
                    _EEADR 010D            __end_of___ftadd 0E7B                      _EEDAT 010C  
                    _BRG16 0C3B                      _CARRY 0018            __end_of___ftdiv 13B5  
                    _EEPGD 0C67            __end_of___ftneg 1B05                      _ANSEL 0188  
          __end_of___lldiv 1F0D           USARTWriteChar@ch 0020            __end_of___ftmul 1706  
                    _T1CON 0010            __end_of___fttol 1194                      _T2CON 0012  
                    _RCREG 001A                      _TMR1H 000F                      _TMR1L 000E  
                    _SPBRG 0099                      _TRISA 0085                      _TRISB 0086  
                    _TRISC 0087                      _TXREG 0019                 _DispallCur 04D8  
          __end_of_getData 147D        ___lmul@multiplicand 0024               ___lltoft@exp 0032  
               _Commandstr 01C1           USARTWriteInt@val 002F           USARTWriteInt@str 0037  
               _Make_Table 1C6B              ___awtoft@sign 002D            __end_of_initadc 1ABA  
          __end_of_initall 1F83              ___ftpack@sign 0024                      main@i 005F  
                    _strtb 07FD                      _strnw 07FE                      pclath 000A  
               _CurStepDir 00EC           __end_of_Calc_Err 1618            ?_USARTWriteChar 0070  
         __end_of_ChkRange 1E2F                      status 0003                      wtemp0 007E  
       __size_of_USARTinit 0017               __end_of_main 0C06              _Calc_SetPoint 0C06  
               _Readeeprom 066F                     ??_main 005E              ___fttol@sign1 0030  
           _MotionComplete 006E          Calc_PID_const@Td1 0059          Calc_PID_const@Ti1 0053  
                   _ADCON0 001F                     _ADCON1 009F                     _CCP2IE 0468  
                   _CCP2IF 0068                     _ADRESH 001E                     _ADRESL 009E  
                   _EEDATA 010C                     _CCPR2H 001C                     _CCPR2L 001B  
                   _EECON1 018C                     _EECON2 018D           __end_of___awtoft 1BE1  
         __end_of___ftpack 2000           __end_of_WriteEEP 1D0D                     _ANSELH 0189  
                   _CLKVIZ 006B               ?_UARTGetChar 0070             _Calc_PID_const 0E7B  
         __end_of___lltoft 1CD3                     i1l5613 1C6A                     i1l5614 1C4C  
                   i1l5615 1C55                     i1l5616 1C69                     i1l5617 1C6A  
                   u310_20 1C43                     u310_21 1C42                     i1l6750 17CF  
                   i1l6751 1757                     u311_20 1C47                     i1l6752 176D  
                   i1l6753 176F                     i1l6754 1780                     i1l6755 17B2  
                   i1l6756 17F4                     i1l6748 1721                     i1l6757 17F2  
                   i1l6749 171F                     i1l6758 17F4                     u312_20 1C63  
                   u312_21 1C62                     u320_21 1799                     u320_22 17A0  
                   u320_23 17A7                     u321_20 17B1                     u313_20 170A  
                   _INTCON 000B                     u321_21 17B0                     u313_21 1709  
                   u322_20 17C1                     u314_20 170E                     u314_21 170D  
                   u322_25 17BC                     u323_20 17D4                     u315_20 171A  
                   u323_21 17D3                     u315_21 1719                     u324_20 17DA  
                   u316_20 1727                     u324_21 17D9                     u316_21 1726  
                   u325_20 17EE                     u317_20 172D                     u325_21 17ED  
                   u317_21 172C                     u318_20 1768                     u318_21 1767  
                   u319_20 177E                     u319_21 177D                     _OSCCON 008F  
                   _TMR2IE 0461                     _TMR2IF 0061                     _SPBRGH 009A  
                   _TMR1ON 0080                     _TMR2ON 0092            ??_USARTWriteInt 0033  
                ??_ReadEEP 0027                     _Capidx 007C                 WrByte@addr 0021  
               WrByte@data 0020                     _RdByte 1B6D                     _CurVal 00AC  
                   _MaxVal 01A0                     _MinVal 01A4                  ??_SetMode 0020  
                ??_SetTime 0020                     _SetDir 1AC3                     _WrByte 1BE1  
                   ___ftge 1E2F                     ___lmul 1010                  ??___aldiv 0028  
                ??___almod 0028                  ??___ftadd 004C                  ??___ftdiv 003C  
                ??___ftneg 002B                  ??___lldiv 0035                  ??___ftmul 0031  
                ??___fttol 002C       Calc_PID_op@NoStepOut 0059             ?_Calc_SetPoint 0070  
         str_to_num@String 003D         __size_of_MoveMotor 0030   __end_of_USARTWriteString 1BB5  
                ??_getData 0045                     clrloop 1AA2          __end_of_USARTinit 1B54  
    ___ftmul@f3_as_product 0036                  ??_initadc 0020                  ??_initall 005C  
              _CurStepMode 00ED                ?_DispallCur 0070                _CurStepTime 00EE  
                   saved_w 007E                ?_Make_Table 0020     __end_of_Calc_PID_const 1000  
             WriteEEP@Data 0022       __size_of_getrangeval 00ED               WriteEEP@addr 0026  
          UARTGetChar@temp 0021                 ___ftadd@f1 0046                 ___ftadd@f2 0049  
               ___ftge@ff1 0028                 ___ftge@ff2 002B              _Tacho_Reading 00C4  
               ___ftdiv@f1 0039                 ___ftdiv@f2 0036                 ___ftdiv@f3 0041  
               ___ftneg@f1 0028                 ___awtoft@c 0028                 ___ftmul@f1 002B  
               ___ftmul@f2 002E                 ___fttol@f1 0028             __pcstackCOMMON 0070  
             __pidataBANK3 1AA9                _Old_Capture 00E7                 ___lltoft@c 002D  
              _New_Capture 00E5           ??_USARTGetString 0022                ?_Readeeprom 0070  
                ?_Calc_Err 0070               ?_Calc_PID_op 0070                  ?_ChkRange 0020  
          ?_Calc_PID_const 0070              ??_StoreCurVal 0036                 __pbssBANK0 0061  
               __pbssBANK1 00A0                 __pbssBANK3 0190          __end_of_MoveMotor 1C6B  
                  ?_RdByte 0070                    ?_SetDir 0070         __size_of_initports 000E  
      __size_of_DispallCur 0197                 __pmaintext 0AFA                    ?_WrByte 0020  
          ??_Calc_SetPoint 0041                    ?___ftge 0028                    ?___lmul 0020  
      __size_of_Make_Table 0032                 __pintentry 0004                 _get_Actrpm 08ED  
                  _CCP2CON 001D                 __ptext1150 0015                 __ptext1151 08ED  
               __ptext1160 0D35                 __ptext1152 0C06                 __ptext1161 1C6B  
               __ptext1153 0E7B                 __ptext1145 13B5                 __ptext1170 1E9D  
               __ptext1162 1CD3                 __ptext1154 0319                 __ptext1146 1F0D  
               __ptext1171 1E2F                 __ptext1163 1D9A                 __ptext1155 066F  
               __ptext1147 1548                 __ptext1180 1B05                 __ptext1172 1AF7  
               __ptext1164 123C                 __ptext1156 1C9D                 __ptext1148 09EE  
               __ptext1181 1ADB                 __ptext1173 10EE                 __ptext1165 1D50  
               __ptext1157 1BB5                 __ptext1149 04D8                 __ptext1190 1000  
               __ptext1182 1AB1                 __ptext1174 1010                 __ptext1166 147D  
               __ptext1158 1618                 __ptext1191 1B3D                 __ptext1183 1ACD  
               __ptext1175 1F83                 __ptext1167 1B90                 __ptext1159 12ED  
               __ptext1192 1706                 __ptext1184 1D0D                 __ptext1176 1AE9  
               __ptext1168 1194                 __ptext1193 1C3B                 __ptext1185 1BE1  
               __ptext1177 1AC3                 __ptext1169 105C                 __ptext1194 0000  
               __ptext1186 1B6D                 __ptext1178 1B17                 __ptext1187 1DE4  
               __ptext1179 1ABA                 __ptext1188 0800                 __ptext1189 1B54  
           ___lmul@product 0029     __size_of_Get_ADC_Count 0043                  ?___awtoft 0028  
                ?___ftpack 0020                  ?_WriteEEP 0022                  ?___lltoft 002D  
               ??_Calc_Err 004D              ??_Writeeeprom 002B                    i1l10901 17E3  
                  i1l10831 1C4C                    i1l10911 17F2                    i1l10903 17E6  
                  i1l10833 1C51                    i1l10825 1C3B                    i1l10905 17EE  
                  i1l10841 1706                    i1l10835 1C55                    i1l10827 1C43  
                  i1l10907 17EF                    i1l10851 171A                    i1l10843 170A  
                  i1l10837 1C5D                    i1l10829 1C47                    i1l10909 17F0  
                  i1l10861 172D                    i1l10853 171D                    i1l10845 170E  
                  i1l10839 1C63                    i1l10871 1762                    i1l10863 1735  
                  i1l10855 171F                    i1l10847 1710                    i1l10881 1780  
                  i1l10873 1768                    i1l10865 1746                    i1l10849 1714  
                  i1l10857 1721                    i1l10883 17A7                    i1l10875 176F  
                  i1l10867 1756                    i1l10859 1727                    i1l10891 17CF  
                  i1l10893 17D4                    i1l10885 17AB                    i1l10877 1777  
                  i1l10869 1757                    i1l10895 17DA                    i1l10879 177F  
                  i1l10887 17B2                    i1l10897 17DD                    i1l10889 17CB  
               ??_ChkRange 0024                    i1l10899 17DE                    _ACurVal 00A0  
                  _BCurVal 00A4                    _DCurVal 00B0                    _OSCTUNE 0090  
         ??_USARTWriteChar 0020                    _ICurVal 00B4         USARTWriteInt@F1821 01CF  
                  _PCurVal 00BC                    _SCurVal 00C0       __size_of_UARTGetChar 0019  
                  _Command 006C        __size_of_Readeeprom 0188                    _ReadEEP 1D9A  
                  _ZCurVal 00C8                    _MaxStep 00CC                  _ADC_Count 00DB  
                  _NoTeeth 00B8            __size_of_RdByte 0023        __end_of_StoreCurVal 0AFA  
                  _SetMode 1B17                    _SetTime 1AE9            __size_of_SetDir 000A  
          __size_of_WrByte 002D                    ___aldiv 1194                    ___almod 105C  
          __size_of___ftge 006E            __size_of___lmul 004C                    ___ftadd 0D35  
                  ___ftdiv 12ED                    ___ftneg 1AF7                    ___lldiv 1E9D  
                  ___ftmul 1618                    ___fttol 10EE                 ??___awtoft 002B  
               ??___ftpack 0025                 ??_WriteEEP 0027                    _getData 13B5  
                _MS100Flag 006D                 ??___lltoft 0031                 _inittimer0 1ABA  
               _inittimer1 1ADB                 _inittimer2 1B05                    _initadc 1AB1  
                  _initall 1F0D           ___aldiv@dividend 0024          __end_of_initports 1ADB  
      __end_of_Writeeeprom 04D8       end_of_initialization 1C37              _Get_ADC_Count 1D0D  
                  init_ram 1B2E               _CurTotNoStep 00E1            ___lldiv@divisor 002D  
          ___lldiv@counter 003A                 _isrroutine 1706                  _RCSTAbits 0018  
         ___aldiv@quotient 002B                ?_get_Actrpm 0070          ?_USARTWriteString 0070  
                _PORTAbits 0005                  _PORTBbits 0006                  _PORTCbits 0007  
       ??_USARTWriteString 0021               ??_DispallCur 0041       __size_of_Calc_PID_op 0304  
                _TRISCbits 0087               ??_Make_Table 0022                  _USARTinit 1B3D  
                _Cap_Diff1 00DD             ?_Get_ADC_Count 0070                _StoreCurVal 09EE  
              ___ftdiv@exp 0044              Calc_Err@errno 004F                  _TXSTAbits 0098  
           USARTWriteInt@i 003F      __end_of_USARTWriteInt 1548                  _BoardFreq 00A8  
               _str_to_num 123C                ___ftmul@exp 0035             __end_of_RdByte 1B90  
       __end_of_DispallCur 066F             __end_of_SetDir 1ACD             __end_of_WrByte 1C0E  
       __end_of_Make_Table 1C9D             __end_of___ftge 1E9D             __end_of___lmul 105C  
             ??_Readeeprom 0033                  _CurNoStep 00DF           ??_Calc_PID_const 0053  
              ?_inittimer0 0070                ?_inittimer1 0070                ?_inittimer2 0070  
            ??_getrangeval 0020                _Writeeeprom 0319        start_initialization 1C0E  
        __size_of_Calc_Err 00D0          __size_of_ChkRange 004B                 ?_USARTinit 0070  
         Calc_PID_op@angle 0057        __size_of_get_Actrpm 0101         __end_of_Readeeprom 07F7  
                _MoveMotor 1C3B                   ??_RdByte 0020                ?_isrroutine 0070  
                 ??_SetDir 0020                   ??_WrByte 0021                   ??___ftge 002E  
                 ??___lmul 0028                __pdataBANK3 01CF          __size_of___awtoft 002C  
        __size_of___ftpack 007D          __size_of_WriteEEP 003A          __size_of___lltoft 0036  
              __pbssCOMMON 007C              __pcstackBANK0 0020            ??_Get_ADC_Count 0020  
      __end_of_getrangeval 08ED      USARTGetString@charcur 0024                  WriteEEP@i 0029  
                 ?_ReadEEP 0023        Make_Table@TotNoStep 0020                 ?_MoveMotor 0070  
      __size_of_inittimer0 0009        __size_of_inittimer1 000E        __size_of_inittimer2 0012  
                 ?_SetMode 0070                   ?_SetTime 0070                ?_str_to_num 002D  
      _Calc_PID_const$8869 0056                   ?___aldiv 0020                   ?___almod 0020  
                 ?___ftadd 0046                   ?___ftdiv 0036                   ?___ftneg 0028  
                 ?___lldiv 002D                   ?___ftmul 002B                   ?___fttol 0028  
    __end_of_Calc_SetPoint 0D35            USARTGetString@i 0023                   ?_getData 0070  
         ___almod@dividend 0024                  __pstrings 07F7           _Calc_PID_op$8870 0054  
                 ?_initadc 0070                   ?_initall 0070              isrroutine@idx 007B  
              str_to_num@i 003C                ??_USARTinit 0020        __size_of_isrroutine 00FA  
  __size_of_USARTGetString 004A                ChkRange@val 0020              ??_UARTGetChar 0020  
                _initports 1ACD            ___aldiv@divisor 0020          interrupt_function 0004  
          ___aldiv@counter 0029               ??_get_Actrpm 0041                   _DeadBand 00E3  
              __stringbase 07FC                   _Cap_Diff 0190                   _Calc_Err 1548  
                 ReadEEP@i 0030                   _ChkRange 1DE4                _getrangeval 0800  
      __size_of_str_to_num 00B1             StoreCurVal@val 0032                   _Crankflg 00EB  
        ___lmul@multiplier 0020              str_to_num@Num 0038                   _Count4ms 007D  
               ?_initports 0070  __size_of_USARTWriteString 0025               ?_StoreCurVal 0032  
       __end_of_get_Actrpm 09EE            Calc_PID_op@diff 005B                ??_MoveMotor 0070  
  __size_of_USARTWriteChar 0010        __end_of_UARTGetChar 1B6D           __size_of_ReadEEP 004A  
                 _SetPoint 0068           __size_of_SetMode 0013           __size_of_SetTime 000E  
                init_fetch 1B2A           __size_of___aldiv 00A8           __size_of___almod 0092  
         __size_of___ftadd 0146           __size_of___ftdiv 00C8           __size_of___ftneg 000E  
         __size_of___lldiv 0070           __size_of___ftmul 00EE           __size_of___fttol 00A6  
                 ___awtoft 1BB5                   ___ftpack 1F83                   _WriteEEP 1CD3  
                 ___lltoft 1C9D              ??_Calc_PID_op 0053                 _ANTICLKVIZ 006A  
         __size_of_getData 00C8               ??_inittimer0 0020               ??_inittimer1 0020  
             ??_inittimer2 0020               ?_Writeeeprom 0070           __size_of_initadc 0009  
         __size_of_initall 0076            ___almod@divisor 0020            ___almod@counter 0029  
            __size_of_main 010C                   getData@i 0046                   clear_ram 1AA1  
             ??_isrroutine 0070         __end_of_inittimer0 1AC3         __end_of_inittimer1 1AE9  
       __end_of_inittimer2 1B17     __size_of_USARTWriteInt 00CB             _USARTGetString 1D50  
      __end_of_Calc_PID_op 0319         __end_of_isrroutine 1800                _UARTGetChar 1B54  
                 intlevel1 0000                ??_initports 0020           ___lldiv@dividend 0031  
               _PIDCycleNo 006F                  stringcode 07F7               ??_str_to_num 0031  
      USARTWriteString@str 0022                 _OPTION_REG 0081     __end_of_USARTGetString 1D9A  
         ___lldiv@quotient 0036                   stringdir 07F7                   stringtab 07F7  
             ___aldiv@sign 002A         __end_of_str_to_num 12ED      __end_of_Get_ADC_Count 1D50  
         _USARTWriteString 1B90             WriteEEP@status 002A    __size_of_Calc_PID_const 0185  
             ___almod@sign 002A          Writeeeprom@retval 0031                 RdByte@Data 0022  
               RdByte@addr 0021       __size_of_StoreCurVal 010C             _USARTWriteChar 1000  
            _USARTWriteInt 147D  
